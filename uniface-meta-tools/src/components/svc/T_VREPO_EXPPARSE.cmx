<?xml version='1.0' encoding='UTF-8' ?>
<!-- Created by Uniface - (C) Uniface B.V. All rights reserved -->
<!DOCTYPE UNIFACE PUBLIC "UNIFACE.DTD" "UNIFACE.DTD">
<UNIFACE release="9.6" xmlengine="2.0">
<TABLE>
<DSC name="UFORM" model="DICT" system="S" pseudo ="73" level="1" noupdate="0"
 rbk="0" ffsql="0" transnr="0" segsize="0" ufocc="1000" charset=".U">
<FLD name="UTIMESTAMP" seqno="1" type="E" level="2" pack="0" scale="0" length="15"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UCOMPSTAMP" seqno="2" type="E" level="2" pack="0" scale="0" length="15"
 pointer="0" inum="0" ufocc="0" />
<FLD name="ULABEL" seqno="3" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="1" ufocc="0" mandatory="yes" idxnum="1" idxsnr="101" />
<FLD name="FTYP" seqno="4" type="S" level="2" pack="0" scale="0" length="4"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UVERS" seqno="5" type="S" level="2" pack="0" scale="0" length="12"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UDESCR" seqno="6" type="S" level="2" pack="0" scale="0" length="25"
 pointer="0" inum="0" ufocc="0" />
<FLD name="FHEAD" seqno="7" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="VMAAT" seqno="8" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="HMAAT" seqno="9" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UCOLOR" seqno="10" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="WVPOS" seqno="11" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="WHPOS" seqno="12" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="WVSIZ" seqno="13" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="WHSIZ" seqno="14" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="CLRSCRN" seqno="15" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UBORDER" seqno="16" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="RIBIN" seqno="17" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="0" ufocc="0" />
<FLD name="RIBOT" seqno="18" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="0" ufocc="0" />
<FLD name="MOVABLE" seqno="19" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="VIDEOINVERSE" seqno="20" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="VIDEOBRIGHT" seqno="21" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="VIDEOUNLINE" seqno="22" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="VIDEOBLINK" seqno="23" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UPANEL" seqno="24" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="0" ufocc="0" />
<FLD name="POSPANEL" seqno="25" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UPULL" seqno="26" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="0" ufocc="0" />
<FLD name="HIDESTACK" seqno="27" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TEMPLATENAME" seqno="28" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="1" ufocc="0" idxnum="2" idxsnr="1" />
<FLD name="UINHERIT" seqno="29" type="B" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="LIBRAR" seqno="30" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UTRANSACT" seqno="31" type="S" level="2" pack="0" scale="0" length="8"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TPLACTUAL" seqno="32" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D3,0,0,0,,0,0,0,," />
<FLD name="CONSTRAINTS" seqno="33" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D4,0,0,0,,0,0,0,," />
<FLD name="INIT" seqno="34" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C1,0,0,0,,0,0,0,," />
<FLD name="CLEAR" seqno="35" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C2,0,0,0,,0,0,0,," />
<FLD name="RETRIEVE" seqno="36" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C3,0,0,0,,0,0,0,," />
<FLD name="RECORD" seqno="37" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C4,0,0,0,,0,0,0,," />
<FLD name="STORE" seqno="38" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C5,0,0,0,,0,0,0,," />
<FLD name="DELET" seqno="39" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C6,0,0,0,,0,0,0,," />
<FLD name="ACCEPT" seqno="40" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C7,0,0,0,,0,0,0,," />
<FLD name="QUIT" seqno="41" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C8,0,0,0,,0,0,0,," />
<FLD name="MENU" seqno="42" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C9,0,0,0,,0,0,0,," />
<FLD name="INTKEY" seqno="43" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CA,0,0,0,,0,0,0,," />
<FLD name="SPRINT" seqno="44" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CB,0,0,0,,0,0,0,," />
<FLD name="EPRINT" seqno="45" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CC,0,0,0,,0,0,0,," />
<FLD name="ASYNC" seqno="46" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CD,0,0,0,,0,0,0,," />
<FLD name="GENERAL" seqno="47" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CE,0,0,0,,0,0,0,," />
<FLD name="FORMPIC" seqno="48" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E0,0,0,0,,0,0,0,," />
<FLD name="HEADER" seqno="49" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E3,0,0,0,,0,0,0,," />
<FLD name="LISTING" seqno="50" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E5,0,0,0,,0,0,0,," />
<FLD name="PERF" seqno="51" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E1,0,0,0,,0,0,0,," />
<FLD name="PROTO" seqno="52" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E2,0,0,0,,0,0,0,," />
<FLD name="TITLE" seqno="53" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E7,0,0,0,,0,0,0,," />
<FLD name="WINPROP" seqno="54" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D2,0,0,0,,0,0,0,," />
<FLD name="FRLF" seqno="55" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E4,0,0,0,,0,0,0,," />
<FLD name="FRGF" seqno="56" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E6,0,0,0,,0,0,0,," />
<FLD name="SFUNC" seqno="57" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DC,0,0,0,,0,0,0,," />
<FLD name="HTMLPROP" seqno="58" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DD,0,0,0,,0,0,0,," />
<FLD name="USCONTAINED" seqno="59" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CF,0,0,0,,0,0,0,," />
<FLD name="UEXECDEF" seqno="60" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D0,0,0,0,,0,0,0,," />
<FLD name="UPOPUP" seqno="61" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D5,0,0,0,,0,0,0,," />
<FLD name="UML_DATA" seqno="62" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D6,0,0,0,,0,0,0,," />
<FLD name="HTML_CMPPROP" seqno="63" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D1,0,0,0,,0,0,0,," />
<FLD name="HTML_FORMAT" seqno="64" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D7,0,0,0,,0,0,0,," />
<FLD name="HTML_STYLES" seqno="65" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D8,0,0,0,,0,0,0,," />
<FLD name="HTML_HOOK_H" seqno="66" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D9,0,0,0,,0,0,0,," />
<FLD name="HTML_HOOK_B" seqno="67" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DA,0,0,0,,0,0,0,," />
<FLD name="HTML_HOOK_E" seqno="68" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DB,0,0,0,,0,0,0,," />
<FLD name="HTML_BODYHOOK" seqno="69" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DE,0,0,0,,0,0,0,," />
<FLD name="HTML_CMPCLASS" seqno="70" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DF,0,0,0,,0,0,0,," />
<FLD name="GETSTATE" seqno="71" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E8,0,0,0,,0,0,0,," />
<FLD name="SETSTATE" seqno="72" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E9,0,0,0,,0,0,0,," />
<FLD name="UNOSTATE" seqno="73" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EA,0,0,0,,0,0,0,," />
<FLD name="CMP_EXT" seqno="74" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EB,0,0,0,,0,0,0,," />
<FLD name="UCTRIGGERS" seqno="75" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EC,0,0,0,,0,0,0,," />
<FLD name="UACCESSPATH" seqno="76" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\ED,0,0,0,,0,0,0,," />
<FLD name="USPLITPROP" seqno="77" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EE,0,0,0,,0,0,0,," />
<FLD name="TPLACTUAL2" seqno="78" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EF,0,0,0,,0,0,0,," />
<FLD name="USTATEMANAGEDBY" seqno="79" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\F0,0,0,0,,0,0,0,," />
<FLD name="HTMLSKELETON" seqno="80" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\F1,0,0,0,,0,0,0,," />
</DSC>
<OCC>
<DAT name="UTIMESTAMP">2015-11-17T11:06:41.00</DAT>
<DAT name="UCOMPSTAMP">2015-11-17T11:06:41.00</DAT>
<DAT name="ULABEL">T_VREPO_EXPPARSE</DAT>
<DAT name="WVPOS">0</DAT>
<DAT name="WHPOS">0</DAT>
<DAT name="WVSIZ">10</DAT>
<DAT name="WHSIZ">40</DAT>
<DAT name="CLRSCRN">N</DAT>
<DAT name="UBORDER">N</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UTRANSACT">1</DAT>
<DAT name="TPLACTUAL" xml:space='preserve'>
#Comment ----------------------------------------------
#Comment start_of_references
#ifdefined TEMPLATENAME
#info symbol TEMPLATENAME is already or also defined as a global or local constant
#endif
#define TEMPLATENAME=
#Comment 

#Comment end_of_references


#Comment ----------------------------------------------
#Comment start_of_mappings
#Comment end_of_mappings


#Comment ----------------------------------------------
#Comment start_of_symbols
#Comment end_of_symbols


#Comment ----------------------------------------------
</DAT>
<DAT name="FORMPIC" xml:space='preserve'>
 &uFRM;TYP=E&uSEP;NAM=DUMMY.DUMMY&uSEP;WID=20&uSEP;HEI=1&uSEP;HOC=20&uSEP;VOC=1&uFRM;</DAT>
<DAT name="SFUNC" xml:space='preserve'>;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testParseFormExport
;--------------------------------------------------------------------
variables
	Handle   vExportParser
	String   vWorkingDirectory
	String   vExportFilePath
	Boolean  vIsUnifaceExport
	String   vUnifaceRelease
	String   vObjectType
	DateTime vTimeStamp
	String   vObjectName
	String   vObjectLang
	String   vObjectLib
	String   vObjects
	String   vObject
	String   vMessages
endvariables

	newinstance "VREPO_EXPPARSER", vExportParser

	vWorkingDirectory	= $ldir()
	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseFormExport\SVN_WORKINGCOPY.xml"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	$instanceparent-&gt;assertEqual($status, 0, vMessages)		
	#include VUT:HANDLE_ASSERT
	
	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType, vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,  vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName, vObject, "OBJECT_NAME"
	getitem/id vObjectLang, vObject, "OBJECT_LANG"
	getitem/id vObjectLib,  vObject, "OBJECT_LIB"

	$instanceparent-&gt;assertTrue(vIsUnifaceExport, "SVN_WORKINGCOPY.xml should show as a Uniface Export, it doesn't.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vUnifaceRelease, "9.3", "SVN_WORKINGCOPY.xml exported from 9.3, version not parsed correctly.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectType, "form", "SVN_WORKINGCOPY.xml is a form, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "SVN_WORKINGCOPY", "SVN_WORKINGCOPY.xml contains SVN_WORKINGCOPY, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vTimeStamp, "2010030208231359", "SVN_WORKINGCOPY.xml has timestamp 2010030208231359, found %%vTimeStamp%%%.")		
	#include VUT:HANDLE_ASSERT
	
	return 0

end ;testParseFormExport


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testParseMessageExport
;--------------------------------------------------------------------
variables
	Handle   vExportParser
	String		vWorkingDirectory
	String		vExportFilePath
	Boolean		vIsUnifaceExport
	String		vUnifaceRelease
	String		vObjectType
	DateTime	vTimeStamp
	String		vObjectName
	String		vObjectLang
	String		vObjectLib
	String		vObjects
	String		vObject
	String		vMessages
endvariables

	newinstance "VREPO_EXPPARSER", vExportParser

	vWorkingDirectory	= $ldir()
	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseMessageExport\OK.xml"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	$instanceparent-&gt;assertEqual($status, 0, vMessages)		
	#include VUT:HANDLE_ASSERT

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,	vObject, "OBJECT_NAME"
	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"

	$instanceparent-&gt;assertTrue(vIsUnifaceExport, "OK.xml should show as a Uniface Export, it doesn't.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vUnifaceRelease, "9.3", "OK.xml exported from 9.3, version not parsed correctly.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectType, "message", "OK.xml is a message, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "OK", "OK.xml contains OK, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectLang, "USA", "OK.xml has language USA, parsed as %%vObjectLang%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectLib, "SVN_LIBRARY", "OK.xml is in library SVN_LIBRARY, found %%vObjectLib%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vTimeStamp, "2009100712252887", "OK.xml has timestamp 2009100712252887, found %%vTimeStamp%%%.")		
	#include VUT:HANDLE_ASSERT
	
	return 0

end ;testParseMessageExport


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testParseGlyphExport
;--------------------------------------------------------------------
variables
	Handle   vExportParser
	String		vWorkingDirectory
	String		vExportFilePath
	Boolean		vIsUnifaceExport
	String		vUnifaceRelease
	String		vObjectType
	DateTime	vTimeStamp
	String		vObjectName
	String		vObjectLang
	String		vObjectLib
	String		vObjects
	String		vObject
	String		vMessages
endvariables

	newinstance "VREPO_EXPPARSER", vExportParser

	vWorkingDirectory	= $ldir()
	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseGlyphExport\FILE.xml"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,	vObject, "OBJECT_NAME"
	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"

	$instanceparent-&gt;assertTrue(vIsUnifaceExport, "OK.xml should show as a Uniface Export, it doesn't.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vUnifaceRelease, "9.3", "OK.xml exported from 9.3, version not parsed correctly.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectType, "glyph", "FILE.xml is a glyph, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "FILE", "FILE.xml contains FILE, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectLang, "USA", "FILE.xml has language USA, parsed as %%vObjectLang%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectLib, "SVN_LIBRARY", "FILE.xml is in library SVN_LIBRARY, found %%vObjectLib%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vTimeStamp, "2009080309430434", "FILE.xml has timestamp 2009080309430434, found %%vTimeStamp%%%.")		
	#include VUT:HANDLE_ASSERT
	
	return 0

end ;testParseGlyphExport


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testParseFieldTemplateExport
;--------------------------------------------------------------------
variables
	Handle   vExportParser
	String		vWorkingDirectory
	String		vExportFilePath
	Boolean		vIsUnifaceExport
	String		vUnifaceRelease
	String		vObjectType
	DateTime	vTimeStamp
	String		vObjectName
	String		vObjectLang
	String		vObjectLib
	String		vObjects
	String		vObject
	String		vMessages
endvariables

	newinstance "VREPO_EXPPARSER", vExportParser

	vWorkingDirectory	= $ldir()
	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseFieldTemplateExport\COMMAND_BUTTON.xml"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,	vObject, "OBJECT_NAME"
	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"

	$instanceparent-&gt;assertTrue(vIsUnifaceExport, "COMMAND_BUTTON.xml should show as a Uniface Export, it doesn't.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vUnifaceRelease, "9.3", "COMMAND_BUTTON.xml exported from 9.3, version not parsed correctly.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectType, "field_template", "COMMAND_BUTTON.xml is a field template, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "COMMAND_BUTTON", "COMMAND_BUTTON.xml contains COMMAND_BUTTON, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vTimeStamp, "2009081011100615", "COMMAND_BUTTON.xml has timestamp 2009081011100615, found %%vTimeStamp%%%.")		
	#include VUT:HANDLE_ASSERT

	return 0

end ;testParseFieldTemplateExport


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testParseSignatureExport
;--------------------------------------------------------------------
variables
	Handle   vExportParser
	String		vWorkingDirectory
	String		vExportFilePath
	Boolean		vIsUnifaceExport
	String		vUnifaceRelease
	String		vObjectType
	DateTime	vTimeStamp
	String		vObjectName
	String		vObjectLang
	String		vObjectLib
	String		vObjects
	String		vObject
	String		vMessages
endvariables

	newinstance "VREPO_EXPPARSER", vExportParser

	vWorkingDirectory	= $ldir()
	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseSignatureExport\ISUBWCREV.xml"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,	vObject, "OBJECT_NAME"
	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"

	$instanceparent-&gt;assertTrue(vIsUnifaceExport, "ISUBWCREV.xml should show as a Uniface Export, it doesn't.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vUnifaceRelease, "9.3", "ISUBWCREV.xml exported from 9.3, version not parsed correctly.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectType, "signature", "ISUBWCREV.xml is a signature, parsed as %%vObjectType%%%.")
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "ISUBWCREV", "ISUBWCREV.xml contains ISUBWCREV, found %%vObjectName%%%.")
	#include VUT:HANDLE_ASSERT

	return 0

end ;testParseSignatureExport


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testParseFieldSyntaxExport
;--------------------------------------------------------------------
variables
	Handle   vExportParser
	String		vWorkingDirectory
	String		vExportFilePath
	Boolean		vIsUnifaceExport
	String		vUnifaceRelease
	String		vObjectType
	DateTime	vTimeStamp
	String		vObjectName
	String		vObjectLang
	String		vObjectLib
	String		vObjects
	String		vObject
	String		vMessages
endvariables

	newinstance "VREPO_EXPPARSER", vExportParser

	vWorkingDirectory	= $ldir()
	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseFieldSyntaxExport\ACCNAM.xml"

	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,	vObject, "OBJECT_NAME"
	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"

	$instanceparent-&gt;assertTrue(vIsUnifaceExport, "ACCNAM.xml should show as a Uniface Export, it doesn't.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vUnifaceRelease, "9.3", "ACCNAM.xml exported from 9.3, version not parsed correctly.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectType, "field_syntax", "ACCNAM.xml is a field syntax, parsed as %%vObjectType%%%.")
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "ACCNAM", "ACCNAM.xml contains ACCNAM, found %%vObjectName%%%.")
	#include VUT:HANDLE_ASSERT

	return 0

end ;testParseFieldSyntaxExport


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testParseIncludeExport
;--------------------------------------------------------------------
variables
	Handle   vExportParser
	String		vWorkingDirectory
	String		vExportFilePath
	Boolean		vIsUnifaceExport
	String		vUnifaceRelease
	String		vObjectType
	DateTime	vTimeStamp
	String		vObjectName
	String		vObjectLang
	String		vObjectLib
	String		vObjects
	String		vObject
	String		vMessages
endvariables

	newinstance "VREPO_EXPPARSER", vExportParser

	vWorkingDirectory	= $ldir()
	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseIncludeExport\IP_DEFINES.xml"

	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,	vObject, "OBJECT_NAME"
	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"

	$instanceparent-&gt;assertEqual(vObjectType, "include", "IP_DEFINES.xml is an include proc, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "IP_DEFINES", "IP_DEFINES.xml contains IP_DEFINES, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectLang, "P", "IP_DEFINES.xml has language USA, found %%vObjectLang%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectLib, "SVN_LIBRARY", "IP_DEFINES.xml is in library SVN_LIBRARY, found %%vObjectLang%%%.")		
	#include VUT:HANDLE_ASSERT

	return 0

end ;testParseIncludeExport


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testParsePopupMenuExport
;--------------------------------------------------------------------
variables
	Handle   vExportParser
	String		vWorkingDirectory
	String		vExportFilePath
	Boolean		vIsUnifaceExport
	String		vUnifaceRelease
	String		vObjectType
	DateTime	vTimeStamp
	String		vObjectName
	String		vObjectLang
	String		vObjectLib
	String		vObjects
	String		vObject
	String		vMessages
endvariables

	newinstance "VREPO_EXPPARSER", vExportParser

	vWorkingDirectory	= $ldir()
	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParsePopupMenuExport\SVN_WORKINGCOPY.xml"

	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,	vObject, "OBJECT_NAME"
	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"

	$instanceparent-&gt;assertEqual(vObjectType, "menu", "SVN_WORKINGCOPY.xml is a menu, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "SVN_WORKINGCOPY", "SVN_WORKINGCOPY.xml contains SVN_WORKINGCOPY, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectLang, "USA", "SVN_WORKINGCOPY.xml has language O, found %%vObjectLang%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectLib, "SVN_LIBRARY", "SVN_WORKINGCOPY.xml is in library SVN_LIBRARY, found %%vObjectLang%%%.")		
	#include VUT:HANDLE_ASSERT

	return 0

end ;testParsePopupMenuExport


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testParseMenuExport
;--------------------------------------------------------------------
variables
	Handle   vExportParser
	String		vWorkingDirectory
	String		vExportFilePath
	Boolean	vIsUnifaceExport
	String		vUnifaceRelease
	String		vObjectType
	DateTime	vTimeStamp
	String		vObjectName
	String		vObjectLang
	String		vObjectLib
	String		vObjects
	String		vObject
	String		vMessages
endvariables

	newinstance "VREPO_EXPPARSER", vExportParser

	vWorkingDirectory	= $ldir()
	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseMenuExport\SUBVERSION.xml"

	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,	vObject, "OBJECT_NAME"
	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"

	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseMenuExport\SUBVERSION.xml"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjectType, vTimeStamp, vObjectName, "", "")
	$instanceparent-&gt;assertEqual(vObjectType, "menu", "SUBVERSION.xml is a menu, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "SUBVERSION", "SUBVERSION.xml contains SUBVERSION, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectLang, "USA", "SUBVERSION.xml has language P, found %%vObjectLang%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectLib, "USYS", "SUBVERSION.xml is in library SVN_LIBRARY, found %%vObjectLang%%%.")		
	#include VUT:HANDLE_ASSERT

	return 0

end ;testParseMenuExport


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testParseLibraryExport
;--------------------------------------------------------------------
variables
	Handle   vExportParser
	String		vWorkingDirectory
	String		vExportFilePath
	Boolean		vIsUnifaceExport
	String		vUnifaceRelease
	String		vObjectType
	DateTime	vTimeStamp
	String		vObjectName
	String		vObjectLang
	String		vObjectLib
	String		vObjects
	String		vObject
	String		vMessages
endvariables

	newinstance "VREPO_EXPPARSER", vExportParser

	vWorkingDirectory	= $ldir()
	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseLibraryExport\SVN_LIBRARY.xml"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,	vObject, "OBJECT_NAME"
	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"

	$instanceparent-&gt;assertTrue(vIsUnifaceExport, "SVN_LIBRARY.xml should show as a Uniface Export, it doesn't.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vUnifaceRelease, "9.3", "SVN_LIBRARY.xml exported from 9.3, version not parsed correctly.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectType, "library", "SVN_LIBRARY.xml is a library, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "SVN_LIBRARY", "SVN_LIBRARY.xml contains SVN_LIBRARY, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vTimeStamp, "2009072410413748", "SVN_LIBRARY.xml has timestamp 2009072410413748, found %%vTimeStamp%%%.")		
	#include VUT:HANDLE_ASSERT
	
	return 0

end ;testParseLibraryExport


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testParseSVCWithSigExport
;--------------------------------------------------------------------
variables
	Handle   vExportParser
	String		vWorkingDirectory
	String		vExportFilePath
	Boolean		vIsUnifaceExport
	String		vUnifaceRelease
	String		vObjectType
	DateTime	vTimeStamp
	String		vObjectName
	String		vObjectLang
	String		vObjectLib
	String		vObjects
	String		vObject
	String		vMessages
endvariables

	newinstance "VREPO_EXPPARSER", vExportParser

	vWorkingDirectory	= $ldir()
	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseSVCWithSigExport\UESVDEF.cmx"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,	vObject, "OBJECT_NAME"
	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"

	$instanceparent-&gt;assertTrue(vIsUnifaceExport, "UESVDEF.cmx should show as a Uniface Export, it doesn't.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vUnifaceRelease, "9.3", "UESVDEF.cmx exported from 9.3, version not parsed correctly.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectType, "entity_service", "UESVDEF.cmx is an entity service, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "UESVDEF", "UESVDEF.cmx contains UESVDEF, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vTimeStamp, "2007082715510700", "UESVDEF.cmx has timestamp 2007082715510700, found %%vTimeStamp%%%.")		
	#include VUT:HANDLE_ASSERT
	
	return 0

end ;testParseSVCWithSigExport


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testParseArchiveExport
;--------------------------------------------------------------------
variables
	Handle   vExportParser
	String		vWorkingDirectory
	String		vExportFilePath
	Boolean		vIsUnifaceExport
	String		vUnifaceRelease
	String		vObjectType
	DateTime	vTimeStamp
	String		vObjectName
	String		vObjectLang
	String		vObjectLib
	String		vObjects
	String		vObject
	String		vMessages
endvariables

	newinstance "VREPO_EXPPARSER", vExportParser

	vWorkingDirectory	= $ldir()
	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseArchiveExport\uniface_unit.dax"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,	vObject, "OBJECT_NAME"
	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"

	$instanceparent-&gt;assertTrue(vIsUnifaceExport, "uniface_unit.dax should show as a Uniface Export, it doesn't.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vUnifaceRelease, "9.3", "uniface_unit.dax exported from 9.3, version not parsed correctly.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectType, "deployment_archive", "uniface_unit.dax is a deployment archive, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "UNIFACE_UNIT", "uniface_unit.dax contains UNIFACE_UNIT, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vTimeStamp, "2010051211140898", "uniface_unit.dax has timestamp 2010051211140898, found %%vTimeStamp%%%.")		
	#include VUT:HANDLE_ASSERT
	
	return 0

end ;testParseArchiveExport


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testParseObjectTypesAndNames
;--------------------------------------------------------------------
variables
	Handle   vExportParser
	String		vWorkingDirectory
	String		vExportFilePath
	Boolean		vIsUnifaceExport
	String		vUnifaceRelease
	String		vObjectType
	DateTime	vTimeStamp
	String		vObjectName
	String		vObjectLang
	String		vObjectLib
	String		vObjects
	String		vObject
	String		vMessages
endvariables

	newinstance "VREPO_EXPPARSER", vExportParser

	;----------------------------------------------------
	; Test object types that map directly to table names.
	;----------------------------------------------------
	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseObjectTypes\SVN.xml"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,	vObject, "OBJECT_NAME"
	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"
	$instanceparent-&gt;assertEqual(vObjectType, "model", "SVN.xml is a model, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "SVN", "SVN.xml contains SVN, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT

	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseObjectTypes\UAPPLDEF.xml"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,	vObject, "OBJECT_NAME"
	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"
	$instanceparent-&gt;assertEqual(vObjectType, "startupshell", "UAPPLDEF.xml is a start up shell, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "UAPPLDEF", "UAPPLDEF.xml contains UAPPLDEF, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT


	;----------------------------------------------------
	; Test component object types.
	;----------------------------------------------------
	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseObjectTypes\UESVDEF.xml"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,	vObject, "OBJECT_NAME"
	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"
	$instanceparent-&gt;assertEqual(vObjectType, "entity_service", "UESVDEF.xml is an entity service, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "UESVDEF", "UESVDEF.xml contains UESVDEF, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT

	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseObjectTypes\SVN_WORKINGCOPY.xml"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,	vObject, "OBJECT_NAME"
	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"
	$instanceparent-&gt;assertEqual(vObjectType, "form", "SVN_WORKINGCOPY.xml is a form, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "SVN_WORKINGCOPY", "SVN_WORKINGCOPY.xml contains SVN_WORKINGCOPY, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT

	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseObjectTypes\URPTDEF.xml"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,	vObject, "OBJECT_NAME"
	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"
	$instanceparent-&gt;assertEqual(vObjectType, "report", "URPTDEF.xml is a report, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "URPTDEF", "URPTDEF.xml contains URPTDEF, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT

	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseObjectTypes\USSVDEF.xml"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,	vObject, "OBJECT_NAME"
	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"
	$instanceparent-&gt;assertEqual(vObjectType, "session_service", "USSVDEF.xml is a session service, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "USSVDEF", "USSVDEF.xml contains USSVDEF, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT

	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseObjectTypes\SVN_EXPIMP.xml"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,	vObject, "OBJECT_NAME"
	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"
	$instanceparent-&gt;assertEqual(vObjectType, "service", "SVN_EXPIMP.xml is a service, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "SVN_EXPIMP", "SVN_EXPIMP.xml contains SVN_EXPIMP, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT

	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseObjectTypes\UUSPDEF.xml"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,	vObject, "OBJECT_NAME"
	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"
	$instanceparent-&gt;assertEqual(vObjectType, "usp", "UUSPDEF.xml is a Uniface server page, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "UUSPDEF", "UUSPDEF.xml contains UUSPDEF, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT


	;----------------------------------------------------
	; Test USOURCE object types.
	;----------------------------------------------------
	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseObjectTypes\SVN_LIBRARY_CONST.xml"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,	vObject, "OBJECT_NAME"
	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"
	$instanceparent-&gt;assertEqual(vObjectType, "constants", "SVN_LIBRARY_CONST.xml is a constant, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "DEFPARAM", "SVN_LIBRARY_CONST.xml contains DEFPARAM, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectLang, "P", "SVN_LIBRARY_CONST.xml has language USA, found %%vObjectLang%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectLib, "SVN_LIBRARY", "SVN_LIBRARY_CONST.xml is in library SVN_LIBRARY, found %%vObjectLang%%%.")		
	#include VUT:HANDLE_ASSERT

	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseObjectTypes\REFRESH.xml"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,	vObject, "OBJECT_NAME"
	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"
	$instanceparent-&gt;assertEqual(vObjectType, "message", "REFRESH.xml is a message, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "REFRESH", "REFRESH.xml contains REFRESH, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectLang, "USA", "REFRESH.xml has language USA, found %%vObjectLang%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectLib, "SVN_LIBRARY", "REFRESH.xml is in library SVN_LIBRARY, found %%vObjectLang%%%.")		
	#include VUT:HANDLE_ASSERT

	return 0

end ;testParseObjectTypesAndNames


;--------------------------------------------------------------------
; Sometimes the Uniface clustering exports seem to fail to export
; a signature correctly. In these cases you are left with an export
; file with just the subsystems in.
; @TEST
;--------------------------------------------------------------------
operation testParseSubsystemExport
;--------------------------------------------------------------------
variables
	Handle   vExportParser
	String		vWorkingDirectory
	String		vExportFilePath
	Boolean		vIsUnifaceExport
	String		vUnifaceRelease
	String		vObjectType
	DateTime	vTimeStamp
	String		vObjectName
	String		vObjectLang
	String		vObjectLib
	String		vObjects
	String		vObject
	String		vMessages
endvariables

	newinstance "VREPO_EXPPARSER", vExportParser

	vWorkingDirectory	= $ldir()
	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testParseSubsystemExport\TEST.sgx"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

;	vObject = $itemnr(1, vObjects)
;	getitem/id vObjectType,	vObject, "OBJECT_TYPE"
;	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
;	getitem/id vObjectName,	vObject, "OBJECT_NAME"
;	getitem/id vObjectLang,	vObject, "OBJECT_LANG"
;	getitem/id vObjectLib,		vObject, "OBJECT_LIB"
;
	$instanceparent-&gt;assertTrue(vIsUnifaceExport, "TEST.sgx should show as a Uniface Export, it doesn't.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vUnifaceRelease, "9.3", "TEST.sgx exported from 9.3, version not parsed correctly.")		
	#include VUT:HANDLE_ASSERT
;	$instanceparent-&gt;assertEqual(vObjectType, "&lt;DEPLOYMENT_ARCHIVE&gt;", "uniface_unit.dax is a deployment archive, parsed as %%vObjectType%%%.")		
;	#include VUT:HANDLE_ASSERT
;	$instanceparent-&gt;assertEqual(vObjectName, "UNIFACE_UNIT", "uniface_unit.dax contains UNIFACE_UNIT, found %%vObjectName%%%.")		
;	#include VUT:HANDLE_ASSERT
;	$instanceparent-&gt;assertEqual(vTimeStamp, "2010051211140898", "uniface_unit.dax has timestamp 2010051211140898, found %%vTimeStamp%%%.")		
;	#include VUT:HANDLE_ASSERT
	
	return 0

end ;testParseSubsystemExport


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testGetModelTimestamp
;--------------------------------------------------------------------
variables
	Handle   vExportParser
	String		vWorkingDirectory
	String		vExportFilePath
	Boolean	vIsUnifaceExport
	String		vUnifaceRelease
	String		vObjectType
	DateTime	vTimeStamp
	String		vObjectName
	String		vObjectLang
	String		vObjectLib
	String		vObjects
	String		vObject
	String		vMessages
endvariables

	newinstance "VREPO_EXPPARSER", vExportParser

	vWorkingDirectory	= $ldir()
	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testGetModelTimestamp\MUSICSHOP.amx"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,		vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,		vObject, "OBJECT_NAME"
	getitem/id vObjectLang,		vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"

	$instanceparent-&gt;assertTrue(vIsUnifaceExport, "MUSICSHOP.amx should show as a Uniface Export, it doesn't.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vUnifaceRelease, "9.4", "MUSICSHOP.amx exported from 9.4, version not parsed correctly.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectType, "model", "MUSICSHOP.amx is a deployment archive, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "MUSICSHOP", "MUSICSHOP.amx contains MUSICSHOP, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vTimeStamp, "2009071016531174", $concat("MUSICSHOP.amx has timestamp 2009071016531174, found ", vTimeStamp))		
	#include VUT:HANDLE_ASSERT

	return 0

end ;testGetModelTimestamp


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testGetModelTimestampFromDTD
;--------------------------------------------------------------------
variables
	Handle   vExportParser
	String		vWorkingDirectory
	String		vExportFilePath
	Boolean	vIsUnifaceExport
	String		vUnifaceRelease
	String		vObjectType
	DateTime	vTimeStamp
	String		vObjectName
	String		vObjectLang
	String		vObjectLib
	String		vObjects
	String		vObject
	String		vMessages
endvariables

	newinstance "VREPO_EXPPARSER", vExportParser

	vWorkingDirectory	= $ldir()
	vExportFilePath = "%%vWorkingDirectory%%%test\fixtures\&lt;$componentname&gt;\testGetModelTimestampFromDTD\WIDGETS.amx"
	vExportParser-&gt;parseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease, vObjects, vMessages)
	if($status &lt; 0)
		$instanceparent-&gt;fail(vMessages)		
		#include VUT:HANDLE_ASSERT
	endif

	vObject = $itemnr(1, vObjects)
	getitem/id vObjectType,		vObject, "OBJECT_TYPE"
	getitem/id vTimeStamp,		vObject, "LATEST_TIMESTAMP"
	getitem/id vObjectName,		vObject, "OBJECT_NAME"
	getitem/id vObjectLang,		vObject, "OBJECT_LANG"
	getitem/id vObjectLib,		vObject, "OBJECT_LIB"

	$instanceparent-&gt;assertTrue(vIsUnifaceExport, "WIDGETS.amx should show as a Uniface Export, it doesn't.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vUnifaceRelease, "9.4", "WIDGETS.amx exported from 9.4, version not parsed correctly.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectType, "model", "WIDGETS.amx is a deployment archive, parsed as %%vObjectType%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vObjectName, "WIDGETS", "WIDGETS.amx contains WIDGETS, found %%vObjectName%%%.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vTimeStamp, "2009012711275379", "WIDGETS.amx has timestamp 2009012711275379, found %%vTimeStamp%%%.")		
	#include VUT:HANDLE_ASSERT
	
	return 0

end ;testGetModelTimestampFromDTD
</DAT>
</OCC>
</TABLE>
<TABLE>
<DSC name="UXGROUP" model="DICT" system="S" pseudo ="73" level="1" noupdate="0"
 rbk="0" ffsql="0" transnr="0" segsize="0" ufocc="1000" charset=".U">
<FLD name="UTIMESTAMP" seqno="1" type="E" level="2" pack="0" scale="0" length="15"
 pointer="0" inum="0" ufocc="0" />
<FLD name="ULABEL" seqno="2" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="1" ufocc="0" mandatory="yes" idxnum="1" idxsnr="101" />
<FLD name="UBASE" seqno="3" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="1" ufocc="0" mandatory="yes" idxnum="1" idxsnr="102" />
<FLD name="UFORM" seqno="4" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="2" ufocc="0" mandatory="yes" idxnum="1,2" idxsnr="103,1" />
<FLD name="UVERS" seqno="5" type="S" level="2" pack="0" scale="0" length="12"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UDESCR" seqno="6" type="S" level="2" pack="0" scale="0" length="25"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_BORD" seqno="7" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_INDB" seqno="8" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_DBMS" seqno="9" type="S" level="2" pack="0" scale="0" length="3"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_UPD" seqno="10" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_MINL" seqno="11" type="N" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_MAXL" seqno="12" type="N" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_MINR" seqno="13" type="N" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_MAXR" seqno="14" type="N" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TPLGINTF" seqno="15" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_INTF" seqno="16" type="S" level="2" pack="0" scale="0" length="64"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TEMPLATENAME" seqno="17" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UINHERIT" seqno="18" type="B" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TPLACTUAL" seqno="19" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E6,0,0,0,,0,0,0,," />
<FLD name="GETOCC" seqno="20" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C1,0,0,0,,0,0,0,," />
<FLD name="PUTOCC" seqno="21" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C2,0,0,0,,0,0,0,," />
<FLD name="DELOCC" seqno="22" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C3,0,0,0,,0,0,0,," />
<FLD name="LCK" seqno="23" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C4,0,0,0,,0,0,0,," />
<FLD name="UNLOCK" seqno="24" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C5,0,0,0,,0,0,0,," />
<FLD name="GETSEGM" seqno="25" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C6,0,0,0,,0,0,0,," />
<FLD name="ADDOCC" seqno="26" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C7,0,0,0,,0,0,0,," />
<FLD name="DELOCCR" seqno="27" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C8,0,0,0,,0,0,0,," />
<FLD name="ENDMOD" seqno="28" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C9,0,0,0,,0,0,0,," />
<FLD name="DOC" seqno="29" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CA,0,0,0,,0,0,0,," />
<FLD name="DETAIL" seqno="30" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CB,0,0,0,,0,0,0,," />
<FLD name="CREOCC" seqno="31" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CC,0,0,0,,0,0,0,," />
<FLD name="MENU" seqno="32" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CD,0,0,0,,0,0,0,," />
<FLD name="FINDOCC" seqno="33" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CE,0,0,0,,0,0,0,," />
<FLD name="ERROR" seqno="34" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CF,0,0,0,,0,0,0,," />
<FLD name="GENERAL" seqno="35" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D0,0,0,0,,0,0,0,," />
<FLD name="STARTMOD" seqno="36" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D1,0,0,0,,0,0,0,," />
<FLD name="FLIST" seqno="37" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E1,0,0,0,,0,0,0,," />
<FLD name="BREAK" seqno="38" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E2,0,0,0,,0,0,0,," />
<FLD name="VLDE" seqno="39" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D2,0,0,0,,0,0,0,," />
<FLD name="VLDK" seqno="40" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D3,0,0,0,,0,0,0,," />
<FLD name="UPOPUP" seqno="41" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D4,0,0,0,,0,0,0,," />
<FLD name="UISBCLASS" seqno="42" type="B" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UISASSOC" seqno="43" type="B" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_OBJSVC" seqno="44" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DC,0,0,0,,0,0,0,," />
<FLD name="U_SVCUSE" seqno="45" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DD,0,0,0,,0,0,0,," />
<FLD name="HTML_ENTPROP" seqno="46" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D7,0,0,0,,0,0,0,," />
<FLD name="HTML_TABTYPE" seqno="47" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D8,0,0,0,,0,0,0,," />
<FLD name="HTML_ENTHK_B" seqno="48" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D9,0,0,0,,0,0,0,," />
<FLD name="HTML_ENTHK_E" seqno="49" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DA,0,0,0,,0,0,0,," />
<FLD name="HTML_OCCHK_B" seqno="50" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DB,0,0,0,,0,0,0,," />
<FLD name="HTML_OCCHK_E" seqno="51" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DE,0,0,0,,0,0,0,," />
<FLD name="HTML_ENTCLASS" seqno="52" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DF,0,0,0,,0,0,0,," />
<FLD name="U_GLAB" seqno="53" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E0,0,0,0,,0,0,0,," />
<FLD name="UEOINTERFACE" seqno="54" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E3,0,0,0,,0,0,0,," />
<FLD name="UECINTERFACE" seqno="55" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E4,0,0,0,,0,0,0,," />
<FLD name="UEOOPERS" seqno="56" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E5,0,0,0,,0,0,0,," />
<FLD name="UECOPERS" seqno="57" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E7,0,0,0,,0,0,0,," />
<FLD name="UEOTRIGGERS" seqno="58" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E8,0,0,0,,0,0,0,," />
<FLD name="UECTRIGGERS" seqno="59" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E9,0,0,0,,0,0,0,," />
<FLD name="UGEOMETRY" seqno="60" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EA,0,0,0,,0,0,0,," />
<FLD name="UWIDGETTYPE" seqno="61" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EB,0,0,0,,0,0,0,," />
<FLD name="UWIDGETCREATE" seqno="62" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EC,0,0,0,,0,0,0,," />
<FLD name="PRLO" seqno="63" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\ED,0,0,0,,0,0,0,," />
<FLD name="PSLO" seqno="64" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EE,0,0,0,,0,0,0,," />
<FLD name="PRSO" seqno="65" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EF,0,0,0,,0,0,0,," />
<FLD name="PSSO" seqno="66" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\F0,0,0,0,,0,0,0,," />
<FLD name="UPARENT" seqno="67" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\F1,0,0,0,,0,0,0,," />
<FLD name="UWEBWIDGETTYPE" seqno="68" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\F2,0,0,0,,0,0,0,," />
<FLD name="UWEBWIDGETCREATE" seqno="69" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\F3,0,0,0,,0,0,0,," />
</DSC>
<OCC>
<DAT name="UTIMESTAMP">2015-11-17T10:45:56.00</DAT>
<DAT name="ULABEL">DUMMY</DAT>
<DAT name="UBASE">DUMMY</DAT>
<DAT name="UFORM">T_VREPO_EXPPARSE</DAT>
<DAT name="U_BORD">N</DAT>
<DAT name="U_INDB">N</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISBCLASS">F</DAT>
<DAT name="UISASSOC">F</DAT>
<DAT name="HTML_ENTPROP" xml:space='preserve'>U_ATLEASTONE=1&uSEP;U_STARTOCC=1&uSEP;U_MAXOCC=</DAT>
</OCC>
</TABLE>
</UNIFACE>
