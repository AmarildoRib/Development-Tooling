<?xml version='1.0' encoding='UTF-8' ?>
<!-- Created by UNIFACE - (C) Compuware Corporation -->
<!DOCTYPE UNIFACE PUBLIC "UNIFACE.DTD" "UNIFACE.DTD">
<UNIFACE release="9.3" xmlengine="2.0">
<TABLE>
<DSC name="UFORM" model="DICT" system="S" pseudo ="73" level="1" noupdate="0"
 rbk="0" ffsql="0" transnr="0" segsize="0" ufocc="1000" charset=".U">
<FLD name="UTIMESTAMP" seqno="1" type="E" level="2" pack="0" scale="0" length="15"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UCOMPSTAMP" seqno="2" type="E" level="2" pack="0" scale="0" length="15"
 pointer="0" inum="0" ufocc="0" />
<FLD name="ULABEL" seqno="3" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="1" ufocc="0" mandatory="yes" idxnum="1" idxsnr="101" />
<FLD name="FTYP" seqno="4" type="S" level="2" pack="0" scale="0" length="4"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UVERS" seqno="5" type="S" level="2" pack="0" scale="0" length="12"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UDESCR" seqno="6" type="S" level="2" pack="0" scale="0" length="25"
 pointer="0" inum="0" ufocc="0" />
<FLD name="FHEAD" seqno="7" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="VMAAT" seqno="8" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="HMAAT" seqno="9" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UCOLOR" seqno="10" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="WVPOS" seqno="11" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="WHPOS" seqno="12" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="WVSIZ" seqno="13" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="WHSIZ" seqno="14" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="CLRSCRN" seqno="15" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UBORDER" seqno="16" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="RIBIN" seqno="17" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="0" ufocc="0" />
<FLD name="RIBOT" seqno="18" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="0" ufocc="0" />
<FLD name="MOVABLE" seqno="19" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="VIDEOINVERSE" seqno="20" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="VIDEOBRIGHT" seqno="21" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="VIDEOUNLINE" seqno="22" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="VIDEOBLINK" seqno="23" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UPANEL" seqno="24" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="0" ufocc="0" />
<FLD name="POSPANEL" seqno="25" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UPULL" seqno="26" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="0" ufocc="0" />
<FLD name="HIDESTACK" seqno="27" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TEMPLATENAME" seqno="28" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="1" ufocc="0" idxnum="2" idxsnr="1" />
<FLD name="UINHERIT" seqno="29" type="B" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="LIBRAR" seqno="30" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UTRANSACT" seqno="31" type="S" level="2" pack="0" scale="0" length="8"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TPLACTUAL" seqno="32" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D3,0,0,0,,0,0,0,," />
<FLD name="CONSTRAINTS" seqno="33" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D4,0,0,0,,0,0,0,," />
<FLD name="INIT" seqno="34" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C1,0,0,0,,0,0,0,," />
<FLD name="CLEAR" seqno="35" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C2,0,0,0,,0,0,0,," />
<FLD name="RETRIEVE" seqno="36" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C3,0,0,0,,0,0,0,," />
<FLD name="RECORD" seqno="37" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C4,0,0,0,,0,0,0,," />
<FLD name="STORE" seqno="38" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C5,0,0,0,,0,0,0,," />
<FLD name="DELET" seqno="39" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C6,0,0,0,,0,0,0,," />
<FLD name="ACCEPT" seqno="40" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C7,0,0,0,,0,0,0,," />
<FLD name="QUIT" seqno="41" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C8,0,0,0,,0,0,0,," />
<FLD name="MENU" seqno="42" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C9,0,0,0,,0,0,0,," />
<FLD name="INTKEY" seqno="43" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CA,0,0,0,,0,0,0,," />
<FLD name="SPRINT" seqno="44" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CB,0,0,0,,0,0,0,," />
<FLD name="EPRINT" seqno="45" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CC,0,0,0,,0,0,0,," />
<FLD name="ASYNC" seqno="46" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CD,0,0,0,,0,0,0,," />
<FLD name="GENERAL" seqno="47" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CE,0,0,0,,0,0,0,," />
<FLD name="FORMPIC" seqno="48" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E0,0,0,0,,0,0,0,," />
<FLD name="HEADER" seqno="49" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E3,0,0,0,,0,0,0,," />
<FLD name="LISTING" seqno="50" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E5,0,0,0,,0,0,0,," />
<FLD name="PERF" seqno="51" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E1,0,0,0,,0,0,0,," />
<FLD name="PROTO" seqno="52" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E2,0,0,0,,0,0,0,," />
<FLD name="TITLE" seqno="53" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E7,0,0,0,,0,0,0,," />
<FLD name="WINPROP" seqno="54" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D2,0,0,0,,0,0,0,," />
<FLD name="FRLF" seqno="55" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E4,0,0,0,,0,0,0,," />
<FLD name="FRGF" seqno="56" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E6,0,0,0,,0,0,0,," />
<FLD name="SFUNC" seqno="57" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DC,0,0,0,,0,0,0,," />
<FLD name="HTMLPROP" seqno="58" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DD,0,0,0,,0,0,0,," />
<FLD name="USCONTAINED" seqno="59" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CF,0,0,0,,0,0,0,," />
<FLD name="UEXECDEF" seqno="60" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D0,0,0,0,,0,0,0,," />
<FLD name="UPOPUP" seqno="61" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D5,0,0,0,,0,0,0,," />
<FLD name="UML_DATA" seqno="62" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D6,0,0,0,,0,0,0,," />
<FLD name="HTML_CMPPROP" seqno="63" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D1,0,0,0,,0,0,0,," />
<FLD name="HTML_FORMAT" seqno="64" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D7,0,0,0,,0,0,0,," />
<FLD name="HTML_STYLES" seqno="65" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D8,0,0,0,,0,0,0,," />
<FLD name="HTML_HOOK_H" seqno="66" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D9,0,0,0,,0,0,0,," />
<FLD name="HTML_HOOK_B" seqno="67" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DA,0,0,0,,0,0,0,," />
<FLD name="HTML_HOOK_E" seqno="68" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DB,0,0,0,,0,0,0,," />
<FLD name="HTML_BODYHOOK" seqno="69" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DE,0,0,0,,0,0,0,," />
<FLD name="HTML_CMPCLASS" seqno="70" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DF,0,0,0,,0,0,0,," />
<FLD name="GETSTATE" seqno="71" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E8,0,0,0,,0,0,0,," />
<FLD name="SETSTATE" seqno="72" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E9,0,0,0,,0,0,0,," />
<FLD name="UNOSTATE" seqno="73" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EA,0,0,0,,0,0,0,," />
<FLD name="CMP_EXT" seqno="74" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EB,0,0,0,,0,0,0,," />
<FLD name="UCTRIGGERS" seqno="75" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EC,0,0,0,,0,0,0,," />
<FLD name="UACCESSPATH" seqno="76" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\ED,0,0,0,,0,0,0,," />
<FLD name="USPLITPROP" seqno="77" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EE,0,0,0,,0,0,0,," />
<FLD name="TPLACTUAL2" seqno="78" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EF,0,0,0,,0,0,0,," />
<FLD name="USTATEMANAGEDBY" seqno="79" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\F0,0,0,0,,0,0,0,," />
<FLD name="HTMLSKELETON" seqno="80" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\F1,0,0,0,,0,0,0,," />
</DSC>
<OCC>
<DAT name="UTIMESTAMP">2010-03-09T13:32:34.45</DAT>
<DAT name="UCOMPSTAMP">2010-03-09T13:32:34.89</DAT>
<DAT name="ULABEL">SVN_EXPIMP</DAT>
<DAT name="UDESCR" xml:space='preserve'>Wrapper of $ude exp / imp</DAT>
<DAT name="WVPOS">0</DAT>
<DAT name="WHPOS">0</DAT>
<DAT name="WVSIZ">10</DAT>
<DAT name="WHSIZ">40</DAT>
<DAT name="CLRSCRN">N</DAT>
<DAT name="UBORDER">N</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="LIBRAR">SVN_LIBRARY</DAT>
<DAT name="UTRANSACT">1</DAT>
<DAT name="TPLACTUAL" xml:space='preserve'>
#Comment ----------------------------------------------
#Comment start_of_references
#ifdefined TEMPLATENAME
#info symbol TEMPLATENAME is already or also defined as a global or local constant
#endif
#define TEMPLATENAME=
#Comment 

#Comment end_of_references


#Comment ----------------------------------------------
#Comment start_of_mappings
#Comment end_of_mappings


#Comment ----------------------------------------------
#Comment start_of_symbols
#Comment end_of_symbols


#Comment ----------------------------------------------
</DAT>
<DAT name="GENERAL" xml:space='preserve'>#include SVN_LIBRARY:IP_CONCAT_PATHS
#include SVN_LIBRARY:IP_ADD_MESSAGE

;-----------------------------------------
entry lpExportComponents
;-----------------------------------------
params
	String	pProfile		: IN
	String	pComponentType	: IN
	String	pExportPath		: IN
	Boolean	pForceAll		: IN
	Boolean	pIncludeSig		: IN
	String	pMessages		: INOUT
endparams

	clear/e "UFORM"
	ULABEL.UFORM		= pProfile
	UTRANSACT.UFORM		= pComponentType
	retrieve/e "UFORM"
	if($status &gt;= 0)
		setocc "UFORM", 1
	endif
	while($status &gt; 0)
		call lpProcessItem("component", ULABEL.UFORM, UTRANSACT.UFORM, "", "", UTIMESTAMP.UFORM, pExportPath, pForceAll, "", pIncludeSig, "", pMessages)
		if($status &lt; 0)
			return &lt;FAILED&gt;
		endif

		setocc "UFORM", $curocc("UFORM") + 1
	endwhile

	commit
	return &lt;OK&gt;

end ;exportComponents


;-----------------------------------------
entry lpExportModels
;-----------------------------------------
params
	String	pProfile		: IN
	String	pExportPath		: IN
	Boolean	pForceAll		: IN
	String	pMessages		: INOUT
endparams

variables
	DateTime vTimeStamp
	DateTime vCurrentTimeStamp
endvariables

	clear/e "UCSCH"
	retrieve "UCSCH"
	if($status &gt;= 0)
		setocc "UCSCH", 1
	endif
	while($status &gt; 0)
  		if(!pForceAll)
    		vTimeStamp = UTIMESTAMP.UCSCH
    		setocc "UCTABLE", 1
    		while($status &gt; 0)
      			vCurrentTimeStamp = UTIMESTAMP.UCTABLE
      			if(vCurrentTimeStamp &gt; vTimeStamp)
        			vTimeStamp = vCurrentTimeStamp
      			endif

      			setocc "UCTABLE", $curocc("UCTABLE") + 1
    		endwhile
		endif


		call lpProcessItem("model", U_VLAB.UCSCH, "", "", "", vTimeStamp, pExportPath, pForceAll, "", "", "", pMessages)
		if($status &lt; 0)
			return &lt;FAILED&gt;
		endif

		setocc "UCSCH", $curocc("UCSCH") + 1
	endwhile

	commit
	return &lt;OK&gt;

end ;lpExportModels


;-----------------------------------------
entry lpExportStartupShells
;-----------------------------------------
params
	String	pProfile		: IN
	String	pExportPath		: IN
	Boolean	pForceAll		: IN
	String	pMessages		: INOUT
endparams

	clear/e "UAPPL"
	retrieve "UAPPL"
	if($status &gt;= 0)
		setocc "UAPPL", 1
	endif
	while($status &gt; 0)
		call lpProcessItem("startupshell", ULABEL.UAPPL, "", "", "", UTIMESTAMP.UAPPL, pExportPath, pForceAll, "", "", "", pMessages)
		if($status &lt; 0)
			return &lt;FAILED&gt;
		endif

		setocc "UAPPL", $curocc("UAPPL") + 1
	endwhile

	commit
	return &lt;OK&gt;

end ;lpExportStartupShells


;-----------------------------------------
entry lpExportSignatures
;-----------------------------------------
params
	String	pProfile		: IN
	String	pExportPath		: IN
	Boolean	pForceAll		: IN
	String	pMessages		: INOUT
endparams

	clear/e "USSPEC"
	UDEFPATH.USSPEC = "&uNOT;&uEQ;SVC&uNOT;&uEQ;FRM&uNOT;&uEQ;RPT&uNOT;&uEQ;SSV&uNOT;&uEQ;USP"
	retrieve "USSPEC"
	if($status &gt;= 0)
		setocc "USSPEC", 1
	endif
	while($status &gt; 0)
		call lpProcessItem("signature", USPECNAM.USSPEC, "", "", "", UTIMESTAMP.USSPEC, pExportPath, pForceAll, "", "", "", pMessages)
		if($status &lt; 0)
			return &lt;FAILED&gt;
		endif

		setocc "USSPEC", $curocc("USSPEC") + 1
	endwhile

	commit
	return &lt;OK&gt;

end ;lpExportSignatures


;-----------------------------------------
entry lpExportGlyphs
;-----------------------------------------
params
	String	pProfile		: IN
	String	pExportPath		: IN
	Boolean	pForceAll		: IN
	Boolean	pIncludeLib		: IN
	String	pMessages		: INOUT
endparams

	clear/e "UGLYPH"
	UCLABEL.UGLYPH	= pProfile
	retrieve/e "UGLYPH"
	if($status &gt;= 0)
		setocc "UGLYPH", 1
	endif
	while($status &gt; 0)
		call lpProcessItem("library", UCLABEL.UGLYPH, "glyph", UCTYPE.UGLYPH, UCVAR.UGLYPH, UTIMESTAMP.UGLYPH, pExportPath, pForceAll, pIncludeLib, "", "language=%%UCTYPE.UGLYPH%%%&uSEP;library=%%UCVAR.UGLYPH%%%", pMessages)
		if($status &lt; 0)
			return &lt;FAILED&gt;
		endif

		setocc "UGLYPH", $curocc("UGLYPH") + 1
	endwhile

	commit
	return &lt;OK&gt;

end ;lpExportGlyphs


;-----------------------------------------
entry lpExportMenus
;-----------------------------------------
params
	String	pProfile		: IN
	String	pExportPath		: IN
	Boolean	pForceAll		: IN
	String	pMessages		: INOUT
endparams

variables
	DateTime vTimeStamp
	DateTime vCurrentTimeStamp
endvariables

	clear/e "USMENU"
	retrieve/e "USMENU"
	if($status &gt;= 0)
		setocc "USMENU", 1
	endif
	while($status &gt; 0)
  		if(!pForceAll)
    		;Check USITEM for a later timestamp
    		;--
    		;-- Timestamp isn't updated when changing menu
    		;-- trigger code, so isn't picked up as changed
    		;--
    		vTimeStamp = UTIMESTAMP.USMENU
    		setocc "USITEM", 1
    		while($status &gt; 0)
      			vCurrentTimeStamp = UTIMESTAMP.USITEM
      			if(vCurrentTimeStamp &gt; vTimeStamp)
        			vTimeStamp = vCurrentTimeStamp
      			endif

      			setocc "USITEM", $curocc("USITEM") + 1
    		endwhile
		endif

		call lpProcessItem("library", UMENU.USMENU, "menu", ULAN.USMENU, UVAR.USMENU, vTimeStamp, pExportPath, pForceAll, "", "", "", pMessages)
		if($status &lt; 0)
			return &lt;FAILED&gt;
		endif

  		setocc "USMENU", $curocc("USMENU") + 1
	endwhile

	commit
	return &lt;OK&gt;

end ;lpExportMenus


;-----------------------------------------
entry lpExportFieldTemplates
;-----------------------------------------
params
	String	pProfile		: IN
	String	pExportPath		: IN
	Boolean	pForceAll		: IN
	String	pMessages		: INOUT
endparams

variables
	String	vExportFileName
	String	vExportFileNameOrig
	Boolean	vIsChanged
endvariables

	clear/e "UTPLFLD"
	retrieve/e "UTPLFLD"
	if($status &gt;= 0)
		setocc "UTPLFLD", 1
	endif
	while($status &gt; 0)
		call lpProcessItem("field", TEMPLATENAME.UTPLFLD, "template", "", "", UTIMESTAMP.UTPLFLD, pExportPath, pForceAll, "", "", "", pMessages)
		if($status &lt; 0)
			return &lt;FAILED&gt;
		endif

		setocc "UTPLFLD", $curocc("UTPLFLD") + 1
	endwhile

	commit
	return &lt;OK&gt;

end ;lpExportFieldTemplates


;-----------------------------------------
entry lpExportFromUSource
;-----------------------------------------
params
	String	pProfile		: IN
	String	pSubType		: IN
	String	pTypeName		: IN
	String	pExportPath		: IN
	Boolean	pForceAll		: IN
	Boolean	pIncludeLib		: IN
	String	pMessages		: INOUT
endparams

	clear/e "USOURCE"
	ULABEL.USOURCE	= pProfile
	USUB.USOURCE	= pSubType
	if(pTypeName == "&lt;CONSTANT&gt;")
		ULABEL.USOURCE = "DEFPARAM"
	elseif(pTypeName == "&lt;INCLUDE&gt;")
		if(pProfile = "")
			ULABEL.USOURCE = "&uNOT;&uEQ;DEFPARAM"
		else
			ULABEL.USOURCE = "%%ULABEL.USOURCE%%%&uAND;&uNOT;&uEQ;DEFPARAM"
		endif
	endif
	retrieve/e "USOURCE"
	if($status &gt;= 0)
		setocc "USOURCE", 1
	endif
	while($status &gt; 0)
		call lpProcessItem(	"library", %\
							ULABEL.USOURCE, %\
							pTypeName, %\
							ULAN.USOURCE, %\
							UVAR.USOURCE, %\
							UTIMESTAMP.USOURCE, %\
							pExportPath, %\
							pForceAll, %\
							pIncludeLib, %\
							"", %\
							"library=%%UVAR.USOURCE%%%&uSEP;language=%%ULAN.USOURCE%%%", %\
							pMessages)
		if($status &lt; 0)
			return &lt;FAILED&gt;
		endif

		setocc "USOURCE", $curocc("USOURCE") + 1
	endwhile

	commit
	return &lt;OK&gt;

end ;lpExportUSource


;-----------------------------------------
entry lpExportLibraries
;-----------------------------------------
params
	String	pProfile		: IN
	String	pExportPath		: IN
	Boolean	pForceAll		: IN
	Boolean	pIncludeLib		: IN
	String	pMessages		: INOUT
endparams

variables
	String	vExportFileName
	String	vExportFileNameOrig
	Boolean	vIsChanged
endvariables

	clear/e "ULIBR"

	ULIBRARY.ULIBR = pProfile

	retrieve/e "ULIBR"
	if($status &gt;= 0)
		setocc "ULIBR", 1
	endif
	while($status &gt; 0)
		call lpProcessItem("library", ULIBRARY.ULIBR, "", "", "", UTIMESTAMP.ULIBR, pExportPath, pForceAll, pIncludeLib, "", "", pMessages)
		if($status &lt; 0)
			return &lt;FAILED&gt;
		endif

		setocc "ULIBR", $curocc("ULIBR") + 1
	endwhile

	commit
	return &lt;OK&gt;

end ;lpExportLibraries


;---------------------------------------
entry lpProcessItem
;---------------------------------------
params
	String		pItemType				: IN
	String		pName					: IN
	String		pItemSubType			: IN
	String		pLanguage				: IN
	String		pLibrary				: IN
	DateTime	pLastModified			: IN
	String		pRelativeExportPath		: IN
	Boolean		pForceAll				: IN
	Boolean		pIncludeLib				: IN
	Boolean		pIncludeSig				: IN
	String		pOptions				: IN
	String		pMessages				: INOUT
endparams

variables
	String	vExportID
	Boolean	vIsChanged
	String	vExportFilePath
	String	vFilePathList
	String	vTempFilePath
endvariables

	pItemType    = $lowercase(pItemType)
	pName        = $lowercase(pName)
	pItemSubType = $lowercase(pItemSubType)
	pLanguage    = $lowercase(pLanguage)
	pLibrary     = $lowercase(pLibrary)

	vIsChanged = 0
	call lpGetExportID(pItemType, pName, pItemSubType, pLanguage, pLibrary, vExportID)

	if(!pForceAll)
	    call lpItemChanged(vExportID, pLastModified, vIsChanged, pMessages)
	endif

	if(vIsChanged | pForceAll)
    	;Export the object to XML
		vExportFilePath		= lpConcatPaths($baseDir$, pRelativeExportPath)

		pName        = $uppercase(pName)
		pLanguage    = $uppercase(pLanguage)
		pLibrary     = $uppercase(pLibrary)

		if(pLibrary != "")
			vExportFilePath = $replace(vExportFilePath, 1, "%%&lt;%%%lib%%&gt;%%%",	pLibrary, -1)			
		endif

		if(pLanguage != "")
			vExportFilePath = $replace(vExportFilePath, 1, "%%&lt;%%%lang%%&gt;%%%", pLanguage, -1)
		endif

		if( $scan(vExportFilePath, "&lt;object&gt;") &gt; 0)
			vExportFilePath = $replace(vExportFilePath, 1, "%%&lt;%%%object%%&gt;%%%", pName, -1)
		endif

		vFilePathList = $replace(vExportFilePath, 1, "\", "&uSEP;", -1)
		delitem vFilePathList, -1
		vTempFilePath = $replace(vFilePathList, 1, "&uSEP;", "\", -1)
		call lpCreatePath(vTempFilePath)

		if(pItemType = "library" &amp; pItemSubType != "")
			pItemType = $concat(pItemType, "&uSEP;", pItemSubType)
		elseif( pItemType = "startupshell" )
			pItemType = "application"
		elseif( pItemType = "field" )
			pItemType = $concat(pItemType, "&uSEP;", pItemSubType)			
		endif

    	call lpExportToXML(pName, pItemType, vExportFilePath, pLibrary, pIncludeLib, pIncludeSig, pOptions)
		if($status &lt; 0)
			return &lt;FAILED&gt;
		endif

		call lpLogExport(vExportID, pLastModified)
	endif

	return &lt;OK&gt;	

end ;lpProcessItem


;---------------------------------------
entry lpGetExportID
;---------------------------------------
params
	String	pItemType		: IN
	String	pName			: IN
	String	pItemSubType	: IN
	String	pLanguage		: IN
	String	pLibrary		: IN
	String	pExportID		: OUT
endparams

variables
  String   vComponentFolder
  String   vExportFilePath
  String   vExportFilePathOrig
endvariables

	if(pItemType = "component")
		pExportID = $concat(pItemType, "_", pName)
	elseif(pItemType = "library" &amp; pItemSubType != "")
		pExportID = $concat(pItemType, "_", pItemSubType, "_", pLibrary)
		pExportID = $concat(pExportID, "_", pLanguage, 	"_", pName)
	elseif(pItemType = "library" &amp; pItemSubType = "")
		pExportID = $concat(pItemType, "_", pName)
	elseif(pItemType = "model")
		pExportID = $concat(pItemType, "_", pName)
	elseif(pItemType = "signature")
		pExportID = $concat(pItemType, "_", pName)
	elseif(pItemType = "startupshell")
		pExportID = $concat(pItemType, "_", pName)
	elseif(pItemType = "field")
		pExportID = $concat(pItemType, "_", pItemSubType, "_", pName)
	else
		pExportID = ""
		return &lt;FAILED&gt;
	endif

	return &lt;OK&gt;

end ;getExportID


;---------------------------------------
entry lpExportToXML
;---------------------------------------
params
	String	pItem		: IN
	String	pType		: IN
	String	pFileName	: IN
	String	pLibrary	: IN
	Boolean	pIncludeLib	: IN
	Boolean	pIncludeSig	: IN
	String	pOptions	: IN
endparams

variables
	String	vBaseType
	Numeric	vExportResult
endvariables

	if(pIncludeLib)
		;Is this export a library object?
		getitem vBaseType, pType, 1
		if(vBaseType == "&lt;library&gt;")
			if(pType == "&lt;library&gt;")
				;We don't need to export the library seperately
				return &lt;OK&gt;
			endif
			putitem/id pOptions, "keepopen", 1
			vExportResult = $ude("export", "&lt;library&gt;", pLibrary, pFileName, pOptions)
			if(vExportResult &lt; 0)
				return &lt;FAILED&gt;
			endif
			delitem/id pOptions, "keepopen"
			putitem/id pOptions, "append", 1
		endif
	endif

	if(pIncludeSig)
		putitem/id pOptions, "keepopen", 1
		vExportResult = $ude("export", pType, pItem, pFileName, pOptions)
		if(vExportResult &lt; 0)
			return &lt;FAILED&gt;
		endif
		delitem/id pOptions, "keepopen"
		putitem/id pOptions, "append", 1
		pType = "&lt;signature&gt;"
	endif

	vExportResult = $ude("export", pType, pItem, pFileName, pOptions)
	if(vExportResult &lt; 0)
		return &lt;FAILED&gt;
	endif

	return &lt;OK&gt;

end ;lpExportToXML


;---------------------------------------
entry lpNormaliseExport
;---------------------------------------
params
	String	pFileName		: IN
	String	pOutFileName	: IN
	String	pMessages		: OUT
endparams

variables
	String  vExport
  	String  vXSLFileName
  	String  vParsedXML
  	Numeric vStatus
  	String  vStatusContext
  	String  vFind
  	String  vReplace
endvariables

	;load up the Uniface XML Export
	fileload pFileName, vExport, "UTF-8"

	vXSLFileName = "C:\svn_projects\3gl\xslt\modify_export.xsl"
	;									InputXMLStream	, XSLTFileName	, AdditionalArguments				, OutputStream	, Status	, MoreInformation
	activate "USYSXSLT".XMLTRANSFORM (	vExport			, vXSLFileName	, "-VALIDATE %%"UNIFACE.DTD%%""	, vParsedXML	, vStatus	, vStatusContext)
	if($status &lt; 0 | vStatus &lt; 0 | vParsedXML = "")
		;MESSAGES = $concat(MESSAGES, $datim, "  Failed to transform document - %%vStatus%%% - %%vStatusContext%%%", "%%^%%^%%^")
		pMessages = "Failed to transform document - %%vStatus%%% - %%vStatusContext%%%"
		return &lt;FAILED&gt;
	else
		;MESSAGES = $concat(MESSAGES, $datim, "  Transformed document - %%vStatus%%% - %%vStatusContext%%%", "%%^%%^%%^")
	endif

;    &lt;!ENTITY uNL  "&amp;#x8FFFF;0D"&gt;
vParsedXML = $replace(vParsedXML, 1, "&amp;#55807;&amp;#57343;0D", "&amp;uNL;", -1)
;    &lt;!ENTITY uPG  "&amp;#x8FFFF;0C"&gt;
vParsedXML = $replace(vParsedXML, 1, "&amp;#55807;&amp;#57343;0C", "&amp;uPG;", -1)
;    &lt;!ENTITY uTAB "&amp;#x8FFFF;09"&gt;
vParsedXML = $replace(vParsedXML, 1, "&amp;#55807;&amp;#57343;09", "&amp;uTAB;", -1)
;    &lt;!ENTITY uBS  "&amp;#x8FFFF;08"&gt;
vParsedXML = $replace(vParsedXML, 1, "&amp;#55807;&amp;#57343;08", "&amp;uBS;", -1)
;    &lt;!ENTITY uALL "&amp;#x8FFFF;10"&gt;
vParsedXML = $replace(vParsedXML, 1, "&amp;#55807;&amp;#57343;10", "&amp;uALL;", -1)
;    &lt;!ENTITY uONE "&amp;#x8FFFF;11"&gt;
vParsedXML = $replace(vParsedXML, 1, "&amp;#55807;&amp;#57343;11", "&amp;uONE;", -1)
;    &lt;!ENTITY uEQ  "&amp;#x8FFFF;12"&gt;
vParsedXML = $replace(vParsedXML, 1, "&amp;#55807;&amp;#57343;12", "&amp;uEQ;", -1)
;    &lt;!ENTITY uGT  "&amp;#x8FFFF;13"&gt;
vParsedXML = $replace(vParsedXML, 1, "&amp;#55807;&amp;#57343;13", "&amp;uGT;", -1)
;    &lt;!ENTITY uLT  "&amp;#x8FFFF;14"&gt;
vParsedXML = $replace(vParsedXML, 1, "&amp;#55807;&amp;#57343;14", "&amp;uLT;", -1)
;    &lt;!ENTITY uNOT "&amp;#x8FFFF;15"&gt;
vParsedXML = $replace(vParsedXML, 1, "&amp;#55807;&amp;#57343;15", "&amp;uNOT;", -1)
;    &lt;!ENTITY uAND "&amp;#x8FFFF;16"&gt;
vParsedXML = $replace(vParsedXML, 1, "&amp;#55807;&amp;#57343;16", "&amp;uAND;", -1)
;    &lt;!ENTITY uOR  "&amp;#x8FFFF;17"&gt;
vParsedXML = $replace(vParsedXML, 1, "&amp;#55807;&amp;#57343;17", "&amp;uOR;", -1)
;    &lt;!ENTITY uFRM "&amp;#x8FFFF;1A"&gt;
vParsedXML = $replace(vParsedXML, 1, "&amp;#55807;&amp;#57343;1A", "&amp;uFRM;", -1)
;    &lt;!ENTITY uSEP "&amp;#x8FFFF;1B"&gt;
vParsedXML = $replace(vParsedXML, 1, "&amp;#55807;&amp;#57343;1B", "&amp;uSEP;", -1)
;    &lt;!-- Created by UNIFACE - (C) Compuware Corporation --&gt;
vFind    = "&lt;!-- Created by UNIFACE - (C) Compuware Corporation --&gt;"
vReplace = "%%^&lt;!-- Created by UNIFACE - (C) Compuware Corporation --&gt;%%^&lt;!DOCTYPE UNIFACE PUBLIC %%"UNIFACE.DTD%%" %%"UNIFACE.DTD%%"&gt;%%^"
vParsedXML = $replace(vParsedXML, 1, vFind, vReplace, 1)

;filedump/raw vParsedXML, pOutFileName
filedump vParsedXML, pOutFileName, "UTF-8"
return &lt;OK&gt;
;MESSAGES = $concat(MESSAGES, $datim, "  Finished writing to disk - %%vStatus%%% - %%vStatusContext%%%", "%%^%%^%%^")

end ;lpNormaliseExport


;---------------------------------------
entry lpComponentNameToType
;---------------------------------------
params
  String	pComponentTypeName	: IN
  Numeric	pComponentType		: OUT
endparams

;Convert the component type number into the component type name
if(pComponentTypeName = "&lt;FORM&gt;")
  pComponentType = 0
elseif(pComponentTypeName = "&lt;SERVICE&gt;")
  pComponentType = 1
elseif(pComponentTypeName = "&lt;REPORT&gt;")
  pComponentType = 2
elseif(pComponentTypeName = "&lt;ENT_SVC&gt;")
  pComponentType = 3
elseif(pComponentTypeName = "&lt;SESSION_SVC&gt;")
  pComponentType = 4
elseif(pComponentTypeName = "&lt;USP&gt;")
  pComponentType = 6
else
	return &lt;FAILED&gt;
endif

end ;lpComponentNameToType


;---------------------------------------
entry lpItemChanged
;---------------------------------------
params
	String   	pExportID		: IN
	DateTime 	pLastModified	: IN
	Boolean  	pIsChanged		: OUT
	String		pMessages		: OUT
endparams

variables
	Handle		vXMLReader
	Handle		vHandler
	DateTime	vLatestTimeStamp
endvariables

	clear/e "SVN_LASTEXPORTED"
	ID.SVN_LASTEXPORTED = pExportID
	retrieve/e "SVN_LASTEXPORTED"
	if($status = -2)
		;No record of this item being exported
		pIsChanged = 1
		return &lt;OK&gt;
	endif
	vLatestTimeStamp = LASTEXPORTED.SVN_LASTEXPORTED

	if( (vLatestTimeStamp &lt; pLastModified) | (vLatestTimeStamp = "" &amp; pLastModified != "") )
		pIsChanged = 1
	else
		pIsChanged = 0
	endif

	return &lt;OK&gt;

end ;lpItemChanged


;---------------------------------------
entry lpGetFileList
;---------------------------------------
params
  String pDir		: IN
  String pFiles		: OUT
endparams

variables
  String vFileType
  String vContent
  String vFilePath
  String vSubDir
  String vSubFileList
endvariables

;pDir could just be a file, in which case just return it back
vFileType = $lfileproperties(pDir, "FILETYPE")
vFileType = $valuepart(vFileType)
if(vFileType = "FILE")
  pFiles = pDir
  return
endif

vSubDir  = ""
pFiles   = ""
vContent = $ldirlist(pDir, "dir")

getitem vFilePath, vContent, 1
while ($status &gt; 0)
  if(vFilePath != "orig" &amp; vFilePath != ".svn")
    vSubDir = "%%pDir%%%\%%vFilePath%%%"
    call lpGetFileList(vSubDir, vSubFileList)
    if(pFiles = "")
      pFiles = vSubFileList
    else
      pFiles = "%%pFiles%%%&uSEP;%%vSubFileList%%%"
    endif
  endif

  delitem vContent, 1
  getitem vFilePath, vContent, 1
endwhile

vContent = ""
vContent = $ldirlist(pDir, "file")
getitem vFilePath, vContent, 1
while ($status &gt; 0)
  vFilePath = "%%pDir%%%\%%vFilePath%%%"
  if(pFiles = "")
    pFiles = vFilePath
  else
    pFiles = "%%pFiles%%%&uSEP;%%vFilePath%%%"
  endif

  delitem vContent, 1
  getitem vFilePath, vContent, 1
endwhile

return 1

end ;lpGetFileList


;---------------------------------------
entry lpImport
;---------------------------------------
params
	String	pFileList	: IN
	String	pMessages	: OUT
endparams

variables
	String	vFile
endvariables

	getitem vFile, pFileList, 1
	while ($status &gt; 0)
		;call lpParseUnifaceExport(vFile)

		$1 = $ude("import", "misc", vFile, "", "supersede=true&uSEP;map=#")
		if($status &gt;= 0)
			putitem/id pMessages, vFile, "Done."
		else
			putitem/id pMessages, vFile, $procerror
		endif

		delitem pFileList, 1
		getitem vFile, pFileList, 1
	endwhile

end ;lpImport


;---------------------------------------
entry lpParseUnifaceExport
;---------------------------------------
params
	String	pExportRelativePath	: IN
	Boolean	pIsUnifaceExport	: OUT
	String	pUnifaceRelease		: OUT
endparams

variables
	String	vExportFilePath
	String	vFileContents
	Handle	vXMLReader
	Handle	vXMLParser
	String	vData
endvariables

	;Load this file up so we can learn some things about it:
	;	- Is it a Uniface export?
	;	- What type of component is it?
	;	- What's the timestamp on it?

	vExportFilePath = lpConcatPaths($baseDir$, pExportRelativePath)

	lfileload vExportFilePath, vFileContents
	newinstance "UXMLREADER",			vXMLReader
	newinstance "SVN_EXPORTPARSER",	vXMLParser
	vXMLReader-&gt;setHandler(vXMLParser)
	vXMLReader-&gt;parse(vFileContents, 0)
	vXMLParser-&gt;getParseData(vData)
	deleteinstance vXMLParser
	deleteinstance vXMLReader
	
	pIsUnifaceExport	= $item("ISUNIFACEEXPORT", vData)
	pUnifaceRelease		= $item("UNIFACE_RELEASE", vData)

	return &lt;OK&gt;

end ;lpParseUnifaceExport


;---------------------------------------
entry lpLogExport
;---------------------------------------
params
	String		pExportID	: IN
	DateTime	pTimeStamp	: IN
endparams

	clear/e "SVN_LASTEXPORTED"
	ID.SVN_LASTEXPORTED = pExportID
	retrieve/e "SVN_LASTEXPORTED"
	if($status = -2)
		;Item hasn't been exported before
		clear/e "SVN_LASTEXPORTED"
		ID.SVN_LASTEXPORTED = pExportID
	elseif($status &lt; 0)
		return &lt;FAILED&gt;
	endif
	LASTEXPORTED.SVN_LASTEXPORTED = pTimeStamp
	store/e "SVN_LASTEXPORTED"

end ;lpLogExport


;---------------------------------------
entry lpCreatePath
;---------------------------------------
params
	String	pFilePath	: IN
endparams

variables
	String	vFilePath
	String	vFilePathList
endvariables

	if($lfileexists(pFilePath) = 2)
		;This directory exists, so we don't need to do anything
		return &lt;OK&gt;
	endif

	;pFilePath doesn't exist, so we need to create it.
	;First we need to see if the parent directories have been created.
	vFilePathList = $replace(pFilePath, 1, "\", "&uSEP;", -1)
	delitem vFilePathList, -1
	vFilePath = $replace(vFilePathList, 1, "&uSEP;", "\", -1)

	call lpCreatePath(vFilePath)
	if($status &lt; 0)
		return &lt;FAILED&gt;
	endif

	ldircreate pFilePath

	return &lt;OK&gt;

end ;lpCreatePath</DAT>
<DAT name="FORMPIC" xml:space='preserve'>
 &uFRM;TYP=E&uSEP;NAM=USSPEC.DICT&uSEP;WID=20&uSEP;HEI=1&uSEP;HOC=20&uSEP;VOC=1&uFRM;

 &uFRM;TYP=E&uSEP;NAM=USMENU.DICT&uSEP;WID=25&uSEP;HEI=3&uSEP;HOC=25&uSEP;VOC=3&uFRM;
  &uFRM;TYP=E&uSEP;NAM=USITEM.DICT&uSEP;WID=20&uSEP;HEI=1&uSEP;HOC=20&uSEP;VOC=1&uFRM;


 &uFRM;TYP=E&uSEP;NAM=UGLYPH.DICT&uSEP;WID=20&uSEP;HEI=1&uSEP;HOC=20&uSEP;VOC=1&uFRM;

 &uFRM;TYP=E&uSEP;NAM=UAPPL.DICT&uSEP;WID=20&uSEP;HEI=1&uSEP;HOC=20&uSEP;VOC=1&uFRM;

 &uFRM;TYP=E&uSEP;NAM=USOURCE.DICT&uSEP;WID=20&uSEP;HEI=1&uSEP;HOC=20&uSEP;VOC=1&uFRM;

 &uFRM;TYP=E&uSEP;NAM=ULIBR.DICT&uSEP;WID=25&uSEP;HEI=6&uSEP;HOC=25&uSEP;VOC=6&uFRM;
  &uFRM;TYP=F&uSEP;NAM=ULIBRARY&uSEP;WID=20&uSEP;HEI=1&uFRM;
  &uFRM;TYP=F&uSEP;NAM=UDESCR&uSEP;WID=20&uSEP;HEI=1&uFRM;
  &uFRM;TYP=F&uSEP;NAM=UTIMESTAMP&uSEP;WID=20&uSEP;HEI=1&uFRM;
  &uFRM;TYP=F&uSEP;NAM=UVERS&uSEP;WID=20&uSEP;HEI=1&uFRM;


 &uFRM;TYP=E&uSEP;NAM=UCSCH.DICT&uSEP;WID=25&uSEP;HEI=3&uSEP;HOC=25&uSEP;VOC=3&uFRM;
  &uFRM;TYP=E&uSEP;NAM=UCTABLE.DICT&uSEP;WID=20&uSEP;HEI=1&uSEP;HOC=20&uSEP;VOC=1&uFRM;


 &uFRM;TYP=E&uSEP;NAM=UFORM.DICT&uSEP;WID=20&uSEP;HEI=1&uSEP;HOC=20&uSEP;VOC=1&uFRM;

 &uFRM;TYP=E&uSEP;NAM=UTPLFLD.DICT&uSEP;WID=20&uSEP;HEI=1&uSEP;HOC=20&uSEP;VOC=1&uFRM;

 &uFRM;TYP=E&uSEP;NAM=SVN_LASTEXPORTED.SVN&uSEP;WID=20&uSEP;HEI=1&uSEP;HOC=20&uSEP;VOC=1&uFRM;</DAT>
<DAT name="PERF">#IDF</DAT>
<DAT name="SFUNC" xml:space='preserve'>;--------------------------------------------------------------------
; Run when a new instance is created
;--------------------------------------------------------------------
operation init
;--------------------------------------------------------------------

	;Set the project export base to a default
	$baseDir$ = $ldir()
	
	return &lt;OK&gt;
	
end ;init


;--------------------------------------------------------------------
; Set the directory that all exports should go to. A relative path
; can be supplied to exportObjects to further specify the location
; of specific objects.
;--------------------------------------------------------------------
operation setBaseDirectory
;--------------------------------------------------------------------
params
	String	pBaseDirectory	: IN
	String	pMessages		: OUT
endparams

	if(pBaseDirectory == "")
		call lpAddMessage("Can't set Base Directory to blank", pMessages)
		return &lt;FAILED&gt;		
	endif

	if($lfileexists(pBaseDirectory) != 2)
		call lpAddMessage("Base directory does not exist", pMessages)
		return &lt;FAILED&gt;
	endif

	$baseDir$ = pBaseDirectory

	return &lt;OK&gt;

end ;setBaseDirectory


;--------------------------------------------------------------------
; Export an object to a given path
; In Params:
;	OBJECT_PROFILE	-	A profile for the name of the objects to be
;						exported (optional). If blank then all objects
;						of OBJECT_TYPE will be exported.
;	OBJECT_TYPE		-	The type of the object to be exported.
;	EXPORT_PATH		-	The path to export to. Relative to $baseDir$
;						of this SVN_EXPIMP instance. If blank then
;						$baseDir$ will be used for the export.
;						Additionally, if EXPORT_PATH is blank, or ends
;						with a \ a &lt;object&gt;.xml will be added to the
;						end. This ensures a file is specified that we
;						can export to.			
;	FORCE_EXPORT	-	Ignore the last exported date when performing
;						this export.
;	INCLUDE_LIB		-	If INCLUDE_LIB is true and the object is a
;						library, then the library definition will be
;						prepended to the export file. If INCLUDE_LIB
;						is true and the export library is of type
;						&lt;LIBRARY&gt; then nothing will be exported
;	INCLUDE_SIG		-	If INCLUDE_SIG is true and the object is a
;						component, then the signature definition will
;						be appended to the export file.
;--------------------------------------------------------------------
operation exportObjects
;--------------------------------------------------------------------
params
	String	pInParams	: IN
	String	pMessages	: OUT
endparams

variables
	String	vObjectProfile
	String	vObjectType
	String	vExportPath
	Boolean	vForceAll
	Boolean	vIncludeLib
	Boolean	vIncludeSig
endvariables

	if($baseDir$ = "")
		call lpAddMessage("Working copy directory not set", pMessages)
		return &lt;FAILED&gt;
	endif

	getitem/id vObjectProfile, pInParams, "OBJECT_PROFILE"

	getitem/id vObjectType, pInParams, "OBJECT_TYPE"
	if(vObjectType = "")
		call lpAddMessage("OBJECT_TYPE is a required parameter", pMessages)
		return &lt;FAILED&gt;		
	endif

	getitem/id vForceAll, pInParams, "FORCE_EXPORT"
	if(vForceAll = "")
		vForceAll = 0
	endif

	getitem/id vExportPath, pInParams, "EXPORT_PATH"
	if(vExportPath = "")
		vExportPath = "%%&lt;%%%object%%&gt;%%%.xml"
	elseif(vExportPath[$length(vExportPath)] = "\")
		vExportPath = "%%vExportPath%%%%%&lt;%%%object%%&gt;%%%.xml"
	endif

	getitem/id vIncludeLib, pInParams, "INCLUDE_LIB"
	if(vIncludeLib = "")
		vIncludeLib = 0
	endif

	getitem/id vIncludeSig, pInParams, "INCLUDE_SIG"
	if(vIncludeSig = "")
		vIncludeSig = 0
	endif	

	selectcase vObjectType
		case "&lt;FORM&gt;"
			call lpExportComponents(vObjectProfile, 0, vExportPath, vForceAll, vIncludeSig, pMessages)
			if($status &lt; 0)
				return &lt;FAILED&gt;
			endif
		case "&lt;SERVICE&gt;"
			call lpExportComponents(vObjectProfile, 1, vExportPath, vForceAll, vIncludeSig, pMessages)
			if($status &lt; 0)
				return &lt;FAILED&gt;
			endif
		case "&lt;REPORT&gt;"
			call lpExportComponents(vObjectProfile, 2, vExportPath, vForceAll, vIncludeSig, pMessages)
			if($status &lt; 0)
				return &lt;FAILED&gt;
			endif
		case "&lt;ENT_SVC&gt;"
			call lpExportComponents(vObjectProfile, 3, vExportPath, vForceAll, vIncludeSig, pMessages)
			if($status &lt; 0)
				return &lt;FAILED&gt;
			endif
		case "&lt;SESSION_SVC&gt;"
			call lpExportComponents(vObjectProfile, 4, vExportPath, vForceAll, vIncludeSig, pMessages)
			if($status &lt; 0)
				return &lt;FAILED&gt;
			endif
		case "&lt;USP&gt;"
			call lpExportComponents(vObjectProfile, 6, vExportPath, vForceAll, vIncludeSig, pMessages)
			if($status &lt; 0)
				return &lt;FAILED&gt;
			endif
		case "&lt;PROC&gt;"
			call lpExportFromUSource(vObjectProfile, "P", vObjectType, vExportPath, vForceAll, vIncludeLib, pMessages)
			if($status &lt; 0)
				return &lt;FAILED&gt;
			endif
		case "&lt;CONSTANT&gt;"
			call lpExportFromUSource(vObjectProfile, "I", vObjectType, vExportPath, vForceAll, vIncludeLib, pMessages)
			if($status &lt; 0)
				return &lt;FAILED&gt;
			endif
		case "&lt;GLYPH&gt;"
			call lpExportGlyphs(vObjectProfile, vExportPath, vForceAll, vIncludeLib, pMessages)
			if($status &lt; 0)
				return &lt;FAILED&gt;
			endif
		case "&lt;INCLUDE&gt;"
			call lpExportFromUSource(vObjectProfile, "I", vObjectType, vExportPath, vForceAll, vIncludeLib, pMessages)
			if($status &lt; 0)
				return &lt;FAILED&gt;
			endif
		case "&lt;MENU&gt;"
			call lpExportMenus(vObjectProfile, vExportPath, vForceAll, pMessages)
			if($status &lt; 0)
				return &lt;FAILED&gt;
			endif
		case "&lt;MESSAGE&gt;"
			call lpExportFromUSource(vObjectProfile, "M", vObjectType, vExportPath, vForceAll, vIncludeLib, pMessages)
			if($status &lt; 0)
				return &lt;FAILED&gt;
			endif
		case "&lt;LIBRARY&gt;"
			call lpExportLibraries(vObjectProfile, vExportPath, vForceAll, vIncludeLib, pMessages)
			if($status &lt; 0)
				return &lt;FAILED&gt;
			endif
		case "&lt;MODEL&gt;"
			call lpExportModels(vObjectProfile, vExportPath, vForceAll, pMessages)
			if($status &lt; 0)
				return &lt;FAILED&gt;
			endif
		case "&lt;SIGNATURE&gt;"
			call lpExportSignatures(vObjectProfile, vExportPath, vForceAll, pMessages)
			if($status &lt; 0)
				return &lt;FAILED&gt;
			endif
		case "&lt;STARTUPSHELL&gt;"
			call lpExportStartupShells(vObjectProfile, vExportPath, vForceAll, pMessages)
			if($status &lt; 0)
				return &lt;FAILED&gt;
			endif
		case "&lt;FIELD_TEMPLATE&gt;"
			call lpExportFieldTemplates(vObjectProfile, vExportPath, vForceAll, pMessages)
			if($status &lt; 0)
				return &lt;FAILED&gt;
			endif
		elsecase 
			call lpAddMessage("OBJECT_TYPE not valid", pMessages)
			return &lt;FAILED&gt;
	endselectcase

	return &lt;OK&gt;

end ;exportObjects


;--------------------------------------------------------------------
; Import every file under $baseDir$. Use with caution. Repository
; objects will be overwritten without prompting.
;--------------------------------------------------------------------
operation importAll
;--------------------------------------------------------------------

	$instancehandle-&gt;importFromPath($baseDir$, "")

end ;importAll


;--------------------------------------------------------------------
; Import every file under pPath. Use with caution. Repository
; objects will be overwritten without prompting.
;--------------------------------------------------------------------
operation importFromPath
;--------------------------------------------------------------------
params
	String	pPath		: IN
	String	pMessages	: OUT
endparams

variables
	String	vFileList
	Boolean	vDiffAssist
	String	vOrigFileList
endvariables

	;Get all the files under the base directory
	call lpGetFileList(pPath, vFileList)

	;Perform an import for each file
	call lpImport(vFileList, pMessages)

end ;importFromPath


;--------------------------------------------------------------------
;							START UNIT TESTS
;--------------------------------------------------------------------


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testExportComponent
;--------------------------------------------------------------------
variables
	String	vWorkingDirectory
	String	vExportDirectory
	String	vExportFile
	String	vInParams
	String	vMessages
	String	vExportContents
endvariables

	vWorkingDirectory	= $ldir()
	vExportDirectory	= "%%vWorkingDirectory%%%..\test\"
	vExportFile			= "%%vWorkingDirectory%%%..\test\svn_expimp.xml"

	if($lfileexists(vExportFile) == 1)
		lfiledelete vExportFile
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFile%%% before starting test")		
		#include VUT:HANDLE_ASSERT
	endif
	
	$instancehandle-&gt;setBaseDirectory(vExportDirectory, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "setBaseDirectory did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT

	putitem/id vInParams, "OBJECT_PROFILE", "SVN_EXPIMP"
	putitem/id vInParams, "OBJECT_TYPE"	, "&lt;SERVICE&gt;"
	putitem/id vInParams, "FORCE_EXPORT"	, 1
	$instancehandle-&gt;exportObjects(vInParams, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "exportObjects did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT
	
	;We expect a file svn_expimp.xml to be present in ..\test\
	lfileload vExportFile, vExportContents
	$instanceparent-&gt;assertGreaterThan($status, 0, "lfileload did not load %%vExportFile%%%")	
	#include VUT:HANDLE_ASSERT	

	;Tidy up
	if($lfileexists(vExportFile) == 1)
		lfiledelete vExportFile
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFile%%% after test")		
		#include VUT:HANDLE_ASSERT
	endif

	return &lt;OK&gt;

end ;testExportComponent


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testExportProc
;--------------------------------------------------------------------
variables
	String	vWorkingDirectory
	String	vExportDirectory
	String	vExportFile
	String	vInParams
	String	vMessages
	String	vExportContents
endvariables

	vWorkingDirectory	= $ldir()
	vExportDirectory	= "%%vWorkingDirectory%%%..\test\"
	vExportFile			= "%%vWorkingDirectory%%%..\test\tst_proc.xml"

	if($lfileexists(vExportFile) == 1)
		lfiledelete vExportFile
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFile%%% before starting test")		
		#include VUT:HANDLE_ASSERT
	endif
	
	$instancehandle-&gt;setBaseDirectory(vExportDirectory, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "setBaseDirectory did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT

	putitem/id vInParams, "OBJECT_PROFILE", "TST_PROC"
	putitem/id vInParams, "OBJECT_TYPE"	, "&lt;PROC&gt;"
	putitem/id vInParams, "FORCE_EXPORT"	, 1
	$instancehandle-&gt;exportObjects(vInParams, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "exportObjects did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT
	
	;We expect a file svn_expimp.xml to be present in ..\test\
	lfileload vExportFile, vExportContents
	$instanceparent-&gt;assertGreaterThan($status, 0, "lfileload did not load %%vExportFile%%%")	

	;Tidy up
	if($lfileexists(vExportFile) == 1)
		lfiledelete vExportFile
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFile%%% after test")		
		#include VUT:HANDLE_ASSERT
	endif

	return &lt;OK&gt;

end ;testExportProc


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testExportProcToRelativePath
;--------------------------------------------------------------------
variables
	String	vWorkingDirectory
	String	vExportDirectory
	String	vExportFile
	String	vInParams
	String	vMessages
	String	vExportContents
endvariables

	vWorkingDirectory	= $ldir()
	vExportDirectory	= "%%vWorkingDirectory%%%..\test\"
	vExportFile			= "%%vWorkingDirectory%%%..\test\proc\tst_proc.xml"

	if($lfileexists(vExportFile) == 1)
		lfiledelete vExportFile
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFile%%% before starting test")		
		#include VUT:HANDLE_ASSERT
	endif
	
	$instancehandle-&gt;setBaseDirectory(vExportDirectory, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "setBaseDirectory did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT

	putitem/id vInParams, "OBJECT_PROFILE", "TST_PROC"
	putitem/id vInParams, "OBJECT_TYPE"	, "&lt;PROC&gt;"
	putitem/id vInParams, "EXPORT_PATH"	, "proc\"	
	putitem/id vInParams, "FORCE_EXPORT"	, 1
	$instancehandle-&gt;exportObjects(vInParams, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "exportObjects did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT
	
	;We expect a file tst_proc.xml to be present in ..\test\proc\
	lfileload vExportFile, vExportContents
	$instanceparent-&gt;assertGreaterThan($status, 0, "lfileload did not load %%vExportFile%%%")	

	;Tidy up
	if($lfileexists(vExportFile) == 1)
		lfiledelete vExportFile
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFile%%% after test")		
		#include VUT:HANDLE_ASSERT
	endif

	return &lt;OK&gt;

end ;testExportProcToRelativePath


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testExportLibrary
;--------------------------------------------------------------------
variables
	String	vWorkingDirectory
	String	vExportDirectory
	String	vExportFile
	String	vInParams
	String	vMessages
	String	vExportContents
endvariables

	vWorkingDirectory	= $ldir()
	vExportDirectory	= "%%vWorkingDirectory%%%..\test\"
	vExportFile			= "%%vWorkingDirectory%%%..\test\svn_library.xml"

	if($lfileexists(vExportFile) == 1)
		lfiledelete vExportFile
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFile%%% before starting test")		
		#include VUT:HANDLE_ASSERT
	endif
	
	$instancehandle-&gt;setBaseDirectory(vExportDirectory, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "setBaseDirectory did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT

	putitem/id vInParams, "OBJECT_PROFILE", "SVN_LIBRARY"
	putitem/id vInParams, "OBJECT_TYPE"	, "&lt;LIBRARY&gt;"
	putitem/id vInParams, "FORCE_EXPORT"	, 1
	$instancehandle-&gt;exportObjects(vInParams, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "exportObjects did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT
	
	;We expect a file svn_library.xml to be present in ..\test\
	lfileload vExportFile, vExportContents
	$instanceparent-&gt;assertGreaterThan($status, 0, "lfileload did not load %%vExportFile%%%")	

	;Tidy up
	if($lfileexists(vExportFile) == 1)
		lfiledelete vExportFile
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFile%%% after test")		
		#include VUT:HANDLE_ASSERT
	endif

	return &lt;OK&gt;

end ;testExportLibrary


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testExportLibraryWithIncludeLib
;--------------------------------------------------------------------
variables
	String	vWorkingDirectory
	String	vExportDirectory
	String	vExportFile
	String	vInParams
	String	vMessages
	String	vExportContents
endvariables

	vWorkingDirectory	= $ldir()
	vExportDirectory	= "%%vWorkingDirectory%%%..\test\"
	vExportFile			= "%%vWorkingDirectory%%%..\test\svn_library.xml"

	if($lfileexists(vExportFile) == 1)
		lfiledelete vExportFile
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFile%%% before starting test")		
		#include VUT:HANDLE_ASSERT
	endif
	
	$instancehandle-&gt;setBaseDirectory(vExportDirectory, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "setBaseDirectory did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT

	putitem/id vInParams, "OBJECT_PROFILE", "SVN_LIBRARY"
	putitem/id vInParams, "OBJECT_TYPE"	, "&lt;LIBRARY&gt;"
	putitem/id vInParams, "INCLUDE_LIB"	, 1	
	putitem/id vInParams, "FORCE_EXPORT"	, 1
	$instancehandle-&gt;exportObjects(vInParams, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "exportObjects did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT
	
	;We expect nothing at ..\test\svn_library.xml
	if($lfileexists(vExportFile) == 1)
		lfiledelete vExportFile
		$instanceparent-&gt;assertEqual(0, 1, "lfileexists found %%vExportFile%%%, it shouldn't be there")		
		#include VUT:HANDLE_ASSERT
	endif

	return &lt;OK&gt;

end ;testExportLibraryWithIncludeLib


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testExpWithIncLibSetting
;--------------------------------------------------------------------
variables
	String	vWorkingDirectory
	String	vExportDirectory
	String	vExportFileWith
	String	vExportFileWithout
	String	vInParams
	String	vMessages
	String	vExportContents
	Numeric	vSizeWith
	Numeric	vSizeWithout
endvariables

	vWorkingDirectory		= $ldir()
	vExportFileWith			= "%%vWorkingDirectory%%%..\test\with\IP_IMPFROMPATH.xml"
	vExportFileWithout		= "%%vWorkingDirectory%%%..\test\without\IP_IMPFROMPATH.xml"

	if($lfileexists(vExportFileWith) == 1)
		lfiledelete vExportFileWith
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFileWith%%% before starting test")		
		#include VUT:HANDLE_ASSERT
	endif

	if($lfileexists(vExportFileWithout) == 1)
		lfiledelete vExportFileWithout
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFileWithout%%% before starting test")		
		#include VUT:HANDLE_ASSERT
	endif

	vExportDirectory = "%%vWorkingDirectory%%%..\test"
	$instancehandle-&gt;setBaseDirectory(vExportDirectory, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "setBaseDirectory did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT

	;Export with INCLUDE_LIB set
	vInParams = ""
	putitem/id vInParams, "OBJECT_PROFILE", "IP_IMPFROMPATH"
	putitem/id vInParams, "OBJECT_TYPE"	, "&lt;INCLUDE&gt;"
	putitem/id vInParams, "EXPORT_PATH"	, "with\"
	putitem/id vInParams, "INCLUDE_LIB"	, 1	
	putitem/id vInParams, "FORCE_EXPORT"	, 1
	$instancehandle-&gt;exportObjects(vInParams, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "exportObjects did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT

	;Export without INCLUDE_LIB set
	vInParams = ""
	putitem/id vInParams, "OBJECT_PROFILE", "IP_IMPFROMPATH"
	putitem/id vInParams, "OBJECT_TYPE"	, "&lt;INCLUDE&gt;"
	putitem/id vInParams, "EXPORT_PATH"	, "without\"
	putitem/id vInParams, "FORCE_EXPORT"	, 1
	$instancehandle-&gt;exportObjects(vInParams, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "exportObjects did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT


	;We expect ..\test\with\IP_IMPFROMPATH.xml to be larger than ..\test\without\IP_IMPFROMPATH.xml
	lfileload vExportFileWith, vExportContents
	vSizeWith = $status
	lfileload vExportFileWithout, vExportContents
	vSizeWithout = $status
	$instanceparent-&gt;assertGreaterThan(vSizeWith, vSizeWithout, "The file with the library def should be bigger. It isn't.")	
	#include VUT:HANDLE_ASSERT

	;Tidy up
	if($lfileexists(vExportFileWith) == 1)
		lfiledelete vExportFileWith
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFileWith%%% after test")		
		#include VUT:HANDLE_ASSERT
	endif

	if($lfileexists(vExportFileWithout) == 1)
		lfiledelete vExportFileWithout
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFileWithout%%% after test")		
		#include VUT:HANDLE_ASSERT
	endif

	return &lt;OK&gt;

end ;testExpWithIncLibSetting


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testExpGlyphWithIncLibSet
;--------------------------------------------------------------------
variables
	String	vWorkingDirectory
	String	vExportDirectory
	String	vExportFileWith
	String	vExportFileWithout
	String	vInParams
	String	vMessages
	String	vExportContents
	Numeric	vSizeWith
	Numeric	vSizeWithout
endvariables

	vWorkingDirectory		= $ldir()
	vExportFileWith			= "%%vWorkingDirectory%%%..\test\with\FILEADD.xml"
	vExportFileWithout		= "%%vWorkingDirectory%%%..\test\without\FILEADD.xml"

	if($lfileexists(vExportFileWith) == 1)
		lfiledelete vExportFileWith
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFileWith%%% before starting test")		
		#include VUT:HANDLE_ASSERT
	endif

	if($lfileexists(vExportFileWithout) == 1)
		lfiledelete vExportFileWithout
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFileWithout%%% before starting test")		
		#include VUT:HANDLE_ASSERT
	endif

	vExportDirectory = "%%vWorkingDirectory%%%..\test"
	$instancehandle-&gt;setBaseDirectory(vExportDirectory, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "setBaseDirectory did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT

	;Export with INCLUDE_LIB set
	vInParams = ""
	putitem/id vInParams, "OBJECT_PROFILE", "FILEADD"
	putitem/id vInParams, "OBJECT_TYPE"	, "&lt;GLYPH&gt;"
	putitem/id vInParams, "EXPORT_PATH"	, "with\"
	putitem/id vInParams, "INCLUDE_LIB"	, 1	
	putitem/id vInParams, "FORCE_EXPORT"	, 1
	$instancehandle-&gt;exportObjects(vInParams, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "exportObjects did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT

	;Export without INCLUDE_LIB set
	vInParams = ""
	putitem/id vInParams, "OBJECT_PROFILE", "FILEADD"
	putitem/id vInParams, "OBJECT_TYPE"	, "&lt;GLYPH&gt;"
	putitem/id vInParams, "EXPORT_PATH"	, "without\"
	putitem/id vInParams, "FORCE_EXPORT"	, 1
	$instancehandle-&gt;exportObjects(vInParams, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "exportObjects did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT


	;We expect ..\test\with\IP_IMPFROMPATH.xml to be larger than ..\test\without\IP_IMPFROMPATH.xml
	lfileload vExportFileWith, vExportContents
	vSizeWith = $status
	lfileload vExportFileWithout, vExportContents
	vSizeWithout = $status
	$instanceparent-&gt;assertGreaterThan(vSizeWith, vSizeWithout, "The file with the library def should be bigger. It isn't.")	
	#include VUT:HANDLE_ASSERT

	;Tidy up
	if($lfileexists(vExportFileWith) == 1)
		lfiledelete vExportFileWith
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFileWith%%% after test")		
		#include VUT:HANDLE_ASSERT
	endif

	if($lfileexists(vExportFileWithout) == 1)
		lfiledelete vExportFileWithout
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFileWithout%%% after test")		
		#include VUT:HANDLE_ASSERT
	endif

	return &lt;OK&gt;

end ;testExpGlyphWithIncLibSet


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testExportConstant
;--------------------------------------------------------------------
variables
	String	vWorkingDirectory
	String	vExportDirectory
	String	vExportFile
	String	vInParams
	String	vMessages
	String	vExportContents
endvariables

	vWorkingDirectory	= $ldir()
	vExportDirectory	= "%%vWorkingDirectory%%%..\test\"
	vExportFile			= "%%vWorkingDirectory%%%..\test\constants.xml"

	if($lfileexists(vExportFile) == 1)
		lfiledelete vExportFile
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFile%%% before starting test")		
		#include VUT:HANDLE_ASSERT
	endif
	
	$instancehandle-&gt;setBaseDirectory(vExportDirectory, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "setBaseDirectory did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT

	putitem/id vInParams, "OBJECT_TYPE"	, "&lt;CONSTANT&gt;"
	putitem/id vInParams, "FORCE_EXPORT"	, 1
	putitem/id vInParams, "EXPORT_PATH"	, "constants.xml"
	$instancehandle-&gt;exportObjects(vInParams, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "exportObjects did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT
	
	;We expect a file svn_expimp.xml to be present in ..\test\
	lfileload vExportFile, vExportContents
	$instanceparent-&gt;assertGreaterThan($status, 0, "lfileload did not load %%vExportFile%%%")	

	;Tidy up
	if($lfileexists(vExportFile) == 1)
		lfiledelete vExportFile
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFile%%% after test")		
		#include VUT:HANDLE_ASSERT
	endif

	return &lt;OK&gt;

end ;testExportConstant


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testExportComponentWithInclSig
;--------------------------------------------------------------------
variables
	String	vWorkingDirectory
	String	vExportDirectory
	String	vExportFile
	String	vInParams
	String	vMessages
	String	vExportContents
	String	vExportResult
	String	vOptions
endvariables


;CompIsLeading= True | False 
; Export sequence is based on components, not subsustems, if ObjectType is signature 
 
;inclCompDef= True | False 
; Specify whether to include component definitions when exporting, if ObjectType is signature 
 

	vWorkingDirectory	= $ldir()
	vExportDirectory	= "%%vWorkingDirectory%%%..\test\"
	vExportFile			= "%%vWorkingDirectory%%%..\test\svn_expimp.xml"

	if($lfileexists(vExportFile) == 1)
		lfiledelete vExportFile
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFile%%% before starting test")		
		#include VUT:HANDLE_ASSERT
	endif
	
	$instancehandle-&gt;setBaseDirectory(vExportDirectory, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "setBaseDirectory did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT

	putitem/id vInParams, "OBJECT_PROFILE", "SVN_EXPIMP"
	putitem/id vInParams, "OBJECT_TYPE"	, "&lt;SERVICE&gt;"
	putitem/id vInParams, "FORCE_EXPORT"	, 1
	putitem/id vInParams, "INCLUDE_SIG"	, 1	
	$instancehandle-&gt;exportObjects(vInParams, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "exportObjects did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT
	putitem/id vOptions, "keepopen", 1
	vExportResult = $ude("export", "component", "SVN_EXPIMP", vExportFile, vOptions)
	delitem/id vOptions, "keepopen"
	putitem/id vOptions, "append", 1
	vExportResult = $ude("export", "signature", "SVN_EXPIMP", vExportFile, vOptions)

	;We expect a file svn_expimp.xml to be present in ..\test\
	lfileload vExportFile, vExportContents
	$instanceparent-&gt;assertGreaterThan($status, 0, "lfileload did not load %%vExportFile%%%")	

	;Tidy up
	if($lfileexists(vExportFile) == 1)
		lfiledelete vExportFile
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFile%%% after test")		
		#include VUT:HANDLE_ASSERT
	endif

	return &lt;OK&gt;

end ;testExportComponentWithInclSig



;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testExportMessage
;--------------------------------------------------------------------
variables
	String	vWorkingDirectory
	String	vExportDirectory
	String	vExportFile
	String	vInParams
	String	vMessages
	String	vExportContents
endvariables

	vWorkingDirectory	= $ldir()
	vExportDirectory	= "%%vWorkingDirectory%%%..\test\"
	vExportFile			= "%%vWorkingDirectory%%%..\test\components.xml"

	if($lfileexists(vExportFile) == 1)
		lfiledelete vExportFile
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFile%%% before starting test")		
		#include VUT:HANDLE_ASSERT
	endif
	
	$instancehandle-&gt;setBaseDirectory(vExportDirectory, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "setBaseDirectory did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT

	putitem/id vInParams, "OBJECT_PROFILE", "COMPONENTS"
	putitem/id vInParams, "OBJECT_TYPE"	, "&lt;MESSAGE&gt;"
	putitem/id vInParams, "FORCE_EXPORT"	, 1
	$instancehandle-&gt;exportObjects(vInParams, vMessages)
	$instanceparent-&gt;assertEqual($status, 1, "exportObjects did not return &lt;OK&gt;. Messages: %%vMessages%%%")
	#include VUT:HANDLE_ASSERT
	
	;We expect a file svn_expimp.xml to be present in ..\test\
	lfileload vExportFile, vExportContents
	$instanceparent-&gt;assertGreaterThan($status, 0, "lfileload did not load %%vExportFile%%%")	

	;Tidy up
	if($lfileexists(vExportFile) == 1)
		lfiledelete vExportFile
		$instanceparent-&gt;assertEqual($status, 0, "Could not delete %%vExportFile%%% after test")		
		#include VUT:HANDLE_ASSERT
	endif

	return &lt;OK&gt;

end ;testExportMessage


;--------------------------------------------------------------------
; @TEST
;--------------------------------------------------------------------
operation testParseFormExport
;--------------------------------------------------------------------
variables
	String	vExportFilePath
	Boolean	vIsUnifaceExport
	String	vUnifaceRelease
endvariables

	vExportFilePath = "..\test\SVN_EXPIMP\testExportMessage\SVN_WORKINGCOPY.xml"
	call lpParseUnifaceExport(vExportFilePath, vIsUnifaceExport, vUnifaceRelease)

	$instanceparent-&gt;assertTrue(vIsUnifaceExport, "USVN_WORKINGCOPY.xml should show as a Uniface Export, it doesn't.")		
	#include VUT:HANDLE_ASSERT
	$instanceparent-&gt;assertEqual(vUnifaceRelease, "9.3", "USVN_WORKINGCOPY.xml exported from 9.3, version not parsed correctly.")		
	#include VUT:HANDLE_ASSERT

	return &lt;OK&gt;

end ;testParseFormExport</DAT>
<DAT name="HTML_STYLES" xml:space='preserve'>/corporate.css&uSEP;../css/applic.css</DAT>
<DAT name="TPLACTUAL2" xml:space='preserve'>#include SVN_LIBRARY:IP_DEFINES</DAT>
</OCC>
</TABLE>
<TABLE>
<DSC name="UXGROUP" model="DICT" system="S" pseudo ="73" level="1" noupdate="0"
 rbk="0" ffsql="0" transnr="0" segsize="0" ufocc="1000" charset=".U">
<FLD name="UTIMESTAMP" seqno="1" type="E" level="2" pack="0" scale="0" length="15"
 pointer="0" inum="0" ufocc="0" />
<FLD name="ULABEL" seqno="2" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="1" ufocc="0" mandatory="yes" idxnum="1" idxsnr="101" />
<FLD name="UBASE" seqno="3" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="1" ufocc="0" mandatory="yes" idxnum="1" idxsnr="102" />
<FLD name="UFORM" seqno="4" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="2" ufocc="0" mandatory="yes" idxnum="1,2" idxsnr="103,1" />
<FLD name="UVERS" seqno="5" type="S" level="2" pack="0" scale="0" length="12"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UDESCR" seqno="6" type="S" level="2" pack="0" scale="0" length="25"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_BORD" seqno="7" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_INDB" seqno="8" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_DBMS" seqno="9" type="S" level="2" pack="0" scale="0" length="3"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_UPD" seqno="10" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_MINL" seqno="11" type="N" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_MAXL" seqno="12" type="N" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_MINR" seqno="13" type="N" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_MAXR" seqno="14" type="N" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TPLGINTF" seqno="15" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_INTF" seqno="16" type="S" level="2" pack="0" scale="0" length="64"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TEMPLATENAME" seqno="17" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UINHERIT" seqno="18" type="B" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TPLACTUAL" seqno="19" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E6,0,0,0,,0,0,0,," />
<FLD name="GETOCC" seqno="20" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C1,0,0,0,,0,0,0,," />
<FLD name="PUTOCC" seqno="21" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C2,0,0,0,,0,0,0,," />
<FLD name="DELOCC" seqno="22" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C3,0,0,0,,0,0,0,," />
<FLD name="LCK" seqno="23" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C4,0,0,0,,0,0,0,," />
<FLD name="UNLOCK" seqno="24" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C5,0,0,0,,0,0,0,," />
<FLD name="GETSEGM" seqno="25" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C6,0,0,0,,0,0,0,," />
<FLD name="ADDOCC" seqno="26" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C7,0,0,0,,0,0,0,," />
<FLD name="DELOCCR" seqno="27" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C8,0,0,0,,0,0,0,," />
<FLD name="ENDMOD" seqno="28" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C9,0,0,0,,0,0,0,," />
<FLD name="DOC" seqno="29" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CA,0,0,0,,0,0,0,," />
<FLD name="DETAIL" seqno="30" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CB,0,0,0,,0,0,0,," />
<FLD name="CREOCC" seqno="31" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CC,0,0,0,,0,0,0,," />
<FLD name="MENU" seqno="32" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CD,0,0,0,,0,0,0,," />
<FLD name="FINDOCC" seqno="33" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CE,0,0,0,,0,0,0,," />
<FLD name="ERROR" seqno="34" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CF,0,0,0,,0,0,0,," />
<FLD name="GENERAL" seqno="35" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D0,0,0,0,,0,0,0,," />
<FLD name="STARTMOD" seqno="36" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D1,0,0,0,,0,0,0,," />
<FLD name="FLIST" seqno="37" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E1,0,0,0,,0,0,0,," />
<FLD name="BREAK" seqno="38" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E2,0,0,0,,0,0,0,," />
<FLD name="VLDE" seqno="39" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D2,0,0,0,,0,0,0,," />
<FLD name="VLDK" seqno="40" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D3,0,0,0,,0,0,0,," />
<FLD name="UPOPUP" seqno="41" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D4,0,0,0,,0,0,0,," />
<FLD name="UISBCLASS" seqno="42" type="B" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UISASSOC" seqno="43" type="B" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_OBJSVC" seqno="44" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DC,0,0,0,,0,0,0,," />
<FLD name="U_SVCUSE" seqno="45" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DD,0,0,0,,0,0,0,," />
<FLD name="HTML_ENTPROP" seqno="46" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D7,0,0,0,,0,0,0,," />
<FLD name="HTML_TABTYPE" seqno="47" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D8,0,0,0,,0,0,0,," />
<FLD name="HTML_ENTHK_B" seqno="48" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D9,0,0,0,,0,0,0,," />
<FLD name="HTML_ENTHK_E" seqno="49" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DA,0,0,0,,0,0,0,," />
<FLD name="HTML_OCCHK_B" seqno="50" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DB,0,0,0,,0,0,0,," />
<FLD name="HTML_OCCHK_E" seqno="51" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DE,0,0,0,,0,0,0,," />
<FLD name="HTML_ENTCLASS" seqno="52" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DF,0,0,0,,0,0,0,," />
<FLD name="U_GLAB" seqno="53" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E0,0,0,0,,0,0,0,," />
<FLD name="UEOINTERFACE" seqno="54" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E3,0,0,0,,0,0,0,," />
<FLD name="UECINTERFACE" seqno="55" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E4,0,0,0,,0,0,0,," />
<FLD name="UEOOPERS" seqno="56" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E5,0,0,0,,0,0,0,," />
<FLD name="UECOPERS" seqno="57" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E7,0,0,0,,0,0,0,," />
<FLD name="UEOTRIGGERS" seqno="58" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E8,0,0,0,,0,0,0,," />
<FLD name="UECTRIGGERS" seqno="59" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E9,0,0,0,,0,0,0,," />
<FLD name="UGEOMETRY" seqno="60" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EA,0,0,0,,0,0,0,," />
<FLD name="UWIDGETTYPE" seqno="61" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EB,0,0,0,,0,0,0,," />
<FLD name="UWIDGETCREATE" seqno="62" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EC,0,0,0,,0,0,0,," />
<FLD name="PRLO" seqno="63" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\ED,0,0,0,,0,0,0,," />
<FLD name="PSLO" seqno="64" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EE,0,0,0,,0,0,0,," />
<FLD name="PRSO" seqno="65" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EF,0,0,0,,0,0,0,," />
<FLD name="PSSO" seqno="66" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\F0,0,0,0,,0,0,0,," />
<FLD name="UPARENT" seqno="67" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\F1,0,0,0,,0,0,0,," />
</DSC>
<OCC>
<DAT name="UTIMESTAMP">2010-01-29T08:37:55.65</DAT>
<DAT name="ULABEL">SVN_LASTEXPORTED</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">SVN_EXPIMP</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="FLIST">*</DAT>
<DAT name="UISBCLASS">F</DAT>
<DAT name="UISASSOC">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2010-01-29T08:26:18.87</DAT>
<DAT name="ULABEL">UAPPL</DAT>
<DAT name="UBASE">DICT</DAT>
<DAT name="UFORM">SVN_EXPIMP</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="FLIST">*</DAT>
<DAT name="UISBCLASS">F</DAT>
<DAT name="UISASSOC">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2010-01-29T08:26:18.90</DAT>
<DAT name="ULABEL">UCSCH</DAT>
<DAT name="UBASE">DICT</DAT>
<DAT name="UFORM">SVN_EXPIMP</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="FLIST">*</DAT>
<DAT name="UISBCLASS">F</DAT>
<DAT name="UISASSOC">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2010-01-29T08:26:18.90</DAT>
<DAT name="ULABEL">UCTABLE</DAT>
<DAT name="UBASE">DICT</DAT>
<DAT name="UFORM">SVN_EXPIMP</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="FLIST">*</DAT>
<DAT name="UISBCLASS">F</DAT>
<DAT name="UISASSOC">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2010-01-29T08:26:18.90</DAT>
<DAT name="ULABEL">UFORM</DAT>
<DAT name="UBASE">DICT</DAT>
<DAT name="UFORM">SVN_EXPIMP</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="FLIST">*</DAT>
<DAT name="UISBCLASS">F</DAT>
<DAT name="UISASSOC">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2010-01-29T08:26:18.90</DAT>
<DAT name="ULABEL">UGLYPH</DAT>
<DAT name="UBASE">DICT</DAT>
<DAT name="UFORM">SVN_EXPIMP</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="FLIST">*</DAT>
<DAT name="UISBCLASS">F</DAT>
<DAT name="UISASSOC">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2010-01-29T08:26:18.90</DAT>
<DAT name="ULABEL">ULIBR</DAT>
<DAT name="UBASE">DICT</DAT>
<DAT name="UFORM">SVN_EXPIMP</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="FLIST">*</DAT>
<DAT name="UISBCLASS">F</DAT>
<DAT name="UISASSOC">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2010-01-29T08:26:18.90</DAT>
<DAT name="ULABEL">USITEM</DAT>
<DAT name="UBASE">DICT</DAT>
<DAT name="UFORM">SVN_EXPIMP</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="FLIST">*</DAT>
<DAT name="UISBCLASS">F</DAT>
<DAT name="UISASSOC">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2010-01-29T08:26:18.90</DAT>
<DAT name="ULABEL">USMENU</DAT>
<DAT name="UBASE">DICT</DAT>
<DAT name="UFORM">SVN_EXPIMP</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="FLIST">*</DAT>
<DAT name="UISBCLASS">F</DAT>
<DAT name="UISASSOC">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2010-01-29T08:26:18.90</DAT>
<DAT name="ULABEL">USOURCE</DAT>
<DAT name="UBASE">DICT</DAT>
<DAT name="UFORM">SVN_EXPIMP</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="FLIST">*</DAT>
<DAT name="UISBCLASS">F</DAT>
<DAT name="UISASSOC">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2010-01-29T08:26:18.90</DAT>
<DAT name="ULABEL">USSPEC</DAT>
<DAT name="UBASE">DICT</DAT>
<DAT name="UFORM">SVN_EXPIMP</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="FLIST">*</DAT>
<DAT name="UISBCLASS">F</DAT>
<DAT name="UISASSOC">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2010-01-29T08:26:18.90</DAT>
<DAT name="ULABEL">USVN_LASTEXPORTED</DAT>
<DAT name="UBASE">USVN</DAT>
<DAT name="UFORM">SVN_EXPIMP</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="FLIST">*</DAT>
<DAT name="UISBCLASS">F</DAT>
<DAT name="UISASSOC">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2010-01-29T08:26:18.90</DAT>
<DAT name="ULABEL">USVN_SETTINGS</DAT>
<DAT name="UBASE">USVN</DAT>
<DAT name="UFORM">SVN_EXPIMP</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="FLIST">*</DAT>
<DAT name="UISBCLASS">F</DAT>
<DAT name="UISASSOC">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2010-01-29T08:26:18.90</DAT>
<DAT name="ULABEL">UTPLFLD</DAT>
<DAT name="UBASE">DICT</DAT>
<DAT name="UFORM">SVN_EXPIMP</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="FLIST">*</DAT>
<DAT name="UISBCLASS">F</DAT>
<DAT name="UISASSOC">F</DAT>
</OCC>
</TABLE>
<TABLE>
<DSC name="UXFIELD" model="DICT" system="S" pseudo ="73" level="1" noupdate="0"
 rbk="0" ffsql="0" transnr="0" segsize="0" ufocc="1000" charset=".U">
<FLD name="UTIMESTAMP" seqno="1" type="E" level="2" pack="0" scale="0" length="15"
 pointer="0" inum="0" ufocc="0" />
<FLD name="ULABEL" seqno="2" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="1" ufocc="0" mandatory="yes" idxnum="1" idxsnr="101" />
<FLD name="GRP" seqno="3" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="2" ufocc="0" mandatory="yes" idxnum="1,2" idxsnr="102,1" />
<FLD name="UBASE" seqno="4" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="2" ufocc="0" mandatory="yes" idxnum="1,2" idxsnr="103,2" />
<FLD name="UFORM" seqno="5" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="3" ufocc="0" mandatory="yes" idxnum="1,2,3" idxsnr="104,3,1" />
<FLD name="U_TLAB" seqno="6" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UVERS" seqno="7" type="S" level="2" pack="0" scale="0" length="12"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UDESCR" seqno="8" type="S" level="2" pack="0" scale="0" length="25"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_DTYP" seqno="9" type="S" level="2" pack="0" scale="0" length="2"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_INDB" seqno="10" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TPLLAY" seqno="11" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="0" ufocc="0" />
<FLD name="LAYOUTMOD" seqno="12" type="S" level="2" pack="0" scale="0" length="128"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TPLSYN" seqno="13" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="0" ufocc="0" />
<FLD name="SYNTAXMOD" seqno="14" type="S" level="2" pack="0" scale="0" length="192"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TPLINTF" seqno="15" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="0" ufocc="0" />
<FLD name="INTERFACEMOD" seqno="16" type="S" level="2" pack="0" scale="0" length="64"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TABSTOP" seqno="17" type="N" level="2" pack="10" scale="0" length="2"
 pointer="0" inum="0" ufocc="0" />
<FLD name="WIDGETTYPE" seqno="18" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TEMPLATENAME" seqno="19" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UINHERIT" seqno="20" type="B" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="STARTMOD" seqno="21" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C1,0,0,0,,0,0,0,," />
<FLD name="ENDMOD" seqno="22" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C2,0,0,0,,0,0,0,," />
<FLD name="NEXTFLD" seqno="23" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C3,0,0,0,,0,0,0,," />
<FLD name="PREVFLD" seqno="24" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C4,0,0,0,,0,0,0,," />
<FLD name="ENCRYPT" seqno="25" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C5,0,0,0,,0,0,0,," />
<FLD name="DECRYPT" seqno="26" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C6,0,0,0,,0,0,0,," />
<FLD name="DOC" seqno="27" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C7,0,0,0,,0,0,0,," />
<FLD name="DETAIL" seqno="28" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C8,0,0,0,,0,0,0,," />
<FLD name="MENU" seqno="29" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C9,0,0,0,,0,0,0,," />
<FLD name="ERROR" seqno="30" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CA,0,0,0,,0,0,0,," />
<FLD name="UFORMAT" seqno="31" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CB,0,0,0,,0,0,0,," />
<FLD name="DEFORMAT" seqno="32" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CC,0,0,0,,0,0,0,," />
<FLD name="GENERAL" seqno="33" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CD,0,0,0,,0,0,0,," />
<FLD name="GETFOCUS" seqno="34" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CE,0,0,0,,0,0,0,," />
<FLD name="VCHANGED" seqno="35" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CF,0,0,0,,0,0,0,," />
<FLD name="WIDGETCREATE" seqno="36" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DD,0,0,0,,0,0,0,," />
<FLD name="VALLAB" seqno="37" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DE,0,0,0,,0,0,0,," />
<FLD name="INITVALUE" seqno="38" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DF,0,0,0,,0,0,0,," />
<FLD name="TPLACTUAL" seqno="39" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E6,0,0,0,,0,0,0,," />
<FLD name="VLDF" seqno="40" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D0,0,0,0,,0,0,0,," />
<FLD name="UPOPUP" seqno="41" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D1,0,0,0,,0,0,0,," />
<FLD name="UISOBJID" seqno="42" type="B" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="HTML_FLDPROP" seqno="43" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D3,0,0,0,,0,0,0,," />
<FLD name="HTML_CTRLTYPE" seqno="44" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D4,0,0,0,,0,0,0,," />
<FLD name="HTML_HOOK_B" seqno="45" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D5,0,0,0,,0,0,0,," />
<FLD name="HTML_HOOK_M" seqno="46" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D6,0,0,0,,0,0,0,," />
<FLD name="HTML_HOOK_E" seqno="47" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D7,0,0,0,,0,0,0,," />
<FLD name="HTML_LBLHK_B" seqno="48" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D8,0,0,0,,0,0,0,," />
<FLD name="HTML_LBLHK_E" seqno="49" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D9,0,0,0,,0,0,0,," />
<FLD name="HTML_FLDCLASS" seqno="50" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DA,0,0,0,,0,0,0,," />
<FLD name="HTML_LBLCLASS" seqno="51" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DB,0,0,0,,0,0,0,," />
<FLD name="UFOPERS" seqno="52" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DC,0,0,0,,0,0,0,," />
<FLD name="UFTRIGGERS" seqno="53" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E0,0,0,0,,0,0,0,," />
<FLD name="UGEOMETRY" seqno="54" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E1,0,0,0,,0,0,0,," />
<FLD name="USCOPE" seqno="55" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E2,0,0,0,,0,0,0,," />
<FLD name="UFORMATS" seqno="56" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E3,0,0,0,,0,0,0,," />
<FLD name="UHINTERFACE" seqno="57" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E4,0,0,0,,0,0,0,," />
</DSC>
<OCC>
<DAT name="UTIMESTAMP">2010-01-29T08:26:18.92</DAT>
<DAT name="ULABEL">UDESCR</DAT>
<DAT name="GRP">ULIBR</DAT>
<DAT name="UBASE">DICT</DAT>
<DAT name="UFORM">SVN_EXPIMP</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
<DAT name="HTML_CTRLTYPE">U_INPUT</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2010-01-29T08:26:18.92</DAT>
<DAT name="ULABEL">ULIBRARY</DAT>
<DAT name="GRP">ULIBR</DAT>
<DAT name="UBASE">DICT</DAT>
<DAT name="UFORM">SVN_EXPIMP</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
<DAT name="HTML_CTRLTYPE">U_INPUT</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2010-01-29T08:26:18.92</DAT>
<DAT name="ULABEL">UTIMESTAMP</DAT>
<DAT name="GRP">ULIBR</DAT>
<DAT name="UBASE">DICT</DAT>
<DAT name="UFORM">SVN_EXPIMP</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
<DAT name="HTML_CTRLTYPE">U_INPUT</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2010-01-29T08:26:18.92</DAT>
<DAT name="ULABEL">UVERS</DAT>
<DAT name="GRP">ULIBR</DAT>
<DAT name="UBASE">DICT</DAT>
<DAT name="UFORM">SVN_EXPIMP</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
<DAT name="HTML_CTRLTYPE">U_INPUT</DAT>
</OCC>
</TABLE>
<TABLE>
<DSC name="UXREGS" model="DICT" system="S" pseudo ="73" level="1" noupdate="0"
 rbk="0" ffsql="0" transnr="0" segsize="0" ufocc="0" charset=".U">
<FLD name="UTIMESTAMP" seqno="1" type="E" level="2" pack="0" scale="0" length="15"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_STAT" seqno="2" type="S" level="2" pack="0" scale="0" length="4"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_TYPE" seqno="3" type="S" level="2" pack="0" scale="0" length="2"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_FORMLIB" seqno="4" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="2" ufocc="0" mandatory="yes" idxnum="1,3" idxsnr="101,1" />
<FLD name="U_NAME" seqno="5" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="2" ufocc="0" mandatory="yes" idxnum="1,2" idxsnr="102,1" />
<FLD name="UVERS" seqno="6" type="S" level="2" pack="0" scale="0" length="12"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UDESCR" seqno="7" type="S" level="2" pack="0" scale="0" length="25"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_DTYP" seqno="8" type="S" level="2" pack="0" scale="0" length="2"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_LAYOUT" seqno="9" type="S" level="2" pack="0" scale="0" length="46"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_DOC" seqno="10" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C1,0,0,0,,0,0,0,," />
<FLD name="USCOPE" seqno="11" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C2,0,0,0,,0,0,0,," />
<FLD name="UHINTERFACE" seqno="12" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C3,0,0,0,,0,0,0,," />
</DSC>
<OCC>
<DAT name="UTIMESTAMP">2010-01-29T08:26:18.95</DAT>
<DAT name="U_FORMLIB">SVN_EXPIMP</DAT>
<DAT name="U_NAME">BASEDIR</DAT>
<DAT name="U_DTYP">S</DAT>
</OCC>
</TABLE>
</UNIFACE>
