<?xml version='1.0' encoding='UTF-8' ?>
<!-- Created by Uniface - (C) Uniface B.V. All rights reserved -->
<!DOCTYPE UNIFACE PUBLIC "UNIFACE.DTD" "UNIFACE.DTD">
<UNIFACE release="9.6" xmlengine="2.0">
<TABLE>
<DSC name="UFORM" model="DICT" system="S" pseudo ="73" level="1" noupdate="0"
 rbk="0" ffsql="0" transnr="0" segsize="0" ufocc="1000" charset=".U">
<FLD name="UTIMESTAMP" seqno="1" type="E" level="2" pack="0" scale="0" length="15"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UCOMPSTAMP" seqno="2" type="E" level="2" pack="0" scale="0" length="15"
 pointer="0" inum="0" ufocc="0" />
<FLD name="ULABEL" seqno="3" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="1" ufocc="0" mandatory="yes" idxnum="1" idxsnr="101" />
<FLD name="FTYP" seqno="4" type="S" level="2" pack="0" scale="0" length="4"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UVERS" seqno="5" type="S" level="2" pack="0" scale="0" length="12"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UDESCR" seqno="6" type="S" level="2" pack="0" scale="0" length="25"
 pointer="0" inum="0" ufocc="0" />
<FLD name="FHEAD" seqno="7" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="VMAAT" seqno="8" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="HMAAT" seqno="9" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UCOLOR" seqno="10" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="WVPOS" seqno="11" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="WHPOS" seqno="12" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="WVSIZ" seqno="13" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="WHSIZ" seqno="14" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="CLRSCRN" seqno="15" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UBORDER" seqno="16" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="RIBIN" seqno="17" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="0" ufocc="0" />
<FLD name="RIBOT" seqno="18" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="0" ufocc="0" />
<FLD name="MOVABLE" seqno="19" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="VIDEOINVERSE" seqno="20" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="VIDEOBRIGHT" seqno="21" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="VIDEOUNLINE" seqno="22" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="VIDEOBLINK" seqno="23" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UPANEL" seqno="24" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="0" ufocc="0" />
<FLD name="POSPANEL" seqno="25" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UPULL" seqno="26" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="0" ufocc="0" />
<FLD name="HIDESTACK" seqno="27" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TEMPLATENAME" seqno="28" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="1" ufocc="0" idxnum="2" idxsnr="1" />
<FLD name="UINHERIT" seqno="29" type="B" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="LIBRAR" seqno="30" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UTRANSACT" seqno="31" type="S" level="2" pack="0" scale="0" length="8"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TPLACTUAL" seqno="32" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D3,0,0,0,,0,0,0,," />
<FLD name="CONSTRAINTS" seqno="33" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D4,0,0,0,,0,0,0,," />
<FLD name="INIT" seqno="34" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C1,0,0,0,,0,0,0,," />
<FLD name="CLEAR" seqno="35" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C2,0,0,0,,0,0,0,," />
<FLD name="RETRIEVE" seqno="36" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C3,0,0,0,,0,0,0,," />
<FLD name="RECORD" seqno="37" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C4,0,0,0,,0,0,0,," />
<FLD name="STORE" seqno="38" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C5,0,0,0,,0,0,0,," />
<FLD name="DELET" seqno="39" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C6,0,0,0,,0,0,0,," />
<FLD name="ACCEPT" seqno="40" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C7,0,0,0,,0,0,0,," />
<FLD name="QUIT" seqno="41" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C8,0,0,0,,0,0,0,," />
<FLD name="MENU" seqno="42" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C9,0,0,0,,0,0,0,," />
<FLD name="INTKEY" seqno="43" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CA,0,0,0,,0,0,0,," />
<FLD name="SPRINT" seqno="44" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CB,0,0,0,,0,0,0,," />
<FLD name="EPRINT" seqno="45" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CC,0,0,0,,0,0,0,," />
<FLD name="ASYNC" seqno="46" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CD,0,0,0,,0,0,0,," />
<FLD name="GENERAL" seqno="47" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CE,0,0,0,,0,0,0,," />
<FLD name="FORMPIC" seqno="48" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E0,0,0,0,,0,0,0,," />
<FLD name="HEADER" seqno="49" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E3,0,0,0,,0,0,0,," />
<FLD name="LISTING" seqno="50" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E5,0,0,0,,0,0,0,," />
<FLD name="PERF" seqno="51" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E1,0,0,0,,0,0,0,," />
<FLD name="PROTO" seqno="52" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E2,0,0,0,,0,0,0,," />
<FLD name="TITLE" seqno="53" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E7,0,0,0,,0,0,0,," />
<FLD name="WINPROP" seqno="54" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D2,0,0,0,,0,0,0,," />
<FLD name="FRLF" seqno="55" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E4,0,0,0,,0,0,0,," />
<FLD name="FRGF" seqno="56" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E6,0,0,0,,0,0,0,," />
<FLD name="SFUNC" seqno="57" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DC,0,0,0,,0,0,0,," />
<FLD name="HTMLPROP" seqno="58" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DD,0,0,0,,0,0,0,," />
<FLD name="USCONTAINED" seqno="59" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CF,0,0,0,,0,0,0,," />
<FLD name="UEXECDEF" seqno="60" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D0,0,0,0,,0,0,0,," />
<FLD name="UPOPUP" seqno="61" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D5,0,0,0,,0,0,0,," />
<FLD name="UML_DATA" seqno="62" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D6,0,0,0,,0,0,0,," />
<FLD name="HTML_CMPPROP" seqno="63" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D1,0,0,0,,0,0,0,," />
<FLD name="HTML_FORMAT" seqno="64" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D7,0,0,0,,0,0,0,," />
<FLD name="HTML_STYLES" seqno="65" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D8,0,0,0,,0,0,0,," />
<FLD name="HTML_HOOK_H" seqno="66" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D9,0,0,0,,0,0,0,," />
<FLD name="HTML_HOOK_B" seqno="67" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DA,0,0,0,,0,0,0,," />
<FLD name="HTML_HOOK_E" seqno="68" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DB,0,0,0,,0,0,0,," />
<FLD name="HTML_BODYHOOK" seqno="69" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DE,0,0,0,,0,0,0,," />
<FLD name="HTML_CMPCLASS" seqno="70" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DF,0,0,0,,0,0,0,," />
<FLD name="GETSTATE" seqno="71" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E8,0,0,0,,0,0,0,," />
<FLD name="SETSTATE" seqno="72" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E9,0,0,0,,0,0,0,," />
<FLD name="UNOSTATE" seqno="73" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EA,0,0,0,,0,0,0,," />
<FLD name="CMP_EXT" seqno="74" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EB,0,0,0,,0,0,0,," />
<FLD name="UCTRIGGERS" seqno="75" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EC,0,0,0,,0,0,0,," />
<FLD name="UACCESSPATH" seqno="76" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\ED,0,0,0,,0,0,0,," />
<FLD name="USPLITPROP" seqno="77" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EE,0,0,0,,0,0,0,," />
<FLD name="TPLACTUAL2" seqno="78" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EF,0,0,0,,0,0,0,," />
<FLD name="USTATEMANAGEDBY" seqno="79" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\F0,0,0,0,,0,0,0,," />
<FLD name="HTMLSKELETON" seqno="80" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\F1,0,0,0,,0,0,0,," />
</DSC>
<OCC>
<DAT name="UTIMESTAMP">2016-02-12T17:00:47.00</DAT>
<DAT name="UCOMPSTAMP">2016-02-12T17:00:47.00</DAT>
<DAT name="ULABEL">VC_MAIN</DAT>
<DAT name="UDESCR" xml:space='preserve'>VC services to UI</DAT>
<DAT name="WVPOS">0</DAT>
<DAT name="WHPOS">0</DAT>
<DAT name="WVSIZ">10</DAT>
<DAT name="WHSIZ">40</DAT>
<DAT name="CLRSCRN">N</DAT>
<DAT name="UBORDER">N</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UTRANSACT">1</DAT>
<DAT name="TPLACTUAL" xml:space='preserve'>
#Comment ----------------------------------------------
#Comment start_of_references
#ifdefined TEMPLATENAME
#info symbol TEMPLATENAME is already or also defined as a global or local constant
#endif
#define TEMPLATENAME=
#Comment 

#Comment end_of_references


#Comment ----------------------------------------------
#Comment start_of_mappings
#Comment end_of_mappings


#Comment ----------------------------------------------
#Comment start_of_symbols
#Comment end_of_symbols


#Comment ----------------------------------------------
</DAT>
<DAT name="GENERAL" xml:space='preserve'>#include VCOMMON_LIBRARY:IP_GET_FILE_LIST
#include VC_LIBRARY:IP_PATH_TO_ID


;-----------------------------------
entry lpEscapePathForList
;-----------------------------------
returns String

params
	String	pPath	: IN
endparams

	$status = &lt;OK&gt;
	return $replace(pPath, 1 , ":" , "%:", -1) 

end ;lpEscapePathForList


entry lpDeleteOccVCStatus
params
   string  psKey      : IN
   string  psMessages : INOUT
   numeric pnReturn   : OUT
endparams
   
   pnReturn = 0
   if ( psKey == "" )
      call lpAddMessage("no key provided for VC_STATUS. Cannot delete", psMessages)
      pnReturn = -1
   else
      clear/e "VC_STATUS" 
      FILEPATH.VC_STATUS/init = psKey
      retrieve/e "VC_STATUS"
      if ( $status == 0 )
         setocc "VC_STATUS", -1
         if ( $hits("VC_STATUS") != 1 )
            call lpAddMessage("More than one occurence (%%psKey%%%) found in VC_STATUS. Cannot delete", psMessages)
            pnReturn = -1
         else
            remocc "VC_STATUS", 0
            store/e "VC_STATUS"
            if ($status = 0)
               commit
            else
               rollback
               call lpAddMessage("Occurence %%psKey%%% not deleted", psMessages)
            endif
         endif
      else
         pnReturn = $status 
        call lpAddMessage("Occurence %%psKey%%% not found in VC_STATUS.", psMessages) 
      endif  
   endif
   
end ; lpDeleteOccVCStatus

;---------------------------------------
entry lpAddMessage
;---------------------------------------
params
	String	pMessage	: IN
	String	pMessages	: INOUT
endparams

variables
	Numeric	vStatus
endvariables

	vStatus = $status
	if ($UI_HANDLE$)
		$UI_HANDLE$-&gt;"%%$UI_MSG_OP$%%%"(pMessage)
	else
		putitem pMessages, -1, "%%pMessage%%% [in &lt;$componentName&gt;]"
	endif
	return vStatus

end ;lpAddMessage</DAT>
<DAT name="FORMPIC" xml:space='preserve'>
 &uFRM;TYP=E&uSEP;NAM=VC_STATUS.VC&uSEP;WID=20&uSEP;HEI=1&uSEP;HOC=20&uSEP;VOC=1&uFRM;</DAT>
<DAT name="PERF">#IDF</DAT>
<DAT name="SFUNC" xml:space='preserve'>;--------------------------------------------------------------------
operation diff
;--------------------------------------------------------------------
params
	string pPath     : IN
	string pMessages : OUT
endparams

	$status = $VCHandler$-&gt;callDiff(pPath, pMessages)

end ;diff


;--------------------------------------------------------------------
; Call Version Control Log function
; Returns number of imported files
;--------------------------------------------------------------------
operation log
params
	string pPath     : IN
	string pBaseDir  : IN
	string pFullSync : IN
	string pMessages : OUT
endparams
variables
	Boolean vSuccess
	numeric vStatus
endvariables

	$status = $VCHandler$-&gt;callLog(pPath, pMessages)
	if ($status &lt; 0) done

	;Reimport all the source under vPath, as it may have changed
	message/nobeep "Checking for updated source..."
	$importer$-&gt;setValidatorActive("validateTimestamp", "F", vSuccess) ; Disable timestamp validator
	if (vSuccess = 0)
		pMessages = "Error disabling timestamp validator, reverted export source not imported into Uniface repository"
		return -1
	endif
	vStatus = $instancehandle-&gt;import(pBaseDir, 0, pFullSync, pMessages)
	$importer$-&gt;setValidatorActive("validateTimestamp", "T", vSuccess) ; Re-enable timestamp validator

	return vStatus

end ;log

;--------------------------------------------------------------------
; Log imported Uniface export file
;--------------------------------------------------------------------
operation LogImport
params
	string   pFile      : IN    ; Filename (inc. path)
	datetime pDictTS    : IN    ; Latest modified timestamp from Uniface metadictionary
	datetime pFileTS    : IN    ; File timestamp
	string   pMessages  : INOUT ; Messages
endparams

variables
	String  vItemStatus
	;String  vReturnedInfo
	Boolean vIsSVNItem
endvariables

	clear/e "VC_STATUS"
	FILEPATH.VC_STATUS/init = pFile
	retrieve/e "VC_STATUS"
	if($status = -2 | $status = -4)
		;Item hasn't been imported before
		clear/e "VC_STATUS"
		FILEPATH.VC_STATUS = pFile
	elseif($status &lt; 0)
		call lpAddMessage("VC_MAIN: Retrieve Failed: %%$status%%%", pMessages)
		return &lt;FAILED&gt;
	endif

	REPOSITORY_DT.VC_STATUS  = pDictTS
	FILEMOD_DT.VC_STATUS     = pFileTS
	;LASTIMPORT_REV.VC_STATUS = $item("Revision",  vReturnedInfo)
	store/e "VC_STATUS"
	if($status &lt; 0)
		call lpAddMessage("VC_MAIN: Store Failed: %%$status%%%", pMessages)
		return &lt;FAILED&gt;
	endif

	;Already logged by importer
	;call lpAddMessage($concat("Imported ", pFile), pMessages)
	return &lt;OK&gt;

end ; logImport

;--------------------------------------------------------------------
;	Return handle and operation configured for logging
;--------------------------------------------------------------------
operation getLogger
;--------------------------------------------------------------------
params
	$LOGGER$    : OUT
	$LOGGER_OP$ : OUT
endparams

end ; getLogger


;--------------------------------------------------------------------
; Return handle and operation configured for logging
;--------------------------------------------------------------------
operation setLogger
;--------------------------------------------------------------------
params
	$LOGGER$    : IN
	$LOGGER_OP$ : IN
endparams

end ; setLogger


;--------------------------------------------------------------------
; Returns number of imported files
;--------------------------------------------------------------------
operation revert
;--------------------------------------------------------------------
params
	string pPath     : IN
	string pBaseDir  : IN
	string pFullSync : IN
	string pMessages : OUT
endparams

variables
	Boolean vSuccess
	numeric vStatus
endvariables

	;Call Tortoise revert screen
	message/nobeep "Calling revert..."
	$status = $VCHandler$-&gt;callRevert(pPath, pMessages)

	;Refresh the SVN status as things may have changed
	$status = $instancehandle-&gt;refreshVCStatus(pBaseDir, pMessages)
	if ($status &lt; 0) done

	;Reimport all the source under pPath, as it may have changed
	message/nobeep "Importing updated source..."
	$importer$-&gt;setValidatorActive("validateTimestamp", "F", vSuccess) ; Disable timestamp validator
	if (vSuccess = 0)
		pMessages = "Error disabling timestamp validator, reverted export source not imported into Uniface repository"
		return -1
	endif

	vStatus = $instancehandle-&gt;import(pPath, 0, pFullSync, pMessages)

	$importer$-&gt;setValidatorActive("validateTimestamp", "T", vSuccess) ; Re-enable timestamp validator

	return vStatus

end ; revert


;--------------------------------------------------------------------
; Get a fresh look at the SVN working copy. 
; This will repopulate WC_STATUS in the handler, e.g. VC_STATUS
;--------------------------------------------------------------------
operation refreshVCStatus
;--------------------------------------------------------------------
params
	String pPath     : IN    ;Path to check
	String pMessages : INOUT
endparams

variables
	Numeric vStatus
endvariables

	vStatus = $VCHandler$-&gt;RefreshVCStatus(pPath, pMessages)
	if ( vStatus != &lt;OK&gt; )
		return vStatus
	endif

	return &lt;OK&gt;

end ;refreshVCStatus


;--------------------------------------------------------------------
; Checkout files from version control and import
;--------------------------------------------------------------------
operation checkout
;--------------------------------------------------------------------
params
	string  pBaseDir        : IN
	string  pRepositoryPath : IN
	string  pMessages       : INOUT
endparams

variables
	numeric vStatus
endvariables

	$status = $VCHandler$-&gt;callCheckout(pBaseDir, pRepositoryPath, pMessages)
	if ($status &lt; 0) done

	;Reimport all the source under the working copy
	message/nobeep "Importing checked out source..."
	$status = $instancehandle-&gt;import(pBaseDir, 0, 1, pMessages)

end ; checkout


;--------------------------------------------------------------------
; Import modified files from version control
;--------------------------------------------------------------------
operation import
;--------------------------------------------------------------------
params
	string  pPath     : IN
	Boolean pForce    : IN
	Boolean pFullSync : IN
	string  pMessages : INOUT
endparams

variables
	numeric vStatus
	boolean vIsConflict
endvariables

	; Refresh Version Control status for everything under pPath, updating VC_STATUS entity
	vStatus = $instancehandle-&gt;refreshVCStatus(pPath, pMessages)
	if(vStatus != &lt;OK&gt;)
		return vStatus
	endif

	; New default behaviour - when you update, revert, merge or checkout
	; the filesystem modified timestamp is set to the current time
	; So process the versioned files in timestamp order
	; TODO: if you manually modify an export file then it could get imported over the current code
	; we should probably check the the stamp in the export and warn if older

	; This should also catch reverted files when performing a comparison by revision
	vStatus = $VCHandler$-&gt;import($IMPORTER$, pForce, pFullSync, vIsConflict, pMessages)
	if (vStatus == &lt;FAILED&gt;)
		return vStatus
	endif
	if (vIsConflict)
		message/warning "Conflict(s) detected - please resolve"
	endif

	;Done importing, inform the import service so it can do any required processing
	commit
	return &lt;OK&gt;

end ; import


;--------------------------------------------------------------------
; Update from version control &amp; import changes
;--------------------------------------------------------------------
operation update
;--------------------------------------------------------------------
params
	string  pPath     : IN
	string  pBaseDir  : In
	Boolean pFullSync : IN
	string  pMessages : INOUT
endparams

variables
	numeric vStatus
endvariables

	;Call Tortoise update screen
	$status = $VCHandler$-&gt;callUpdate(pPath, pMessages)
	if ($status &lt; 0) done

	;Refresh the SVN status as things may have changed
	$status = $instancehandle-&gt;refreshVCStatus(pBaseDir, pMessages)
	if ($status &lt; 0) done

	;Reimport all the source under vPath, as it may have changed
	message/nobeep "Importing updated source..."
	$status = $instancehandle-&gt;import(pBaseDir, 0, pFullSync, pMessages)

end ; update


;--------------------------------------------------------------------
; Commit changes to version control
;--------------------------------------------------------------------
operation commit
;--------------------------------------------------------------------
params
	string  pPath     : IN
	string  pBaseDir  : In
	Boolean pFullSync : IN
	string  pMessages : INOUT
endparams

variables
	numeric vStatus
endvariables

	;Call Tortoise update screen
	message/nobeep "Calling TortoiseSVN commit..."
	$status = $VCHandler$-&gt;callCommit(pPath, pMessages)
	if ($status &lt; 0) done

	message/nobeep "Commit complete. Refreshing working copy status"
	$status = $instancehandle-&gt;refreshVCStatus(pBaseDir, pMessages)
	if ($status &lt; 0) done

end ; commit


;--------------------------------------------------------------------
; Return version control working copy information 
; for the specified file as a list of attributes
; from previously saved SVN_INFO records
;--------------------------------------------------------------------
; TODO: Remove the need to call refreshVCStatus
;       before getWCInfo
; TODO: Strip out pReturnInfo items that are no
;       longer used by SVN_WORKINGCOPY
;--------------------------------------------------------------------
operation getWCInfo
;--------------------------------------------------------------------
params
	String pPath       : IN
	String pReturnInfo : OUT
	String pMessages   : INOUT
endparams

variables
	Numeric vStatus
endvariables

	;Check the given path exists
	if( (pPath = "") | (!$lfileexists(pPath)) )
		call lpAddMessage("%%pPath%%%: Path doesn't exist", pMessages)
		return &lt;FAILED&gt;
	endif

	vStatus = $VCHandler$-&gt;getWCInfo(pPath, pReturnInfo, pMessages)
	return vStatus

end ;getWCInfo


;--------------------------------------------------------------------
; Check to see if the output file requires a lock
; TODO: move to a version control specific implementation
;--------------------------------------------------------------------
operation validateExportFile
;--------------------------------------------------------------------
params
	String  pExportFilePath : IN
	Boolean pDoExport       : INOUT
	Boolean pDoLog          : INOUT
	String  pMessages       : INOUT
endparams

variables
	String  vReturnInfo
	Boolean vNeedsLock
	String  vFileProperties
	String  vFileAttributes
endvariables
	
	pDoExport = 1
	pDoLog    = 1
	if( $lfileexists(pExportFilePath) != 1)
		;pExportFilePath is not a file, so it can't need a lock
		return &lt;OK&gt;
	endif
	
	$instancehandle-&gt;getWCInfo(pExportFilePath, vReturnInfo, pMessages)
	vNeedsLock = $item("NEEDSLOCK", vReturnInfo)
	if(vNeedsLock)
		;If this needs a lock and the file is read-only, it's locked
		vFileProperties = $lfileproperties(pExportFilePath)
		getitem/id vFileAttributes, vFileProperties, "FILEATTRIBUTES"
		if( ($scan(vFileAttributes, "R")) &gt; 0 )
			pDoExport = 0
			pDoLog    = 0
			call lpAddMessage("%%pExportFilePath%% requires a lock. Halting export of object.", pMessages)
		endif
	endif
	
	return &lt;OK&gt;
	
end ;validateExportFile


;--------------------------------------------------------------------
; Check if the file is versioned, and if so, if timestamp is newer
; than the last version we imported.
; Pre-conditions:
;   $WcCheck_I$ is set to indicate whether to perform a SVN working copy check
;	File is versioned
;--------------------------------------------------------------------
operation validateImportStamp
;--------------------------------------------------------------------
params
	String   pFile     : IN    ; Full file path
	Datetime pModStamp : IN    ; File Modification timestamp of Uniface Export file
	String   pDoImport : OUT   ; Flag returned true if we need to import
	String   pMessages : INOUT ; Messages
endparams

variables
	String  vReturnedInfo
	Numeric vStatus
	Boolean vCheckWC
endvariables

	;Look up the last imported timestamp
	clear/e "VC_STATUS"
	FILEPATH.VC_STATUS/init = pFile
	retrieve/e "VC_STATUS"
	vStatus = $status
	if(vStatus = -2 | vStatus = -4)
		;No record found or table doesn't exist, we haven't imported this before - carry on
		pDoImport	= 1
	elseif(vStatus &lt; 0)
		;Couldn't read the table, something is wrong
		call lpAddMessage("Couldn't read from VC_STATUS(%%$status%%%)", pMessages)
		pDoImport	= 0
	else
		; Previously imported
		if(pModStamp &gt; FILEMOD_DT.VC_STATUS)
			;The revision in the repository is older than the file - import it
			pDoImport	= 1
		else
			pDoImport = 0
		endif
		vStatus = &lt;OK&gt;
	endif

	return vStatus

end ;validateImportStamp


;--------------------------------------------------------------------
; Returns true or false
;--------------------------------------------------------------------
operation validatePath
;--------------------------------------------------------------------
params
	String pPath      : IN
	String pInterface : IN
	String pMessages  : OUT
endparams

variables
	Handle vHandle
endvariables

	if(!$vcHandler$)
		$instancehandle-&gt;getVcHandler(pInterface, vHandle, pMessages)
	endif

	$status = $vcHandler$-&gt;validatePath(pPath, pMessages)

	done

end ; validatePath


;--------------------------------------------------------------------
; Delete occurence from VC_STATUS
;--------------------------------------------------------------------
operation deleteOccVCStatus
;--------------------------------------------------------------------
params
	String psKey      : IN
	String psMessages : INOUT
endparams

variables
	Numeric nReturn
endvariables
   
   call lpDeleteOccVCStatus(psKey, psMessages, nReturn)
   return (nReturn)
   
end ; deleteOccVCStatus


;--------------------------------------------------------------------
; Return the version control interface, instantiating if needed
;--------------------------------------------------------------------
operation getVcHandler
;--------------------------------------------------------------------
params
	String pInterface : IN  ; Interface to instantiate if needed
	$vcHandler$       : OUT ; Handle
	String pMessage   : OUT ; Messages
endparams

variables
	Numeric vStatus
endvariables

	if ($vcInterface$ = pInterface)
		return &lt;OK&gt;
	endif

	; No handler configured, instantiate the one supplied
	vStatus = $instancehandle-&gt;setVcHandler(pInterface, $vcHandler$, pMessage)
	return vStatus

end ; getVcHandler


;--------------------------------------------------------------------
; Set the version control interface.
;--------------------------------------------------------------------
operation setVcHandler
;--------------------------------------------------------------------
params
	String pInterface : IN
	$vcHandler$       : OUT
	String pMessage   : OUT
endparams

variables
	String vcComponent
endvariables

	if ($vcInterface$ != pInterface)
		if ($vcHandler$)
			deleteinstance $vcHandler$
		endif
		vcComponent = $concat(pInterface, "_WRAPPER")
		newinstance vcComponent, $vcHandler$
		if ($status &lt; 0)
			pMessage = $concat("Unable to instantiate ", vcComponent, ": ", $item("DESCRIPTION", $procerrorcontext))
			return &lt;FAILED&gt;
		endif
		$vcInterface$ = pInterface
	endif

	return &lt;OK&gt;

end ;setVcHandler


;--------------------------------------------------------------------
operation setImporter
;--------------------------------------------------------------------
params
	$importer$ : IN
endparams

	return &lt;OK&gt;

end ;setImporter


;--------------------------------------------------------------------
operation setUI
;--------------------------------------------------------------------
params
	$UI_HANDLE$ : IN ; User interface handle, e.g. SVN_PROJECT
	$UI_MSG_OP$ : IN ; Message display operation, e.g. ShowMessage
endparams

	return &lt;OK&gt;

end ;setUI
</DAT>
<DAT name="TPLACTUAL2" xml:space='preserve'>#include VC_LIBRARY:IP_DEFINES
</DAT>
</OCC>
</TABLE>
<TABLE>
<DSC name="UXGROUP" model="DICT" system="S" pseudo ="73" level="1" noupdate="0"
 rbk="0" ffsql="0" transnr="0" segsize="0" ufocc="1000" charset=".U">
<FLD name="UTIMESTAMP" seqno="1" type="E" level="2" pack="0" scale="0" length="15"
 pointer="0" inum="0" ufocc="0" />
<FLD name="ULABEL" seqno="2" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="1" ufocc="0" mandatory="yes" idxnum="1" idxsnr="101" />
<FLD name="UBASE" seqno="3" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="1" ufocc="0" mandatory="yes" idxnum="1" idxsnr="102" />
<FLD name="UFORM" seqno="4" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="2" ufocc="0" mandatory="yes" idxnum="1,2" idxsnr="103,1" />
<FLD name="UVERS" seqno="5" type="S" level="2" pack="0" scale="0" length="12"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UDESCR" seqno="6" type="S" level="2" pack="0" scale="0" length="25"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_BORD" seqno="7" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_INDB" seqno="8" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_DBMS" seqno="9" type="S" level="2" pack="0" scale="0" length="3"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_UPD" seqno="10" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_MINL" seqno="11" type="N" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_MAXL" seqno="12" type="N" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_MINR" seqno="13" type="N" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_MAXR" seqno="14" type="N" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TPLGINTF" seqno="15" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_INTF" seqno="16" type="S" level="2" pack="0" scale="0" length="64"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TEMPLATENAME" seqno="17" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UINHERIT" seqno="18" type="B" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TPLACTUAL" seqno="19" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E6,0,0,0,,0,0,0,," />
<FLD name="GETOCC" seqno="20" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C1,0,0,0,,0,0,0,," />
<FLD name="PUTOCC" seqno="21" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C2,0,0,0,,0,0,0,," />
<FLD name="DELOCC" seqno="22" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C3,0,0,0,,0,0,0,," />
<FLD name="LCK" seqno="23" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C4,0,0,0,,0,0,0,," />
<FLD name="UNLOCK" seqno="24" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C5,0,0,0,,0,0,0,," />
<FLD name="GETSEGM" seqno="25" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C6,0,0,0,,0,0,0,," />
<FLD name="ADDOCC" seqno="26" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C7,0,0,0,,0,0,0,," />
<FLD name="DELOCCR" seqno="27" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C8,0,0,0,,0,0,0,," />
<FLD name="ENDMOD" seqno="28" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C9,0,0,0,,0,0,0,," />
<FLD name="DOC" seqno="29" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CA,0,0,0,,0,0,0,," />
<FLD name="DETAIL" seqno="30" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CB,0,0,0,,0,0,0,," />
<FLD name="CREOCC" seqno="31" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CC,0,0,0,,0,0,0,," />
<FLD name="MENU" seqno="32" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CD,0,0,0,,0,0,0,," />
<FLD name="FINDOCC" seqno="33" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CE,0,0,0,,0,0,0,," />
<FLD name="ERROR" seqno="34" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CF,0,0,0,,0,0,0,," />
<FLD name="GENERAL" seqno="35" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D0,0,0,0,,0,0,0,," />
<FLD name="STARTMOD" seqno="36" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D1,0,0,0,,0,0,0,," />
<FLD name="FLIST" seqno="37" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E1,0,0,0,,0,0,0,," />
<FLD name="BREAK" seqno="38" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E2,0,0,0,,0,0,0,," />
<FLD name="VLDE" seqno="39" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D2,0,0,0,,0,0,0,," />
<FLD name="VLDK" seqno="40" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D3,0,0,0,,0,0,0,," />
<FLD name="UPOPUP" seqno="41" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D4,0,0,0,,0,0,0,," />
<FLD name="UISBCLASS" seqno="42" type="B" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UISASSOC" seqno="43" type="B" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_OBJSVC" seqno="44" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DC,0,0,0,,0,0,0,," />
<FLD name="U_SVCUSE" seqno="45" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DD,0,0,0,,0,0,0,," />
<FLD name="HTML_ENTPROP" seqno="46" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D7,0,0,0,,0,0,0,," />
<FLD name="HTML_TABTYPE" seqno="47" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D8,0,0,0,,0,0,0,," />
<FLD name="HTML_ENTHK_B" seqno="48" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D9,0,0,0,,0,0,0,," />
<FLD name="HTML_ENTHK_E" seqno="49" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DA,0,0,0,,0,0,0,," />
<FLD name="HTML_OCCHK_B" seqno="50" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DB,0,0,0,,0,0,0,," />
<FLD name="HTML_OCCHK_E" seqno="51" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DE,0,0,0,,0,0,0,," />
<FLD name="HTML_ENTCLASS" seqno="52" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DF,0,0,0,,0,0,0,," />
<FLD name="U_GLAB" seqno="53" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E0,0,0,0,,0,0,0,," />
<FLD name="UEOINTERFACE" seqno="54" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E3,0,0,0,,0,0,0,," />
<FLD name="UECINTERFACE" seqno="55" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E4,0,0,0,,0,0,0,," />
<FLD name="UEOOPERS" seqno="56" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E5,0,0,0,,0,0,0,," />
<FLD name="UECOPERS" seqno="57" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E7,0,0,0,,0,0,0,," />
<FLD name="UEOTRIGGERS" seqno="58" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E8,0,0,0,,0,0,0,," />
<FLD name="UECTRIGGERS" seqno="59" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E9,0,0,0,,0,0,0,," />
<FLD name="UGEOMETRY" seqno="60" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EA,0,0,0,,0,0,0,," />
<FLD name="UWIDGETTYPE" seqno="61" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EB,0,0,0,,0,0,0,," />
<FLD name="UWIDGETCREATE" seqno="62" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EC,0,0,0,,0,0,0,," />
<FLD name="PRLO" seqno="63" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\ED,0,0,0,,0,0,0,," />
<FLD name="PSLO" seqno="64" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EE,0,0,0,,0,0,0,," />
<FLD name="PRSO" seqno="65" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\EF,0,0,0,,0,0,0,," />
<FLD name="PSSO" seqno="66" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\F0,0,0,0,,0,0,0,," />
<FLD name="UPARENT" seqno="67" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\F1,0,0,0,,0,0,0,," />
<FLD name="UWEBWIDGETTYPE" seqno="68" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\F2,0,0,0,,0,0,0,," />
<FLD name="UWEBWIDGETCREATE" seqno="69" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\F3,0,0,0,,0,0,0,," />
</DSC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">SVN_LASTIMPORTED</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="FLIST">*</DAT>
<DAT name="UISBCLASS">F</DAT>
<DAT name="UISASSOC">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2013-01-18T16:55:36.00</DAT>
<DAT name="ULABEL">SVN_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="TPLACTUAL" xml:space='preserve'>#define CONFLICTED 2
#define NOT_A_FILE 3
#define NOT_IMPORTED 4
</DAT>
<DAT name="FLIST">*</DAT>
<DAT name="UISBCLASS">F</DAT>
<DAT name="UISASSOC">F</DAT>
<DAT name="UEOOPERS" xml:space='preserve'>;-------------------------------------------------
; Import the file described by this occurrence.
;
; pImporter - Handle to importer to use
; vOutput   - The outcome of the import (see entity #defines):
;              &lt;0 - Error
;               0 - OK
;               1 - OK_AND_DONE
;               2 - CONFLICTED
;               3 - NOT_A_FILE
;               4 - NOT_IMPORTED
; pMessages - Message list
;-------------------------------------------------
partner operation import
;-------------------------------------------------
params
	boolean  pForce      : IN
	boolean  pFullSync   : IN
	string   pMessages   : INOUT
endparams

variables
	numeric vStatus
	boolean vDoImport

#ifundefined SVN_COMPARE_REVISION
	string  vFileProperties
#endif

endvariables

	; Do we need to derive extra information?
	if ((TEXT_STATUS.SVN_STATUS != "") &amp; (STATUS.SVN_STATUS = "" )) 
		$status = $occhandle(SVN_STATUS)-&gt;extendOccData("","")
	endif

	; DJA 16/01/2013 Don't import if not versioned or conflicted
	if ($status = &lt;NOT_IMPORTED&gt; | vstatus = &lt;CONFLICTED&gt;) done
	; DJA 16/01/2013 End of change

	; New behaviour - compare filesystem modification timestamp with SVN_LASTIMPORTED
	; Note: it should be quicker to get the modification date here than find the SVN_STATUS 
	;       and lookup the MODIFIED_STAMP
	vFileProperties = $lfileproperties(FILE_NAME.&lt;$entname&gt;, "FILETYPE")
	if ($item("FILETYPE", vFileProperties) != "FILE")
		return &lt;NOT_A_FILE&gt; ; Indicate that it's not a file so we don't log
	endif

	; We only need to import files with a later filesystem modified date than last imported
	if (pForce)
		vDoImport = 1
	else
		call lpValidateImportStamp(FILE_NAME.&lt;$entname&gt;, MODIFIED_STAMP.SVN_STATUS, vDoImport, pMessages)
	endif

	if (vDoImport)
		; Note: Forced import will not validate that XML timestamp is newer
		; but still needs to parse the XML so we can get the latest timestamp
		; (could alternatively be read from repository after import, but 
		;  using this method as it might perform faster in case of remote database)
		vStatus = $Importer$-&gt;importFile(FILE_NAME.&lt;$entname&gt;, 1, pMessages)
     ; KJAN 2013-01-18
		;return(vStatus)
     if ( vStatus &lt; 0 )
        return(&lt;NOT_IMPORTED&gt;)
     else
		   return(vStatus)
     endif
	endif

	if (pFullSync)
		return &lt;NOT_IMPORTED&gt;
	endif

	; We are performing a partial sync (for performance), processing in descending datim order
	; so can stop processing as we have encountered a versioned file that doesn't need importing
	return &lt;OK_AND_DONE&gt;

end ; import


;-------------------------------------------------
partner operation extendOccData
;-------------------------------------------------
params
	string		pFolder		: INOUT
	string		pFolderStatus	: INOUT
endParams
variables
	numeric vStatus
endvariables
	
	;TODO:    Consider property status (i.e. none). ITEM_STATUS should
	;        probably be TEXT_STATUS. 
	vStatus = &lt;OK&gt;	; Default return status

	;If this item is a folder and is reported as having no
	;modifications, we need to check that none of it's
	;children have been modified either.
	if (FILE_NAME.&lt;$entname&gt; == pFolder)
		if($fileexists(FILE_NAME.&lt;$entname&gt;) == 2 )
			STATUS.&lt;$entname&gt;              = pFolderStatus
			HASMODIFICATIONS.&lt;$entname&gt;    = 1
			ISSVNITEM.&lt;$entname&gt;           = 1
			pFolder = lpGetParentFolder(pFolder)
		endif

	else

		selectcase TEXT_STATUS.&lt;$entname&gt;
			; added       - is scheduled for additon
			; conflicted  - local mods received conflicting repos mods
			; deleted     - scheduled for deletion
			; external    - an unversioned path populated by an svn:externals property
			; ignored     - a resource marked as ignored
			; incomplete  - a directory doesn't contain a complete entries list
			; merged      - local mods received repos mods
			; missing     - under v.c., but is missing
			; modified    - text or props have been modified
			; none        - does not exist
			; normal      - exists, but uninteresting
			; obstructed  - an unversioned resource is in the way of the versioned resource
			; replaced    - was deleted and then re-added
			; unversioned - is not a versioned thing in this wc

			case "modified", "deleted", "merged"
				HASMODIFICATIONS.&lt;$entname&gt;    = 1
				ISSVNITEM.&lt;$entname&gt;           = 1

				pFolder = lpGetParentFolder(FILE_NAME.&lt;$entname&gt;)
				pFolderStatus = "modified"

			case "normal", "added", "external"
				HASMODIFICATIONS.&lt;$entname&gt;    = 0
				ISSVNITEM.&lt;$entname&gt;           = 1

			case "unversioned", "ignored", "none"
				HASMODIFICATIONS.&lt;$entname&gt;    = 0
				ISSVNITEM.&lt;$entname&gt;           = 0
				vStatus = &lt;NOT_IMPORTED&gt;

			case "conflicted"
				HASMODIFICATIONS.&lt;$entname&gt;    = 1
				ISSVNITEM.&lt;$entname&gt;           = 1

				pFolder = lpGetParentFolder(FILE_NAME.&lt;$entname&gt;)
				pFolderStatus = "conflicted"
				STATUS.&lt;$entname&gt; = TEXT_STATUS.&lt;$entname&gt;
				vStatus = &lt;CONFLICTED&gt;

			elsecase
				;missing
				;incomplete
				;replaced
				;obstructed
				MESSAGE.&lt;$entname&gt; = "Unexpected item status %%TEXT_STATUS.&lt;$entname&gt;%%% for %%FILE_NAME.&lt;$entname&gt;%%%"
				message/info "Unknown item status %%TEXT_STATUS.&lt;$entname&gt;%%% for %%FILE_NAME.&lt;$entname&gt;%%%"

				HASMODIFICATIONS.&lt;$entname&gt;    = 0
				ISSVNITEM.&lt;$entname&gt;           = 0

		endselectcase

		STATUS.&lt;$entname&gt; = TEXT_STATUS.&lt;$entname&gt;

	endif

	;Check if this item has a svn:needs-lock property
	if(PRESENT_PROPS.&lt;$entname&gt; != "")
		if($item("svn:needs-lock", PRESENT_PROPS.&lt;$entname&gt;) != "")
			NEEDSLOCK.&lt;$entname&gt; = 1
		else
			NEEDSLOCK.&lt;$entname&gt; = 0
		endif
	else
		NEEDSLOCK.&lt;$entname&gt; = 0
	endif

	return vStatus

end ; extendOccData</DAT>
<DAT name="UECOPERS" xml:space='preserve'>;-------------------------------------------------
;
;----------------------------------------------------
partner operation import
;	returns number of files imported, or error status
;----------------------------------------------------
params
	boolean pForce      : IN
	boolean pFullSync   : IN
	boolean pIsConflict : OUT
	string  pMessages   : INOUT
endparams

variables
	datetime vTimestamp
	numeric vImportCount
endvariables

	pIsConflict = 0
	; This function assumes the data is in a sensible order
	
	; If we have nothing to do; do nothing
	if ($empty(&lt;$entname&gt;) &gt; 0)
		return(0)
	endif

	; Set flag specifying if we want to perform a working copy check before importing
	; If not specified, assume we do
	; (some users may want to turn it off for performance if all files under the uSVN
	;  working folder are only managed by uSVN, and therefore all files are versioned)
	$WcCheck_I$ = $logical("SVN_IMPORT_WCCHECK")
	if ($WcCheck_I$ = "")
		$WcCheck_I$ = 1
	endif

	vImportCount = 0
	; Loop through the sorted files in SVN_STATUS, 
	; importing until we hit one that doesn't need importing
	setocc "&lt;$entname&gt;", 1
	while ($status &gt; 0)

		; DJA 20/07/2012 Import if modified to address conflict situations
		;if ( TEXT_STATUS.&lt;$entname&gt; != "modified" ) ; modified means that we have exported
		$occhandle(&lt;$entname&gt;)-&gt;import(pForce, pFullSync, pMessages)
		selectcase $status
		case &lt;OK&gt;
			; Imported OK - we will not need to check this file again.
			$status = $importer$-&gt;getLatestTimestamp(vTimestamp)
			call lpLogImport(FILE_NAME.&lt;$entname&gt;, vTimestamp, pMessages)
			vImportCount += 1
		case &lt;NOT_A_FILE&gt; ; e.g. folder - do nothing
		case &lt;NOT_IMPORTED&gt; ; e.g. unversioned
			putmess "%%FILE_NAME.SVN_STATUS%%% not imported"
		case &lt;CONFLICTED&gt;
			pIsConflict = 1
		case &lt;OK_AND_DONE&gt;
			return vImportCount
		elsecase
			; We can have an error
			; TODO: Rollback?
			done
		endselectcase
		discard "&lt;$entname&gt;"

		;else
		;	; The item is modified - this should mean that it is changed by the export
		;	; The user should commit the change for this function to import it.
		;	call lpAddMessage("%%FILE_NAME.SVN_STATUS%%%: not imported - File marked as modified", pMessages)
		;	discard "&lt;$entname&gt;"
		;endif
		; DJA 20/07/2012 End of Change

	endwhile

	return vImportCount

end ; import


;-------------------------------------------------
partner operation findOcc
;-------------------------------------------------
params
	string pPath     : IN
	string pMessages : INOUT
endparams

variables
	string vTmp
endvariables

	; Things have changed..... 
	; The status rows returned from SVN are no longer in a list but in a non db table
	; This change allows us to sort the data in the table allowing us to target the imports
	; and to reduce the amount of list handling.
	if ( pPath = FILE_NAME.&lt;$entname&gt; ); In theory we should be on the desired row but as this function could be called from elsewhere we may need to do a search.
		return &lt;OK&gt;
	endif
	
	if ( $SVN_LIST$ = "" ) ; As this is the first search we need to build SVN_LIST
		if ( lpBuildStatusList() == &lt;FAILED&gt; )
			return &lt;FAILED&gt; ; Couldn't build the list
		endif
	endif
	
	; We have a list of occurrences
	getitem/id vTmp, $SVN_LIST$, pPath ; The position within the list matches the occurrence order
	if ( $status &lt;= 0 )
		; Couldn't find the occ we were looking for - try rebuilding the list
		if ( lpBuildStatusList() == &lt;FAILED&gt; )
			return &lt;FAILED&gt; ; Couldn't build the list
		endif
		; Now we have a clean list lets try looking again
		getitem/id vTmp, $SVN_LIST$, pPath ; The position within the list matches the occurrence order
		if ( $status &lt;= 0 )
			; still can't find out occ - fail
			return &lt;FAILED&gt;
		endif
	endif
	
	setocc "&lt;$entname&gt;", $status
	if ( pPath = FILE_NAME.SVN_STATUS ) ; Definatly the correct row
		return &lt;OK&gt;
	endif        
	
	; Still on the wrong row 
	if ( lpBuildStatusList() == &lt;FAILED&gt; )
		return &lt;FAILED&gt; ; Couldn't build the list
	endif
	
	getitem/id vTmp, $SVN_LIST$, pPath ; The position within the list matches the occurrence order
	setocc "&lt;$entname&gt;", $status
	if ( pPath = FILE_NAME.SVN_STATUS ) ; Definatly the correct row
		return &lt;OK&gt;
	endif
	
	call lpAddMessage("Could not find %%pPath%%% in SVN_STATUS", pMessages)
	return &lt;FAILED&gt;

end ;findOcc


;-------------------------------------------------
;
;-------------------------------------------------
partner operation postLoadProcess
;-------------------------------------------------
variables
	string vFolder
	string vStatus
endvariables

	; This will calculate the extended data items for all occurrences and 
	; calculate folder status
	if ( STATUS.&lt;$entname&gt; != "" )
		return(0)
	elseif ( $empty(&lt;$entname&gt;) &gt; 0 )
		return(0)
	endif

	sort "&lt;$entname&gt;", "FILE_NAME.&lt;$entname&gt;:d"
	$SVN_LIST$ = ""

	setocc "&lt;$entname&gt;", 1
	while ($status &gt; 0 )
		$occhandle(&lt;$entname&gt;)-&gt;extendOccData(vFolder, vStatus)
		setocc "&lt;$entname&gt;", $curocc(&lt;$entname&gt;) + 1
	endwhile
	
	return &lt;OK&gt;    
	
end ;postLoadProcess
</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">VC_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="FLIST">*</DAT>
<DAT name="UISBCLASS">F</DAT>
<DAT name="UISASSOC">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2014-11-14T16:59:00.00</DAT>
<DAT name="ULABEL">VC_STATUS</DAT>
<DAT name="UBASE">VC</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="FLIST">*</DAT>
<DAT name="UISBCLASS">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2013-01-18T16:55:36.00</DAT>
<DAT name="ULABEL">WC_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="TPLACTUAL" xml:space='preserve'>#define CONFLICTED 2
#define NOT_A_FILE 3
#define NOT_IMPORTED 4
</DAT>
<DAT name="FLIST">*</DAT>
<DAT name="UISBCLASS">F</DAT>
<DAT name="UISASSOC">F</DAT>
<DAT name="UEOOPERS" xml:space='preserve'>;-------------------------------------------------
; Import the file described by this occurrence.
;
; pImporter - Handle to importer to use
; vOutput   - The outcome of the import (see entity #defines):
;              &lt;0 - Error
;               0 - OK
;               1 - OK_AND_DONE
;               2 - CONFLICTED
;               3 - NOT_A_FILE
;               4 - NOT_IMPORTED
; pMessages - Message list
;-------------------------------------------------
partner operation import
;-------------------------------------------------
params
	boolean  pForce      : IN
	boolean  pFullSync   : IN
	string   pMessages   : INOUT
endparams

variables
	numeric vStatus
	boolean vDoImport

#ifundefined SVN_COMPARE_REVISION
	string  vFileProperties
#endif

endvariables

	; Do we need to derive extra information?
	if ((TEXT_STATUS.WC_STATUS != "") &amp; (STATUS.WC_STATUS = "" )) 
		$status = $occhandle(WC_STATUS)-&gt;extendOccData("","")
	endif

	; DJA 16/01/2013 Don't import if not versioned or conflicted
	if ($status = &lt;NOT_IMPORTED&gt; | vstatus = &lt;CONFLICTED&gt;) done
	; DJA 16/01/2013 End of change

	; New behaviour - compare filesystem modification timestamp with SVN_LASTIMPORTED
	; Note: it should be quicker to get the modification date here than find the WC_STATUS 
	;       and lookup the MODIFIED_STAMP
	vFileProperties = $lfileproperties(FILE_NAME.&lt;$entname&gt;, "FILETYPE")
	if ($item("FILETYPE", vFileProperties) != "FILE")
		return &lt;NOT_A_FILE&gt; ; Indicate that it's not a file so we don't log
	endif

	; We only need to import files with a later filesystem modified date than last imported
	if (pForce)
		vDoImport = 1
	else
		call lpValidateImportStamp(FILE_NAME.&lt;$entname&gt;, MODIFIED_STAMP.WC_STATUS, vDoImport, pMessages)
	endif

	if (vDoImport)
		; Note: Forced import will not validate that XML timestamp is newer
		; but still needs to parse the XML so we can get the latest timestamp
		; (could alternatively be read from repository after import, but 
		;  using this method as it might perform faster in case of remote database)
		vStatus = $Importer$-&gt;importFile(FILE_NAME.&lt;$entname&gt;, 1, pMessages)
     ; KJAN 2013-01-18
		;return(vStatus)
     if ( vStatus &lt; 0 )
        return(&lt;NOT_IMPORTED&gt;)
     else
		   return(vStatus)
     endif
	endif

	if (pFullSync)
		return &lt;NOT_IMPORTED&gt;
	endif

	; We are performing a partial sync (for performance), processing in descending datim order
	; so can stop processing as we have encountered a versioned file that doesn't need importing
	return &lt;OK_AND_DONE&gt;

end ; import


;-------------------------------------------------
partner operation extendOccData
;-------------------------------------------------
params
	string		pFolder		: INOUT
	string		pFolderStatus	: INOUT
endParams
variables
	numeric vStatus
endvariables
	
	;TODO:    Consider property status (i.e. none). ITEM_STATUS should
	;        probably be TEXT_STATUS. 
	vStatus = &lt;OK&gt;	; Default return status

	;If this item is a folder and is reported as having no
	;modifications, we need to check that none of it's
	;children have been modified either.
	if (FILE_NAME.&lt;$entname&gt; == pFolder)
		if($fileexists(FILE_NAME.&lt;$entname&gt;) == 2 )
			STATUS.&lt;$entname&gt;              = pFolderStatus
			HASMODIFICATIONS.&lt;$entname&gt;    = 1
			ISSVNITEM.&lt;$entname&gt;           = 1
			pFolder = lpGetParentFolder(pFolder)
		endif

	else

		selectcase TEXT_STATUS.&lt;$entname&gt;
			; added       - is scheduled for additon
			; conflicted  - local mods received conflicting repos mods
			; deleted     - scheduled for deletion
			; external    - an unversioned path populated by an svn:externals property
			; ignored     - a resource marked as ignored
			; incomplete  - a directory doesn't contain a complete entries list
			; merged      - local mods received repos mods
			; missing     - under v.c., but is missing
			; modified    - text or props have been modified
			; none        - does not exist
			; normal      - exists, but uninteresting
			; obstructed  - an unversioned resource is in the way of the versioned resource
			; replaced    - was deleted and then re-added
			; unversioned - is not a versioned thing in this wc

			case "modified", "deleted", "merged"
				HASMODIFICATIONS.&lt;$entname&gt;    = 1
				ISSVNITEM.&lt;$entname&gt;           = 1

				pFolder = lpGetParentFolder(FILE_NAME.&lt;$entname&gt;)
				pFolderStatus = "modified"

			case "normal", "added", "external"
				HASMODIFICATIONS.&lt;$entname&gt;    = 0
				ISSVNITEM.&lt;$entname&gt;           = 1

			case "unversioned", "ignored", "none"
				HASMODIFICATIONS.&lt;$entname&gt;    = 0
				ISSVNITEM.&lt;$entname&gt;           = 0
				vStatus = &lt;NOT_IMPORTED&gt;

			case "conflicted"
				HASMODIFICATIONS.&lt;$entname&gt;    = 1
				ISSVNITEM.&lt;$entname&gt;           = 1

				pFolder = lpGetParentFolder(FILE_NAME.&lt;$entname&gt;)
				pFolderStatus = "conflicted"
				STATUS.&lt;$entname&gt; = TEXT_STATUS.&lt;$entname&gt;
				vStatus = &lt;CONFLICTED&gt;

			elsecase
				;missing
				;incomplete
				;replaced
				;obstructed
				MESSAGE.&lt;$entname&gt; = "Unexpected item status %%TEXT_STATUS.&lt;$entname&gt;%%% for %%FILE_NAME.&lt;$entname&gt;%%%"
				message/info "Unknown item status %%TEXT_STATUS.&lt;$entname&gt;%%% for %%FILE_NAME.&lt;$entname&gt;%%%"

				HASMODIFICATIONS.&lt;$entname&gt;    = 0
				ISSVNITEM.&lt;$entname&gt;           = 0

		endselectcase

		STATUS.&lt;$entname&gt; = TEXT_STATUS.&lt;$entname&gt;

	endif

	;Check if this item has a svn:needs-lock property
	if(PRESENT_PROPS.&lt;$entname&gt; != "")
		if($item("svn:needs-lock", PRESENT_PROPS.&lt;$entname&gt;) != "")
			NEEDSLOCK.&lt;$entname&gt; = 1
		else
			NEEDSLOCK.&lt;$entname&gt; = 0
		endif
	else
		NEEDSLOCK.&lt;$entname&gt; = 0
	endif

	return vStatus

end ; extendOccData</DAT>
<DAT name="UECOPERS" xml:space='preserve'>;-------------------------------------------------
;
;----------------------------------------------------
partner operation import
;	returns number of files imported, or error status
;----------------------------------------------------
params
	boolean pForce      : IN
	boolean pFullSync   : IN
	boolean pIsConflict : OUT
	string  pMessages   : INOUT
endparams

variables
	datetime vTimestamp
	numeric vImportCount
endvariables

	pIsConflict = 0
	; This function assumes the data is in a sensible order
	
	; If we have nothing to do; do nothing
	if ($empty(&lt;$entname&gt;) &gt; 0)
		return(0)
	endif

	; Set flag specifying if we want to perform a working copy check before importing
	; If not specified, assume we do
	; (some users may want to turn it off for performance if all files under the uSVN
	;  working folder are only managed by uSVN, and therefore all files are versioned)
	$WcCheck_I$ = $logical("SVN_IMPORT_WCCHECK")
	if ($WcCheck_I$ = "")
		$WcCheck_I$ = 1
	endif

	vImportCount = 0
	; Loop through the sorted files in WC_STATUS, 
	; importing until we hit one that doesn't need importing
	setocc "&lt;$entname&gt;", 1
	while ($status &gt; 0)

		; DJA 20/07/2012 Import if modified to address conflict situations
		;if ( TEXT_STATUS.&lt;$entname&gt; != "modified" ) ; modified means that we have exported
		$occhandle(&lt;$entname&gt;)-&gt;import(pForce, pFullSync, pMessages)
		selectcase $status
		case &lt;OK&gt;
			; Imported OK - we will not need to check this file again.
			$status = $importer$-&gt;getLatestTimestamp(vTimestamp)
			call lpLogImport(FILE_NAME.&lt;$entname&gt;, vTimestamp, pMessages)
			vImportCount += 1
		case &lt;NOT_A_FILE&gt; ; e.g. folder - do nothing
		case &lt;NOT_IMPORTED&gt; ; e.g. unversioned
			putmess "%%FILE_NAME.WC_STATUS%%% not imported"
		case &lt;CONFLICTED&gt;
			pIsConflict = 1
		case &lt;OK_AND_DONE&gt;
			return vImportCount
		elsecase
			; We can have an error
			; TODO: Rollback?
			done
		endselectcase
		discard "&lt;$entname&gt;"

		;else
		;	; The item is modified - this should mean that it is changed by the export
		;	; The user should commit the change for this function to import it.
		;	call lpAddMessage("%%FILE_NAME.WC_STATUS%%%: not imported - File marked as modified", pMessages)
		;	discard "&lt;$entname&gt;"
		;endif
		; DJA 20/07/2012 End of Change

	endwhile

	return vImportCount

end ; import


;-------------------------------------------------
partner operation findOcc
;-------------------------------------------------
params
	string pPath     : IN
	string pMessages : INOUT
endparams

variables
	string vTmp
endvariables

	; Things have changed..... 
	; The status rows returned from SVN are no longer in a list but in a non db table
	; This change allows us to sort the data in the table allowing us to target the imports
	; and to reduce the amount of list handling.
	if ( pPath = FILE_NAME.&lt;$entname&gt; ); In theory we should be on the desired row but as this function could be called from elsewhere we may need to do a search.
		return &lt;OK&gt;
	endif
	
	if ( $SVN_LIST$ = "" ) ; As this is the first search we need to build SVN_LIST
		if ( lpBuildStatusList() == &lt;FAILED&gt; )
			return &lt;FAILED&gt; ; Couldn't build the list
		endif
	endif
	
	; We have a list of occurrences
	getitem/id vTmp, $SVN_LIST$, pPath ; The position within the list matches the occurrence order
	if ( $status &lt;= 0 )
		; Couldn't find the occ we were looking for - try rebuilding the list
		if ( lpBuildStatusList() == &lt;FAILED&gt; )
			return &lt;FAILED&gt; ; Couldn't build the list
		endif
		; Now we have a clean list lets try looking again
		getitem/id vTmp, $SVN_LIST$, pPath ; The position within the list matches the occurrence order
		if ( $status &lt;= 0 )
			; still can't find out occ - fail
			return &lt;FAILED&gt;
		endif
	endif
	
	setocc "&lt;$entname&gt;", $status
	if ( pPath = FILE_NAME.WC_STATUS ) ; Definatly the correct row
		return &lt;OK&gt;
	endif        
	
	; Still on the wrong row 
	if ( lpBuildStatusList() == &lt;FAILED&gt; )
		return &lt;FAILED&gt; ; Couldn't build the list
	endif
	
	getitem/id vTmp, $SVN_LIST$, pPath ; The position within the list matches the occurrence order
	setocc "&lt;$entname&gt;", $status
	if ( pPath = FILE_NAME.WC_STATUS ) ; Definatly the correct row
		return &lt;OK&gt;
	endif
	
	call lpAddMessage("Could not find %%pPath%%% in WC_STATUS", pMessages)
	return &lt;FAILED&gt;

end ;findOcc


;-------------------------------------------------
;
;-------------------------------------------------
partner operation postLoadProcess
;-------------------------------------------------
variables
	string vFolder
	string vStatus
endvariables

	; This will calculate the extended data items for all occurrences and 
	; calculate folder status
	if ( STATUS.&lt;$entname&gt; != "" )
		return(0)
	elseif ( $empty(&lt;$entname&gt;) &gt; 0 )
		return(0)
	endif

	sort "&lt;$entname&gt;", "FILE_NAME.&lt;$entname&gt;:d"
	$SVN_LIST$ = ""

	setocc "&lt;$entname&gt;", 1
	while ($status &gt; 0 )
		$occhandle(&lt;$entname&gt;)-&gt;extendOccData(vFolder, vStatus)
		setocc "&lt;$entname&gt;", $curocc(&lt;$entname&gt;) + 1
	endwhile
	
	return &lt;OK&gt;    
	
end ;postLoadProcess
</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2015-06-23T10:03:44.00</DAT>
<DAT name="ULABEL">WC_STATUS</DAT>
<DAT name="UBASE">VC</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="TPLACTUAL" xml:space='preserve'>#define CONFLICTED 2
#define NOT_A_FILE 3
#define NOT_IMPORTED 4
</DAT>
<DAT name="FLIST">*</DAT>
<DAT name="UEOOPERS" xml:space='preserve'>;-------------------------------------------------
; Import the file described by this occurrence.
;
; pImporter - Handle to importer to use
; vOutput   - The outcome of the import (see entity #defines):
;              &lt;0 - Error
;               0 - OK
;               1 - OK_AND_DONE
;               2 - CONFLICTED
;               3 - NOT_A_FILE
;               4 - NOT_IMPORTED
; pMessages - Message list
;-------------------------------------------------
partner operation import
;-------------------------------------------------
params
	boolean  pForce      : IN
	boolean  pFullSync   : IN
	string   pMessages   : INOUT
endparams

variables
	numeric vStatus
	boolean vDoImport

#ifundefined SVN_COMPARE_REVISION
	string  vFileProperties
#endif

endvariables

	; Do we need to derive extra information?
	if ((TEXT_STATUS.WC_STATUS != "") &amp; (STATUS.WC_STATUS = "" )) 
		$status = $occhandle(WC_STATUS)-&gt;extendOccData("","")
	endif

	; DJA 16/01/2013 Don't import if not versioned or conflicted
	if ($status = &lt;NOT_IMPORTED&gt; | vstatus = &lt;CONFLICTED&gt;) done
	; DJA 16/01/2013 End of change

	; New behaviour - compare filesystem modification timestamp with SVN_LASTIMPORTED
	; Note: it should be quicker to get the modification date here than find the WC_STATUS 
	;       and lookup the MODIFIED_STAMP
	vFileProperties = $lfileproperties(FILE_NAME.&lt;$entname&gt;, "FILETYPE")
	if ($item("FILETYPE", vFileProperties) != "FILE")
		return &lt;NOT_A_FILE&gt; ; Indicate that it's not a file so we don't log
	endif

	; We only need to import files with a later filesystem modified date than last imported
	if (pForce)
		vDoImport = 1
	else
		call lpValidateImportStamp(FILE_NAME.&lt;$entname&gt;, MODIFIED_STAMP.WC_STATUS, vDoImport, pMessages)
	endif

	if (vDoImport)
		; Note: Forced import will not validate that XML timestamp is newer
		; but still needs to parse the XML so we can get the latest timestamp
		; (could alternatively be read from repository after import, but 
		;  using this method as it might perform faster in case of remote database)
		vStatus = $Importer$-&gt;importFile(FILE_NAME.&lt;$entname&gt;, 1, pMessages)
     ; KJAN 2013-01-18
		;return(vStatus)
     if ( vStatus &lt; 0 )
        return(&lt;NOT_IMPORTED&gt;)
     else
		   return(vStatus)
     endif
	endif

	if (pFullSync)
		return &lt;NOT_IMPORTED&gt;
	endif

	; We are performing a partial sync (for performance), processing in descending datim order
	; so can stop processing as we have encountered a versioned file that doesn't need importing
	return &lt;OK_AND_DONE&gt;

end ; import


;-------------------------------------------------
partner operation extendOccData
;-------------------------------------------------
params
	string		pFolder		: INOUT
	string		pFolderStatus	: INOUT
endParams
variables
	numeric vStatus
endvariables
	
	;TODO:    Consider property status (i.e. none). ITEM_STATUS should
	;        probably be TEXT_STATUS. 
	vStatus = &lt;OK&gt;	; Default return status

	;If this item is a folder and is reported as having no
	;modifications, we need to check that none of it's
	;children have been modified either.
	if (FILE_NAME.&lt;$entname&gt; == pFolder)
		if($fileexists(FILE_NAME.&lt;$entname&gt;) == 2 )
			STATUS.&lt;$entname&gt;              = pFolderStatus
			HASMODIFICATIONS.&lt;$entname&gt;    = 1
			ISSVNITEM.&lt;$entname&gt;           = 1
			pFolder = lpGetParentFolder(pFolder)
		endif

	else

		selectcase TEXT_STATUS.&lt;$entname&gt;
			; added       - is scheduled for additon
			; conflicted  - local mods received conflicting repos mods
			; deleted     - scheduled for deletion
			; external    - an unversioned path populated by an svn:externals property
			; ignored     - a resource marked as ignored
			; incomplete  - a directory doesn't contain a complete entries list
			; merged      - local mods received repos mods
			; missing     - under v.c., but is missing
			; modified    - text or props have been modified
			; none        - does not exist
			; normal      - exists, but uninteresting
			; obstructed  - an unversioned resource is in the way of the versioned resource
			; replaced    - was deleted and then re-added
			; unversioned - is not a versioned thing in this wc

			case "modified", "deleted", "merged"
				HASMODIFICATIONS.&lt;$entname&gt;    = 1
				ISSVNITEM.&lt;$entname&gt;           = 1

				pFolder = lpGetParentFolder(FILE_NAME.&lt;$entname&gt;)
				pFolderStatus = "modified"

			case "normal", "added", "external"
				HASMODIFICATIONS.&lt;$entname&gt;    = 0
				ISSVNITEM.&lt;$entname&gt;           = 1

			case "unversioned", "ignored", "none"
				HASMODIFICATIONS.&lt;$entname&gt;    = 0
				ISSVNITEM.&lt;$entname&gt;           = 0
				vStatus = &lt;NOT_IMPORTED&gt;

			case "conflicted"
				HASMODIFICATIONS.&lt;$entname&gt;    = 1
				ISSVNITEM.&lt;$entname&gt;           = 1

				pFolder = lpGetParentFolder(FILE_NAME.&lt;$entname&gt;)
				pFolderStatus = "conflicted"
				STATUS.&lt;$entname&gt; = TEXT_STATUS.&lt;$entname&gt;
				vStatus = &lt;CONFLICTED&gt;

			elsecase
				;missing
				;incomplete
				;replaced
				;obstructed
				MESSAGE.&lt;$entname&gt; = "Unexpected item status %%TEXT_STATUS.&lt;$entname&gt;%%% for %%FILE_NAME.&lt;$entname&gt;%%%"
				message/info "Unknown item status %%TEXT_STATUS.&lt;$entname&gt;%%% for %%FILE_NAME.&lt;$entname&gt;%%%"

				HASMODIFICATIONS.&lt;$entname&gt;    = 0
				ISSVNITEM.&lt;$entname&gt;           = 0

		endselectcase

		STATUS.&lt;$entname&gt; = TEXT_STATUS.&lt;$entname&gt;

	endif

	;Check if this item has a svn:needs-lock property
	if(PRESENT_PROPS.&lt;$entname&gt; != "")
		if($item("svn:needs-lock", PRESENT_PROPS.&lt;$entname&gt;) != "")
			NEEDSLOCK.&lt;$entname&gt; = 1
		else
			NEEDSLOCK.&lt;$entname&gt; = 0
		endif
	else
		NEEDSLOCK.&lt;$entname&gt; = 0
	endif

	return vStatus

end ; extendOccData</DAT>
<DAT name="UECOPERS" xml:space='preserve'>;----------------------------------------------------
partner operation import
;	returns number of files imported, or error status
;----------------------------------------------------
params
	boolean pForce      : IN
	boolean pFullSync   : IN
	boolean pIsConflict : OUT
	string  pMessages   : INOUT
endparams

variables
	datetime vTimestamp
	numeric vImportCount
endvariables

	pIsConflict = 0
	; This function assumes the data is in a sensible order
	
	; If we have nothing to do; do nothing
	if ($empty(&lt;$entname&gt;) &gt; 0)
		return(0)
	endif

	; Set flag specifying if we want to perform a working copy check before importing
	; If not specified, assume we do
	; (some users may want to turn it off for performance if all files under the uSVN
	;  working folder are only managed by uSVN, and therefore all files are versioned)
	$WcCheck_I$ = $logical("SVN_IMPORT_WCCHECK")
	if ($WcCheck_I$ = "")
		$WcCheck_I$ = 1
	endif

	vImportCount = 0
	; Loop through the sorted files in WC_STATUS, 
	; importing until we hit one that doesn't need importing
	setocc "&lt;$entname&gt;", 1
	while ($status &gt; 0)

		; DJA 20/07/2012 Import if modified to address conflict situations
		;if ( TEXT_STATUS.&lt;$entname&gt; != "modified" ) ; modified means that we have exported
		$occhandle(&lt;$entname&gt;)-&gt;import(pForce, pFullSync, pMessages)
		selectcase $status
		case &lt;OK&gt;
			; Imported OK - we will not need to check this file again.
			$status = $importer$-&gt;getLatestTimestamp(vTimestamp)
			call lpLogImport(FILE_NAME.&lt;$entname&gt;, vTimestamp, pMessages)
			vImportCount += 1
		case &lt;NOT_A_FILE&gt; ; e.g. folder - do nothing
		case &lt;NOT_IMPORTED&gt; ; e.g. unversioned
			putmess "%%FILE_NAME.WC_STATUS%%% not imported"
		case &lt;CONFLICTED&gt;
			pIsConflict = 1
		case &lt;OK_AND_DONE&gt;
			return vImportCount
		elsecase
			; We can have an error
			; TODO: Rollback?
			done
		endselectcase
		discard "&lt;$entname&gt;"

		;else
		;	; The item is modified - this should mean that it is changed by the export
		;	; The user should commit the change for this function to import it.
		;	call lpAddMessage("%%FILE_NAME.WC_STATUS%%%: not imported - File marked as modified", pMessages)
		;	discard "&lt;$entname&gt;"
		;endif
		; DJA 20/07/2012 End of Change

	endwhile

	return vImportCount

end ; import


;-------------------------------------------------
partner operation findOcc
;-------------------------------------------------
params
	string pPath     : IN
	string pMessages : INOUT
endparams

variables
	string vTmp
endvariables

	; Things have changed..... 
	; The status rows returned from SVN are no longer in a list but in a non db table
	; This change allows us to sort the data in the table allowing us to target the imports
	; and to reduce the amount of list handling.
	if ( pPath = FILE_NAME.&lt;$entname&gt; ); In theory we should be on the desired row but as this function could be called from elsewhere we may need to do a search.
		return &lt;OK&gt;
	endif
	
	if ( $SVN_LIST$ = "" ) ; As this is the first search we need to build SVN_LIST
		if ( lpBuildStatusList() == &lt;FAILED&gt; )
			return &lt;FAILED&gt; ; Couldn't build the list
		endif
	endif
	
	; We have a list of occurrences
	getitem/id vTmp, $SVN_LIST$, pPath ; The position within the list matches the occurrence order
	if ( $status &lt;= 0 )
		; Couldn't find the occ we were looking for - try rebuilding the list
		if ( lpBuildStatusList() == &lt;FAILED&gt; )
			return &lt;FAILED&gt; ; Couldn't build the list
		endif
		; Now we have a clean list lets try looking again
		getitem/id vTmp, $SVN_LIST$, pPath ; The position within the list matches the occurrence order
		if ( $status &lt;= 0 )
			; still can't find out occ - fail
			return &lt;FAILED&gt;
		endif
	endif
	
	setocc "&lt;$entname&gt;", $status
	if ( pPath = FILE_NAME.WC_STATUS ) ; Definatly the correct row
		return &lt;OK&gt;
	endif        
	
	; Still on the wrong row 
	if ( lpBuildStatusList() == &lt;FAILED&gt; )
		return &lt;FAILED&gt; ; Couldn't build the list
	endif
	
	getitem/id vTmp, $SVN_LIST$, pPath ; The position within the list matches the occurrence order
	setocc "&lt;$entname&gt;", $status
	if ( pPath = FILE_NAME.WC_STATUS ) ; Definatly the correct row
		return &lt;OK&gt;
	endif
	
	call lpAddMessage("Could not find %%pPath%%% in WC_STATUS", pMessages)
	return &lt;FAILED&gt;

end ;findOcc


;-------------------------------------------------
;
;-------------------------------------------------
partner operation postLoadProcess
;-------------------------------------------------
variables
	string vFolder
	string vStatus
endvariables

	; This will calculate the extended data items for all occurrences and 
	; calculate folder status
	if ( STATUS.&lt;$entname&gt; != "" )
		return(0)
	elseif ( $empty(&lt;$entname&gt;) &gt; 0 )
		return(0)
	endif

	sort "&lt;$entname&gt;", "FILE_NAME.&lt;$entname&gt;:d"
	$SVN_LIST$ = ""

	setocc "&lt;$entname&gt;", 1
	while ($status &gt; 0 )
		$occhandle(&lt;$entname&gt;)-&gt;extendOccData(vFolder, vStatus)
		setocc "&lt;$entname&gt;", $curocc(&lt;$entname&gt;) + 1
	endwhile
	
	return &lt;OK&gt;    
	
end ;postLoadProcess
</DAT>
</OCC>
</TABLE>
<TABLE>
<DSC name="UXFIELD" model="DICT" system="S" pseudo ="73" level="1" noupdate="0"
 rbk="0" ffsql="0" transnr="0" segsize="0" ufocc="1000" charset=".U">
<FLD name="UTIMESTAMP" seqno="1" type="E" level="2" pack="0" scale="0" length="15"
 pointer="0" inum="0" ufocc="0" />
<FLD name="ULABEL" seqno="2" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="1" ufocc="0" mandatory="yes" idxnum="1" idxsnr="101" />
<FLD name="GRP" seqno="3" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="2" ufocc="0" mandatory="yes" idxnum="1,2" idxsnr="102,1" />
<FLD name="UBASE" seqno="4" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="2" ufocc="0" mandatory="yes" idxnum="1,2" idxsnr="103,2" />
<FLD name="UFORM" seqno="5" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="3" ufocc="0" mandatory="yes" idxnum="1,2,3" idxsnr="104,3,1" />
<FLD name="U_TLAB" seqno="6" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UVERS" seqno="7" type="S" level="2" pack="0" scale="0" length="12"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UDESCR" seqno="8" type="S" level="2" pack="0" scale="0" length="25"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_DTYP" seqno="9" type="S" level="2" pack="0" scale="0" length="2"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_INDB" seqno="10" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TPLLAY" seqno="11" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="0" ufocc="0" />
<FLD name="LAYOUTMOD" seqno="12" type="S" level="2" pack="0" scale="0" length="128"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TPLSYN" seqno="13" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="0" ufocc="0" />
<FLD name="SYNTAXMOD" seqno="14" type="S" level="2" pack="0" scale="0" length="192"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TPLINTF" seqno="15" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="0" ufocc="0" />
<FLD name="INTERFACEMOD" seqno="16" type="S" level="2" pack="0" scale="0" length="64"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TABSTOP" seqno="17" type="N" level="2" pack="10" scale="0" length="2"
 pointer="0" inum="0" ufocc="0" />
<FLD name="WIDGETTYPE" seqno="18" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="0" ufocc="0" />
<FLD name="TEMPLATENAME" seqno="19" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UINHERIT" seqno="20" type="B" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="STARTMOD" seqno="21" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C1,0,0,0,,0,0,0,," />
<FLD name="ENDMOD" seqno="22" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C2,0,0,0,,0,0,0,," />
<FLD name="NEXTFLD" seqno="23" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C3,0,0,0,,0,0,0,," />
<FLD name="PREVFLD" seqno="24" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C4,0,0,0,,0,0,0,," />
<FLD name="ENCRYPT" seqno="25" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C5,0,0,0,,0,0,0,," />
<FLD name="DECRYPT" seqno="26" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C6,0,0,0,,0,0,0,," />
<FLD name="DOC" seqno="27" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C7,0,0,0,,0,0,0,," />
<FLD name="DETAIL" seqno="28" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C8,0,0,0,,0,0,0,," />
<FLD name="MENU" seqno="29" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C9,0,0,0,,0,0,0,," />
<FLD name="ERROR" seqno="30" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CA,0,0,0,,0,0,0,," />
<FLD name="UFORMAT" seqno="31" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CB,0,0,0,,0,0,0,," />
<FLD name="DEFORMAT" seqno="32" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CC,0,0,0,,0,0,0,," />
<FLD name="GENERAL" seqno="33" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CD,0,0,0,,0,0,0,," />
<FLD name="GETFOCUS" seqno="34" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CE,0,0,0,,0,0,0,," />
<FLD name="VCHANGED" seqno="35" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\CF,0,0,0,,0,0,0,," />
<FLD name="WIDGETCREATE" seqno="36" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DD,0,0,0,,0,0,0,," />
<FLD name="VALLAB" seqno="37" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DE,0,0,0,,0,0,0,," />
<FLD name="INITVALUE" seqno="38" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DF,0,0,0,,0,0,0,," />
<FLD name="TPLACTUAL" seqno="39" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E6,0,0,0,,0,0,0,," />
<FLD name="VLDF" seqno="40" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D0,0,0,0,,0,0,0,," />
<FLD name="UPOPUP" seqno="41" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D1,0,0,0,,0,0,0,," />
<FLD name="UISOBJID" seqno="42" type="B" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="HTML_FLDPROP" seqno="43" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D3,0,0,0,,0,0,0,," />
<FLD name="HTML_CTRLTYPE" seqno="44" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D4,0,0,0,,0,0,0,," />
<FLD name="HTML_HOOK_B" seqno="45" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D5,0,0,0,,0,0,0,," />
<FLD name="HTML_HOOK_M" seqno="46" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D6,0,0,0,,0,0,0,," />
<FLD name="HTML_HOOK_E" seqno="47" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D7,0,0,0,,0,0,0,," />
<FLD name="HTML_LBLHK_B" seqno="48" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D8,0,0,0,,0,0,0,," />
<FLD name="HTML_LBLHK_E" seqno="49" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\D9,0,0,0,,0,0,0,," />
<FLD name="HTML_FLDCLASS" seqno="50" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DA,0,0,0,,0,0,0,," />
<FLD name="HTML_LBLCLASS" seqno="51" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DB,0,0,0,,0,0,0,," />
<FLD name="UFOPERS" seqno="52" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\DC,0,0,0,,0,0,0,," />
<FLD name="UFTRIGGERS" seqno="53" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E0,0,0,0,,0,0,0,," />
<FLD name="UGEOMETRY" seqno="54" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E1,0,0,0,,0,0,0,," />
<FLD name="USCOPE" seqno="55" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E2,0,0,0,,0,0,0,," />
<FLD name="UFORMATS" seqno="56" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E3,0,0,0,,0,0,0,," />
<FLD name="UHINTERFACE" seqno="57" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E4,0,0,0,,0,0,0,," />
<FLD name="WEBWIDGETTYPE" seqno="58" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E5,0,0,0,,0,0,0,," />
<FLD name="WEBWIDGETCREATE" seqno="59" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\E6,0,0,0,,0,0,0,," />
</DSC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">COMMIT_AUTHOR</DAT>
<DAT name="GRP">SVN_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">COMMIT_AUTHOR</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2014-11-14T16:59:39.00</DAT>
<DAT name="ULABEL">COMMIT_AUTHOR</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">VC</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">COMMIT_REVISION</DAT>
<DAT name="GRP">SVN_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">COMMIT_REVISION</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2014-11-14T16:59:39.00</DAT>
<DAT name="ULABEL">COMMIT_REVISION</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">VC</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">COMMIT_TIME</DAT>
<DAT name="GRP">SVN_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">COMMIT_TIME</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2014-11-14T16:59:39.00</DAT>
<DAT name="ULABEL">COMMIT_TIME</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">VC</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">FILE_NAME</DAT>
<DAT name="GRP">SVN_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">FILE_NAME</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2014-11-14T16:59:39.00</DAT>
<DAT name="ULABEL">FILE_NAME</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">VC</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">HASMODIFICATIONS</DAT>
<DAT name="GRP">SVN_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">HASMODIFICATIONS</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2014-11-14T16:59:39.00</DAT>
<DAT name="ULABEL">HASMODIFICATIONS</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">VC</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">ISLOCKED</DAT>
<DAT name="GRP">SVN_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">ISLOCKED</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2014-11-14T16:59:39.00</DAT>
<DAT name="ULABEL">ISLOCKED</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">VC</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">ISSVNITEM</DAT>
<DAT name="GRP">SVN_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
<DAT name="WEBWIDGETTYPE">EDITBOX</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">ISSVNITEM</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
<DAT name="WEBWIDGETTYPE">EDITBOX</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2014-11-14T16:59:39.00</DAT>
<DAT name="ULABEL">ISSVNITEM</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">VC</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">LOCKCOMMENT</DAT>
<DAT name="GRP">SVN_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">LOCKCOMMENT</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2014-11-14T16:59:39.00</DAT>
<DAT name="ULABEL">LOCKCOMMENT</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">VC</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">LOCKCREATIONDATE</DAT>
<DAT name="GRP">SVN_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">LOCKCREATIONDATE</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2014-11-14T16:59:39.00</DAT>
<DAT name="ULABEL">LOCKCREATIONDATE</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">VC</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">LOCKOWNER</DAT>
<DAT name="GRP">SVN_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">LOCKOWNER</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2014-11-14T16:59:39.00</DAT>
<DAT name="ULABEL">LOCKOWNER</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">VC</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">LOCK_STATUS</DAT>
<DAT name="GRP">SVN_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">LOCK_STATUS</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2014-11-14T16:59:39.00</DAT>
<DAT name="ULABEL">LOCK_STATUS</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">VC</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">MESSAGE</DAT>
<DAT name="GRP">SVN_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">MESSAGE</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2014-11-14T16:59:39.00</DAT>
<DAT name="ULABEL">MESSAGE</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">VC</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">MODIFIED_STAMP</DAT>
<DAT name="GRP">SVN_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">MODIFIED_STAMP</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2014-11-14T16:59:39.00</DAT>
<DAT name="ULABEL">MODIFIED_STAMP</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">VC</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">NEEDSLOCK</DAT>
<DAT name="GRP">SVN_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">NEEDSLOCK</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2014-11-14T16:59:39.00</DAT>
<DAT name="ULABEL">NEEDSLOCK</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">VC</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">PRESENT_PROPS</DAT>
<DAT name="GRP">SVN_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">PRESENT_PROPS</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2014-11-14T16:59:39.00</DAT>
<DAT name="ULABEL">PRESENT_PROPS</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">VC</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">STATUS</DAT>
<DAT name="GRP">SVN_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">STATUS</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2014-11-14T16:59:39.00</DAT>
<DAT name="ULABEL">STATUS</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">VC</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">TEXT_STATUS</DAT>
<DAT name="GRP">SVN_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="ULABEL">TEXT_STATUS</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">SVN</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
<DAT name="UISOBJID">F</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2014-11-14T16:59:39.00</DAT>
<DAT name="ULABEL">TEXT_STATUS</DAT>
<DAT name="GRP">WC_STATUS</DAT>
<DAT name="UBASE">VC</DAT>
<DAT name="UFORM">VC_MAIN</DAT>
<DAT name="UINHERIT">F</DAT>
</OCC>
</TABLE>
<TABLE>
<DSC name="UXREGS" model="DICT" system="S" pseudo ="73" level="1" noupdate="0"
 rbk="0" ffsql="0" transnr="0" segsize="0" ufocc="0" charset=".U">
<FLD name="UTIMESTAMP" seqno="1" type="E" level="2" pack="0" scale="0" length="15"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_STAT" seqno="2" type="S" level="2" pack="0" scale="0" length="4"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_TYPE" seqno="3" type="S" level="2" pack="0" scale="0" length="2"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_FORMLIB" seqno="4" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="2" ufocc="0" mandatory="yes" idxnum="1,3" idxsnr="101,1" />
<FLD name="U_NAME" seqno="5" type="S" level="2" pack="0" scale="0" length="32"
 pointer="0" inum="2" ufocc="0" mandatory="yes" idxnum="1,2" idxsnr="102,1" />
<FLD name="UVERS" seqno="6" type="S" level="2" pack="0" scale="0" length="12"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UDESCR" seqno="7" type="S" level="2" pack="0" scale="0" length="25"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_DTYP" seqno="8" type="S" level="2" pack="0" scale="0" length="2"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_LAYOUT" seqno="9" type="S" level="2" pack="0" scale="0" length="46"
 pointer="0" inum="0" ufocc="0" />
<FLD name="U_DOC" seqno="10" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C1,0,0,0,,0,0,0,," />
<FLD name="USCOPE" seqno="11" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C2,0,0,0,,0,0,0,," />
<FLD name="UHINTERFACE" seqno="12" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C3,0,0,0,,0,0,0,," />
</DSC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-19T16:18:58.00</DAT>
<DAT name="U_FORMLIB">VC_MAIN</DAT>
<DAT name="U_NAME">IMPORTER</DAT>
<DAT name="UDESCR" xml:space='preserve'>Uniface importer</DAT>
<DAT name="U_DTYP">H</DAT>
<DAT name="USCOPE">PUB</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2015-07-08T12:18:02.00</DAT>
<DAT name="U_FORMLIB">VC_MAIN</DAT>
<DAT name="U_NAME">LOGGER</DAT>
<DAT name="UDESCR" xml:space='preserve'>Handle to nessage logger</DAT>
<DAT name="U_DTYP">H</DAT>
<DAT name="USCOPE">PUB</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2015-07-08T12:18:02.00</DAT>
<DAT name="U_FORMLIB">VC_MAIN</DAT>
<DAT name="U_NAME">LOGGER_OP</DAT>
<DAT name="UDESCR" xml:space='preserve'>Logger Operation</DAT>
<DAT name="U_DTYP">S</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2012-10-18T16:14:43.00</DAT>
<DAT name="U_FORMLIB">VC_MAIN</DAT>
<DAT name="U_NAME">SVN_LIST</DAT>
<DAT name="U_DTYP">S</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2015-07-13T09:14:42.00</DAT>
<DAT name="U_FORMLIB">VC_MAIN</DAT>
<DAT name="U_NAME">UI_HANDLE</DAT>
<DAT name="UDESCR" xml:space='preserve'>User Interface Handle</DAT>
<DAT name="U_DTYP">H</DAT>
<DAT name="USCOPE">PUB</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2015-07-13T09:14:42.00</DAT>
<DAT name="U_FORMLIB">VC_MAIN</DAT>
<DAT name="U_NAME">UI_MSG_OP</DAT>
<DAT name="UDESCR" xml:space='preserve'>Message display operation</DAT>
<DAT name="U_DTYP">S</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2015-07-02T10:35:16.00</DAT>
<DAT name="U_FORMLIB">VC_MAIN</DAT>
<DAT name="U_NAME">VCHANDLER</DAT>
<DAT name="UDESCR" xml:space='preserve'>Version control handle</DAT>
<DAT name="U_DTYP">H</DAT>
<DAT name="USCOPE">PUB</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2015-07-02T10:35:16.00</DAT>
<DAT name="U_FORMLIB">VC_MAIN</DAT>
<DAT name="U_NAME">VCINTERFACE</DAT>
<DAT name="UDESCR" xml:space='preserve'>Version control interface</DAT>
<DAT name="U_DTYP">S</DAT>
</OCC>
</TABLE>
</UNIFACE>
